@model Libol.Models.CIR_PATRON
@using Libol.Models;

@{
    ViewBag.Title = "Bạn đọc";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    label {
        text-align: right;
    }

    button {
        margin-right: 15px;
    }

    .avatar {
        position: absolute;
        top: 130px;
        right: 100px;
        width: 100px;
        height: 185px;
    }

        .avatar img, .avatar a {
            position: inherit;
            width: 100%;
        }

        .avatar a {
            left: -35px;
            top: 60px;
        }
</style>

<h3 style="margin-top: 20px;margin-bottom: 20px;">Cập Nhật Thông Tin Bạn Đọc</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row ">
            <label class="control-label col-md-1 align-self-center">Họ và tên</label>
            <div class="col-md-2" style="padding: 0px !important">
                <input type="text" class="form-control" id="strFirstName" value="@Model.FirstName @Model.MiddleName">
                <div class="invalid-feedback">
                    Vui lòng nhập Họ
                </div>
            </div>

            <div class="col-md-2" style="padding: 0px !important">
                <input type="text" class="form-control" id="strLastName" value="@Model.LastName">
                <div class="invalid-feedback ">
                    Vui lòng nhập Tên
                </div>
            </div>

            <div class="col-md-1">
                <div class="form-check-inline">
                    @if (Model.Sex == null || Model.Sex == "1")
                    {
                        <input type="radio" class="form-check-input" id="blnSex" name="sex" checked>
                        <label class="form-check-label" for="formCheck-1">Nam</label>
                        <input type="radio" class="form-check-input" id="radio2" name="sex">
                        <label class="form-check-label" for="formCheck-1">Nữ</label>
                    }
                    else
                    {
                        <input type="radio" class="form-check-input" id="blnSex" name="sex">
                        <label class="form-check-label" for="formCheck-1">Nam</label>
                        <input type="radio" class="form-check-input" id="radio2" name="sex" checked>
                        <label class="form-check-label" for="formCheck-1">Nữ</label>
                    }

                </div>
            </div>

            <div class="avatar">
                <input id="photoPatron" name="uploadFile" type="file" style="width: 100px;float: left;margin-left: -200px;" accept="image/x-png,image/gif,image/jpeg" onchange="onFileSelected(event)">
                <img src="~/Content/ImagePatron/NoImage.png" style="margin-left: -100px;width: 100px;height: 150px;" id="avatarImage" />
            </div>

        </div>

        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Ngày sinh</label>
            <div class="col-md-2" style="padding: 0px !important">
                @if (Model.DOB == null)
                {
                    <input type="date" class="form-control " id="strDOB">
                }
                else
                {
                    <input type="date" class="form-control " id="strDOB" value="@Model.DOB.Value.ToString("yyyy-MM-dd")">
                }


                <div class="invalid-feedback">
                    Vui lòng nhập Ngày sinh
                </div>
            </div>


            <label class="control-label col-md-2 align-self-center">Dân tộc</label>
            <select class="form-control col-md-3" id="intEthnicID">
                <option value="-1">----- Chọn -----</option>
                @foreach (var item in ViewBag.Ethnic)
                {
                    if (@Model.EthnicID == item.ID)
                    {
                        <option value="@item.ID" selected>@item.Ethnic</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.Ethnic</option>
                    }

                }
            </select>
            <a class="col-md-1" href="#" onclick="ShowDialogAddDictionary('intEthnicID')">Thêm</a>
        </div>

        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Số thẻ</label>
            <div class="col-md-2" style="padding: 0px !important">
                <input type="text" class="form-control " id="strCode" value="@Model.Code">
                <div class="invalid-feedback">
                    Vui lòng nhập Số thẻ
                </div>
            </div>

            <label class="control-label col-md-2 align-self-center">Nhóm bạn đọc</label>
            <div class=" col-md-3" style="padding: 0px !important">
                <select class="form-control" id="intPatronGroupID">
                    <option value="-1">----- Chọn -----</option>
                    @foreach (var item in ViewBag.PatronGroup)
                    {
                        if (@Model.PatronGroupID == item.ID)
                        {
                            <option value="@item.ID" selected>@item.Name</option>
                        }
                        else
                        {
                            <option value="@item.ID">@item.Name</option>
                        }

                    }
                </select>
                <div class="invalid-feedback">
                    Vui lòng chọn Nhóm bạn đọc
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Ngày cấp</label>
            <div class=" col-md-2" style="padding: 0px !important">
                @if (Model.LastIssuedDate == null)
                {
                    <input type="date" class="form-control" id="strLastIssuedDate">
                }
                else
                {
                    <input type="date" class="form-control" id="strLastIssuedDate" value="@Model.LastIssuedDate.Value.ToString("yyyy-MM-dd")">
                }
                <div class="invalid-feedback">
                    Vui lòng nhập Ngày cấp
                </div>
            </div>

            <label class="control-label col-md-2 align-self-center">Ngày hiệu lực</label>
            <div class=" col-md-2" style="padding: 0px !important">
                @if (Model.ValidDate.ToString("dd/MM/yyyy").Equals("01/01/0001"))
                {
                    <input type="date" class="form-control" id="strValidDate">
                }
                else
                {
                    <input type="date" class="form-control" id="strValidDate" value="@Model.ValidDate.ToString("yyyy-MM-dd")">
                }
                <div class="invalid-feedback">
                    Vui lòng nhập Ngày hiệu lực
                </div>
            </div>

            <label class="control-label col-md-2 align-self-center">Ngày hết hạn</label>
            <div class="col-md-2" style="padding: 0px !important">
                @if (Model.ExpiredDate.ToString("dd/MM/yyyy").Equals("01/01/0001"))
                {
                    <input type="date" class="form-control" id="strExpiredDate">
                }
                else
                {
                    <input type="date" class="form-control" id="strExpiredDate" value="@Model.ExpiredDate.ToString("yyyy-MM-dd")">
                }
                <div class="invalid-feedback">
                    Vui lòng nhập Ngày hết hạn
                </div>
            </div>

        </div>

        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Trình độ</label>
            <select class="form-control col-md-2" id="intEducationID">
                <option value="-1">----- Chọn -----</option>
                @foreach (var item in ViewBag.Education)
                {
                    if (Model.EducationID == item.ID)
                    {
                        <option value="@item.ID" selected>@item.EducationLevel</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.EducationLevel</option>
                    }
                }
            </select>
            <a href="#" class="col-md-1" onclick="ShowDialogAddDictionary('intEducationID')">Thêm</a>

            <label class="control-label col-md-1 align-self-center">Nghề nghiệp</label>
            <select class="form-control col-md-3" id="intOccupationID">
                <option value="-1">----- Chọn -----</option>
                @foreach (var item in ViewBag.Occupation)
                {
                    if (Model.OccupationID == item.ID)
                    {
                        <option value="@item.ID" selected>@item.Occupation</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.Occupation</option>
                    }
                }
            </select>
            <a href="#" class="col-md-1" onclick="ShowDialogAddDictionary('intOccupationID')">Thêm</a>
        </div>
        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Nơi làm việc</label>
            <input type="text" class="form-control col-md-2" id="strWorkPlace" value="@Model.WorkPlace">
        </div>
        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Trường</label>
            <div class="col-md-3" style="padding: 0px !important">
                <select class="form-control " onchange="OnchangeCollege()" id="college">
                    <option value="-1">----- Chọn -----</option>
                    @foreach (var item in ViewBag.College)
                    {
                        if (Model.CIR_PATRON_UNIVERSITY != null && Model.CIR_PATRON_UNIVERSITY.CollegeID == item.ID)
                        {
                            <option value="@item.ID" selected>@item.College</option>
                        }
                        else
                        {
                            <option value="@item.ID">@item.College</option>
                        }

                    }
                </select>
                <div class="invalid-feedback">
                    Vui lòng chọn Trường
                </div>
            </div>

            <a href="#" class="col-md-1" onclick="ShowDialogAddDictionary('college')">Thêm</a>
            <label class="control-label align-self-center" style="margin-right: 10px">Khoa</label>
            <div class=" col-md-3" style="padding: 0px !important">
                <select class="form-control" id="faculty">
                    <option value="-1">----- Chọn -----</option>
                    @if (Model.CIR_PATRON_UNIVERSITY != null)
                    {
                        foreach (var item in ViewBag.Faculty)
                        {
                            if (Model.CIR_PATRON_UNIVERSITY != null && Model.CIR_PATRON_UNIVERSITY.FacultyID == item.ID)
                            {
                                <option value="@item.ID" selected>@item.Faculty</option>
                            }
                            else
                            {
                                <option value="@item.ID">@item.Faculty</option>
                            }
                        }
                    }
                </select>
                <div class="invalid-feedback">
                    Vui lòng chọn Khoa
                </div>
            </div>

            <a href="#" class="col-md-1" onclick="ShowDialogAddDictionary('faculty')">Thêm</a>
            <label class="control-label col-md-1 align-self-center">Khóa</label>
            @if (Model.CIR_PATRON_UNIVERSITY != null)
            {
                <input type="text" class="form-control col-md-1" id="strGrade" value="@Model.CIR_PATRON_UNIVERSITY.Grade">
            }
            else
            {
                <input type="text" class="form-control col-md-1" id="strGrade">
            }
            <label class="control-label col-md-1 align-self-center">Lớp</label>
            @if (Model.CIR_PATRON_UNIVERSITY != null)
            {
                <input type="text" class="form-control col-md-1" id="strClass" value="@Model.CIR_PATRON_UNIVERSITY.Class">
            }
            else
            {
                <input type="text" class="form-control col-md-1" id="strClass">
            }

        </div>

        <h4>Địa Chỉ</h4>
        <hr />
        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Địa chỉ</label>
            @if (Model.CIR_PATRON_OTHER_ADDR != null && Model.CIR_PATRON_OTHER_ADDR.Count > 0)
            {
                <input type="text" class="form-control col-md-6" id="strAddress" value="@Model.CIR_PATRON_OTHER_ADDR.First().Address">
            }
            else
            {
                <input type="text" class="form-control col-md-6" id="strAddress">
            }
            <label class="control-label col-md-1 align-self-center">Thành phố</label>
            @if (Model.CIR_PATRON_OTHER_ADDR != null && Model.CIR_PATRON_OTHER_ADDR.Count > 0)
            {
                <input type="text" class="form-control col-md-2" id="strCity" value="@Model.CIR_PATRON_OTHER_ADDR.First().City">
            }
            else
            {
                <input type="text" class="form-control col-md-2" id="strCity">
            }
        </div>
        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Tỉnh</label>
            <select class="form-control col-md-2" id="intProvinceID">
                @foreach (var item in ViewBag.Province)
                {
                    if (Model.CIR_PATRON_OTHER_ADDR != null && Model.CIR_PATRON_OTHER_ADDR.Count() > 0 && Model.CIR_PATRON_OTHER_ADDR.First().ProvinceID == item.ID)
                    {
                        <option value="@item.ID" selected>@item.Province</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.Province</option>
                    }
                }
            </select>
            <a href="#" class="col-md-1" onclick="ShowDialogAddDictionary('intProvinceID')">Thêm</a>
            <label class="control-label col-md-1 align-self-center">Nước</label>
            <select class="form-control col-md-2" id="intCountryID">
                @foreach (var item in ViewBag.Countries)
                {
                    if (Model.CIR_PATRON_OTHER_ADDR != null && Model.CIR_PATRON_OTHER_ADDR.Count() > 0 && Model.CIR_PATRON_OTHER_ADDR.First().CountryID == item.ID)
                    {
                        <option value="@item.ID" selected>@item.Country</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.Country</option>
                    }
                }
            </select>
            <label class="control-label col-md-1 align-self-center">Mã vùng</label>
            @if (Model.CIR_PATRON_OTHER_ADDR != null && Model.CIR_PATRON_OTHER_ADDR.Count() > 0)
            {
                <input type="text" class="form-control col-md-1" id="strZip" value="@Model.CIR_PATRON_OTHER_ADDR.First().ZIP">
            }
            else
            {
                <input type="text" class="form-control col-md-1" id="strZip">
            }
            <div class="col-md-2">
                @if (Model.CIR_PATRON_OTHER_ADDR != null && Model.CIR_PATRON_OTHER_ADDR.Count() > 0)
                {
                    <input type="checkbox" id="intisActive" checked />
                }
                else
                {
                    <input type="checkbox" id="intisActive" />
                }
                Địa chỉ chính
            </div>

        </div>


        <h4>Thông tin khác</h4>

        <hr />

        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Điện thoại</label>
            <input type="text" class="form-control col-md-2" id="strTelephone" value="@Model.Telephone">
            <label class="control-label col-md-3 align-self-center">Mobile</label>
            <input type="text" class="form-control col-md-2" id="strMobile" value="@Model.Mobile">
        </div>
        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Email</label>
            <input type="email" class="form-control col-md-2" id="strEmail" value="@Model.Email">
            <label class="control-label col-md-3 align-self-center">Chứng minh thư</label>
            <input type="text" class="form-control col-md-2" id="strIDCard" value="@Model.IDCard">
        </div>
        <div class="form-group row">
            <label class="control-label col-md-1 align-self-center">Ghi chú</label>
            <textarea class="form-control col-md-5" rows="5" id="strNote" value="@Model.Note"></textarea>
        </div>
        <div class="form-group row">
            <div class="col-md-1"></div>
            @if (Model.ID > 0)
            {
                <button type="button" class="btn btn-primary col-md-1" onclick="UpdatePatron()">Cập nhật</button>
                <button type="button" class="btn btn-primary col-md-1" onclick="ResetUpdate()">Đặt lại</button>
            }
            else
            {
                <button type="button" class="btn btn-primary col-md-1" onclick="NewPatron()">Cập nhật</button>
                <button type="button" class="btn btn-primary col-md-1" onclick="Reset()">Đặt lại</button>
            }

            <button type="button" class="btn btn-primary col-md-1" onclick="SearchPatron()">Tìm kiếm</button>
        </div>

    </div>

    <input type="hidden" value="@Model.ID" id="IDToUpdate" />
}

<div class="modal" tabindex="-1" role="dialog" id="modalNotify">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thông tin bạn đọc</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="notifyMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="modalNotifyUpdate">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thông tin bạn đọc</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="notifyMessageUpdate"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="reloadUpdate()">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="modalDictionary">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="lblDictionary">Thêm</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <input type="text" class="form-control" id="txtDictionary">
                    <input type="hidden" id="field">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="AddDictionarry()">Thêm</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<script>
    function OnchangeCollege() {
        var e = document.getElementById("college");
        var id = e.options[e.selectedIndex].value;
        var empObj = {
            CollegeID: id
        };
        $.ajax({
            url: "/Patron/OnchangeCollege",
            data: JSON.stringify(empObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                var html = "<option value='-1'>----- Chọn -----</option>"
                for (r in result) {
                    html = html + "<option value=" + result[r].ID + ">" + result[r].Faculty + "</option>"
                }
                document.getElementById("faculty").innerHTML = html;

            },
            error: function (errormessage) {

            }
        });
    }

    function onFileSelected(event) {
        var selectedFile = event.target.files[0];
        var reader = new FileReader();

        var imgtag = document.getElementById("avatarImage");
        imgtag.title = selectedFile.name;

        reader.onload = function (event) {
            imgtag.src = event.target.result;
        };

        reader.readAsDataURL(selectedFile);
    }

    function NewPatron() {

        var intEthnicIDElement = document.getElementById("intEthnicID");
        var EthnicID = intEthnicIDElement.options[intEthnicIDElement.selectedIndex].value == -1 ? null : intEthnicIDElement.options[intEthnicIDElement.selectedIndex].value;

        var intEducationIDElement = document.getElementById("intEducationID");
        var EducationID = intEducationIDElement.options[intEducationIDElement.selectedIndex].value == -1 ? null : intEducationIDElement.options[intEducationIDElement.selectedIndex].value;

        var intOccupationIDElement = document.getElementById("intOccupationID");
        var OccupationID = intOccupationIDElement.options[intOccupationIDElement.selectedIndex].value == -1 ? null : intOccupationIDElement.options[intOccupationIDElement.selectedIndex].value;

        var intPatronGroupIDElement = document.getElementById("intPatronGroupID");
        var PatronGroupID = intPatronGroupIDElement.options[intPatronGroupIDElement.selectedIndex].value == -1 ? null : intPatronGroupIDElement.options[intPatronGroupIDElement.selectedIndex].value;

        var intProvinceIDElement = document.getElementById("intProvinceID");
        var ProvinceID = intProvinceIDElement.options[intProvinceIDElement.selectedIndex].value;

        var intCountryIDElement = document.getElementById("intCountryID");
        var CountryID = intCountryIDElement.options[intCountryIDElement.selectedIndex].value;

        var intCollegeIDElement = document.getElementById("college");
        var CollegeID = intCollegeIDElement.options[intCollegeIDElement.selectedIndex].value;

        var intFacultyIDElement = document.getElementById("faculty");
        var FacultyID = intFacultyIDElement.options[intFacultyIDElement.selectedIndex].value;

        var code = document.getElementById("strCode").value;
        var codeUpperCase = code.toUpperCase();

        var empObj = {
            strCode: codeUpperCase,
            strValidDate: document.getElementById("strValidDate").value,
            strExpiredDate: document.getElementById("strExpiredDate").value,
            strLastIssuedDate: document.getElementById("strLastIssuedDate").value,
            strLastName: document.getElementById("strLastName").value,
            strFirstName: document.getElementById("strFirstName").value,
            blnSex: document.getElementById("blnSex").checked,
            strDOB: document.getElementById("strDOB").value,
            intEthnicID: EthnicID,
            intEducationID: EducationID,
            intOccupationID: OccupationID,
            strWorkPlace: document.getElementById("strWorkPlace").value,
            strTelephone: document.getElementById("strTelephone").value,
            strMobile: document.getElementById("strMobile").value,
            strEmail: document.getElementById("strEmail").value,
            strPortrait: null,
            intPatronGroupID: PatronGroupID,
            strNote: document.getElementById("strNote").value,
            intIsQue: 0,
            strIDCard: document.getElementById("strIDCard").value,
            strAddress: document.getElementById("strAddress").value,
            intProvinceID: ProvinceID,
            strCity: document.getElementById("strCity").value,
            intCountryID: CountryID,
            strZip: document.getElementById("strZip").value,
            intisActive: document.getElementById("intisActive").checked,
            intCollegeID: CollegeID,
            intFacultyID: FacultyID,
            strGrade: document.getElementById("strGrade").value,
            strClass: document.getElementById("strClass").value
        };
        $.ajax({
            url: "/Patron/NewPatron",
            data: JSON.stringify(empObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                switch (result.CodeError) {
                    case 0:
                        UploadPhotoPatron(result.Data);
                        break;
                    case 1:
                        showInvalid(result.Data);
                        break;
                    case 2:
                        $("#modalNotify").modal();
                        document.getElementById("notifyMessage").innerText = result.Data;
                        break;
                    default:
                        UploadPhotoPatron(result.Data);

                }
            },
            error: function (errormessage) {

            }
        });
    }

    function UpdatePatron() {
        var id = document.getElementById("IDToUpdate").value;

        var intEthnicIDElement = document.getElementById("intEthnicID");
        var EthnicID = intEthnicIDElement.options[intEthnicIDElement.selectedIndex].value == -1 ? null : intEthnicIDElement.options[intEthnicIDElement.selectedIndex].value;

        var intEducationIDElement = document.getElementById("intEducationID");
        var EducationID = intEducationIDElement.options[intEducationIDElement.selectedIndex].value == -1 ? null : intEducationIDElement.options[intEducationIDElement.selectedIndex].value;

        var intOccupationIDElement = document.getElementById("intOccupationID");
        var OccupationID = intOccupationIDElement.options[intOccupationIDElement.selectedIndex].value == -1 ? null : intOccupationIDElement.options[intOccupationIDElement.selectedIndex].value;

        var intPatronGroupIDElement = document.getElementById("intPatronGroupID");
        var PatronGroupID = intPatronGroupIDElement.options[intPatronGroupIDElement.selectedIndex].value == -1 ? null : intPatronGroupIDElement.options[intPatronGroupIDElement.selectedIndex].value;

        var intProvinceIDElement = document.getElementById("intProvinceID");
        var ProvinceID = intProvinceIDElement.options[intProvinceIDElement.selectedIndex].value;

        var intCountryIDElement = document.getElementById("intCountryID");
        var CountryID = intCountryIDElement.options[intCountryIDElement.selectedIndex].value;

        var intCollegeIDElement = document.getElementById("college");
        var CollegeID = intCollegeIDElement.options[intCollegeIDElement.selectedIndex].value;

        var intFacultyIDElement = document.getElementById("faculty");
        var FacultyID = intFacultyIDElement.options[intFacultyIDElement.selectedIndex].value;

        var code = document.getElementById("strCode").value;
        var codeUpperCase = code.toUpperCase();

        var empObj = {
            ID: id,
            strCode: codeUpperCase,
            strValidDate: document.getElementById("strValidDate").value,
            strExpiredDate: document.getElementById("strExpiredDate").value,
            strLastIssuedDate: document.getElementById("strLastIssuedDate").value,
            strLastName: document.getElementById("strLastName").value,
            strFirstName: document.getElementById("strFirstName").value,
            blnSex: document.getElementById("blnSex").checked,
            strDOB: document.getElementById("strDOB").value,
            intEthnicID: EthnicID,
            intEducationID: EducationID,
            intOccupationID: OccupationID,
            strWorkPlace: document.getElementById("strWorkPlace").value,
            strTelephone: document.getElementById("strTelephone").value,
            strMobile: document.getElementById("strMobile").value,
            strEmail: document.getElementById("strEmail").value,
            strPortrait: null,
            intPatronGroupID: PatronGroupID,
            strNote: document.getElementById("strNote").value,
            intIsQue: 0,
            strIDCard: document.getElementById("strIDCard").value,
            strAddress: document.getElementById("strAddress").value,
            intProvinceID: ProvinceID,
            strCity: document.getElementById("strCity").value,
            intCountryID: CountryID,
            strZip: document.getElementById("strZip").value,
            intisActive: document.getElementById("intisActive").checked,
            intCollegeID: CollegeID,
            intFacultyID: FacultyID,
            strGrade: document.getElementById("strGrade").value,
            strClass: document.getElementById("strClass").value
        };
        $.ajax({
            url: "/Patron/UpdatePatron",
            data: JSON.stringify(empObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                switch (result.CodeError) {
                    case 0:
                        UploadPhotoPatronUpdate(result.Data);
                        break;
                    case 1:
                        showInvalid(result.Data);
                        break;
                    case 2:
                        $("#modalNotify").modal();
                        document.getElementById("notifyMessage").innerText = result.Data;
                        break;
                    default:
                        UploadPhotoPatronUpdate(result.Data);

                }
            },
            error: function (errormessage) {

            }
        });
    }

    function UploadPhotoPatron(strCode) {
        var formData = new FormData();
        var totalFiles = document.getElementById("photoPatron").files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById("photoPatron").files[i];
            formData.append("photoPatron", file);
            formData.append("strCode", strCode);
        }
        $.ajax({
            type: "POST",
            url: '/Patron/UploadPhotoPatron',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                $("#modalNotify").modal();
                document.getElementById("notifyMessage").innerText = "Thêm bạn đọc thành công!";
                Reset();
            },
            error: function (error) {
            }
        });
    }

    function UploadPhotoPatronUpdate(strCode) {
        var formData = new FormData();
        var totalFiles = document.getElementById("photoPatron").files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById("photoPatron").files[i];
            formData.append("photoPatron", file);
            formData.append("strCode", strCode);
        }
        $.ajax({
            type: "POST",
            url: '/Patron/UploadPhotoPatron',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                $("#modalNotifyUpdate").modal();
                document.getElementById("notifyMessageUpdate").innerText = "Cập nhập bạn đọc thành công!";
                Reset();
            },
            error: function (error) {
            }
        });
    }

    function Reset() {
        document.getElementById("strCode").value = "",
            document.getElementById("strValidDate").value = "",
            document.getElementById("strExpiredDate").value = "",
            document.getElementById("strLastIssuedDate").value = "",
            document.getElementById("strLastName").value = "",
            document.getElementById("strFirstName").value = "",
            document.getElementById("blnSex").checked = true,
            document.getElementById("strDOB").value = "",
            document.getElementById("strWorkPlace").value = "",
            document.getElementById("strTelephone").value = "",
            document.getElementById("strMobile").value = "",
            document.getElementById("strEmail").value = "",
            document.getElementById("strNote").value = "",
            document.getElementById("strIDCard").value = "",
            document.getElementById("strAddress").value = "",
            document.getElementById("strCity").value = "",
            document.getElementById("strZip").value = "",
            document.getElementById("intisActive").checked = false,
            document.getElementById("strGrade").value = "",
            document.getElementById("strClass").value = "",
            document.getElementById("intEthnicID").value = -1,
            document.getElementById("intEducationID").value = -1,
            document.getElementById("intOccupationID").value = -1,
            document.getElementById("intPatronGroupID").value = -1,
            document.getElementById("college").value = -1,
            document.getElementById("faculty").innerHTML = "<option value='-1'>----- Chọn -----</option>",
            document.getElementById("faculty").value = -1,
            document.getElementById("avatarImage").src = "/Content/ImagePatron/NoImage.png"

        hideInvalid("strFirstName-strLastName-strDOB-strCode-intPatronGroupID-strValidDate-strExpiredDate-strLastIssuedDate-college-faculty");
    }

    function ResetUpdate() {
        location.reload();
    }

    function showInvalid(invalidFields) {
        var fields = invalidFields.split("-");
        for (i = 0; i < fields.length; i++) {
            if (fields[i] != "") {
                var element = document.getElementById(fields[i]);
                element.classList.add("is-invalid");
            }
        }
    }

    function hideInvalid(invalidFields) {
        var fields = invalidFields.split("-");
        for (i = 0; i < fields.length; i++) {
            if (fields[i] != "") {
                var element = document.getElementById(fields[i]);
                element.classList.remove("is-invalid");
            }
        }
    }

    function ShowDialogAddDictionary(lblDictionary) {
        if (lblDictionary == "intEthnicID") {
            document.getElementById("lblDictionary").innerText = "Thêm dân tộc";
            document.getElementById("field").value = "intEthnicID";
            $("#modalDictionary").modal();
        }
        if (lblDictionary == "intOccupationID") {
            document.getElementById("lblDictionary").innerText = "Thêm nghề nghiệp";
            document.getElementById("field").value = "intOccupationID";
            $("#modalDictionary").modal();
        }
        if (lblDictionary == "college") {
            document.getElementById("lblDictionary").innerText = "Thêm trường";
            document.getElementById("field").value = "college";
            $("#modalDictionary").modal();
        }
        if (lblDictionary == "faculty") {
            var intCollegeIDElement = document.getElementById("college");
            var CollegeID = intCollegeIDElement.options[intCollegeIDElement.selectedIndex].value;
            if (CollegeID == -1) {
                $("#modalNotify").modal();
                document.getElementById("notifyMessage").innerText = "Vui lòng chọn trường!";
            } else {
                document.getElementById("lblDictionary").innerText = "Thêm khoa";
                document.getElementById("field").value = "faculty";
                $("#modalDictionary").modal();
            }

        }
        if (lblDictionary == "intProvinceID") {
            document.getElementById("lblDictionary").innerText = "Thêm tỉnh";
            document.getElementById("field").value = "intProvinceID";
            $("#modalDictionary").modal();
        }
        if (lblDictionary == "intEducationID") {
            document.getElementById("lblDictionary").innerText = "Thêm trình độ";
            document.getElementById("field").value = "intEducationID";
            $("#modalDictionary").modal();
        }

    }

    function AddDictionarry() {
        var intCollegeIDElement = document.getElementById("college");
        var college = intCollegeIDElement.options[intCollegeIDElement.selectedIndex].value;
        var empObj = {
            field: document.getElementById("field").value,
            data: document.getElementById("txtDictionary").value,
            CollegeID: college
        }
        $.ajax({
            url: "/Patron/AddDictionary",
            data: JSON.stringify(empObj),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                var html = "<option value='-1'>----- Chọn -----</option>";
                if (result.Field == "intProvinceID") {
                    html = "";
                }
                for (r in result.ListSelection) {
                    html = html + "<option value=" + result.ListSelection[r].ID + ">" + result.ListSelection[r].Data + "</option>"
                }
                document.getElementById(result.Field).innerHTML = html;
            },
            error: function (errormessage) {

            }
        });
    }

    function SearchPatron() {
        window.location.href = "/Patron/SearchPatron"
    }

    function reloadUpdate() {
        window.location.href = "/Patron/Create"
    }
</script>
