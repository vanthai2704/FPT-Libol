
@{
    ViewBag.Title = "LockPatronStats";
}

<head>
    <style>
        textarea {
            width: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            position: absolute;
            resize: none;
            -webkit-box-sizing: border-box; /* <=iOS4, <= Android  2.3 */
            -moz-box-sizing: border-box; /* FF1+ */
            box-sizing: border-box; /* Chrome, IE8, Opera, Safari 5.1*/
        }

        table, th, td {
            position: relative;
        }

        label {
            text-align: right;
        }

        .form-control {
            font-size: 0.8rem !important;
    </style>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">

    <link rel="stylesheet" type="text/css" href="~/Content/DataTables/DataTables-1.10.18/css/dataTables.bootstrap4.css">
    <link rel="stylesheet" type="text/css" href="~/Content/DataTables/Select-1.3.0/css/select.bootstrap4.css">
    <script type="text/javascript" charset="utf8" src="~/Content/DataTables/DataTables-1.10.18/js/jquery.dataTables.js"></script>
    <script type="text/javascript" charset="utf8" src="~/Content/DataTables/DataTables-1.10.18/js/dataTables.bootstrap4.js"></script>
    <script type="text/javascript" charset="utf8" src="~/Content/DataTables/Select-1.3.0/js/dataTables.select.js"></script>
    <script>
        var table;
        $(document).ready(function () {
            table = $('#table').DataTable({
                "processing": true,
                "serverSide": true,
                ajax: {
                    url: "/Circulation/GetLockPatron",
                    type: 'POST',
                    "data": function (d) {
                        //return $.extend({}, d, {
                        //    "PatronCode": document.getElementById("PatronCodeFilter").value,
                            //"Note": document.getElementById("Note").value
                            //"StartedDate": document.getElementById("StartedDate").value,
                            //"FinishDate": document.getElementById("FinishDate").value
                            d.PatronCode = document.getElementById("PatronCodeFilter").value,
                            d.Note = document.getElementById("NoteFilter").value,
                            d.StartedDate = document.getElementById("LockDateFromFilter").value,
                            d.FinishDate = document.getElementById("LockDateToFilter").value

                        //});
                    }
                },
                columnDefs: [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 6
                }
                ],
                select: "multi",
                columns: [
                    { "data": "FullName" },
                    { "data": "PatronCode" },
                    { "data": "StartedDate" },
                    { "data": "FinishDate" },
                    { "data": "LockedDays" },
                    { "data": "Note" },
                    {
                        "data": null,
                        "defaultContent": "",
                    },
                    {
                        "render": function (data, type, full, meta) {
                            return '<button class="btn btn-info" type="button"  onclick="ShowUpdateForm(' + "'"
                                + full.PatronCode + "'," +
                                "'" + full.FullName + "'," +
                                "'" + full.StartedDate + "'," +
                                "'" + full.FinishDate + "'," +
                                "'" + full.LockedDays + "'," +
                                "'" + full.Note
                                + "'" + ')">Edit</button>';
                        }
                    },
                ],

                lengthChange: false,
                buttons: [
                    {
                        extend: 'print',
                        title: function () { var printTitle = 'Danh sách bạn đọc bị khóa'; return printTitle; }
                    },
                    'excel',
                    'csv',
                    'pdf',
                    'colvis'
                ],


                order: false,
            });

            $('#table').on('click', '#select_all', function () {
                if ($('#select_all:checked').val() === 'on') {
                    table.rows({ search: 'applied' }).select();
                }
                else {
                    table.rows().deselect();
                }
            });

            //$('#table-select-all').on('click', function () {
            //    // Get all rows with search applied
            //    var rows = table.rows({ 'search': 'applied' }).nodes();
            //    // Check/uncheck checkboxes for all rows in the table
            //    $('input[type="checkbox"]', rows).prop('checked', this.checked);
            //});

            //// Handle click on checkbox to set state of "Select all" control
            //$('#table tbody').on('change', 'input[type="checkbox"]', function () {
            //    // If checkbox is not checked
            //    if (!this.checked) {
            //        var el = $('#table-select-all').get(0);
            //        // If "Select all" control is checked and has 'indeterminate' property
            //        if (el && el.checked && ('indeterminate' in el)) {
            //            // Set visual state of "Select all" control
            //            // as 'indeterminate'
            //            el.indeterminate = true;
            //        }
            //    }
            //});

            $("#ExportReporttoExcel").on("click", function () {
                table.button('.buttons-excel').trigger();
            });

            $("#Print").on("click", function () {
                table.button('.buttons-print').trigger();
            });

        });

        function LockCard() {
            var cardNumber = document.getElementById("PatronCode").value;
            var startDate = document.getElementById("StartedDate").value;
            var lockDays = document.getElementById("LockedDays").value;
            var note = document.getElementById("Note").value;
            $.ajax({
                url: "/Circulation/LockCardPatron",
                data: JSON.stringify({ cardNumber: cardNumber, startDate: startDate, lockDays: lockDays, note: note }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function () {
                    alert('Bạn đã khóa thẻ thành công');
                    $('#table').DataTable().ajax.reload(null, false);
                },
                error: function () {
                    alert('Khóa thẻ không thành công');
                }

            });

        }
        function UnLockCardPatron() {

            var data = $('#table').DataTable().rows('.selected').data();
            var patroncodeList = new Array();
            for (var i = 0; i < data.length; i++) {
                patroncodeList.push(data[i]["PatronCode"]);
            }
            debugger;
            $.ajax({
                url: "/Circulation/UnLockCardPatron",
                data: JSON.stringify({ patroncodeList }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function () {
                    alert('Bạn đã mở khóa thẻ thành công');
                    $('#table').DataTable().ajax.reload(null, false);
                },
                error: function () {
                    alert('Mở khóa thẻ không thành công');
                }

            });

        }
        var PatronCode_Update;
        var FullName_Update;
        var StartedDate_Update;
        var FinishDate_Update;
        var LockedDays_Update;
        var Note_Update;

        function ShowUpdateForm(PatronCode,
            FullName,
            StartedDate,
            FinishDate,
            LockedDays,
            Note
        ) {

            PatronCode_Update = PatronCode;
            FullName_Update = FullName;
            StartedDate_Update = StartedDate;
            FinishDate_Update = FinishDate;
            LockedDays_Update = LockedDays;
            Note_Update = Note;

            document.getElementById("txtFullName").value = FullName;
            document.getElementById("txtPatronCode").value = PatronCode;
            document.getElementById("txtStartdate").value = StartedDate;
            document.getElementById("txtFinishdate").value = FinishDate;
            document.getElementById("txtLockedDay").value = LockedDays;
            document.getElementById("txtNote").value = Note;

            document.getElementById("myModal").style.display = "block";
        }

        function CancelUpdate() {
            document.getElementById("myModal").style.display = "none";
        }


    </script>
</head>
@using (Html.BeginForm())
{
    <label style="margin-top:10px; text-align: right; color: red"><h5>Thông tin thẻ bạn đọc bị khóa</h5></label>
    <div class="row">
        <div class="col-6">
            <div class="form-group row col-12">
                <label class="control-label col-md-6 align-self-center">Số thẻ : </label>
                <input type="text" class="form-control col-md-2" id="PatronCode">
            </div>
            <div class="form-group row col-12">
                <label class="control-label col-md-6 align-self-center">Ngày bắt đầu : </label>
                <div class="form-group"><input class="form-control " type="date" id="StartedDate" value="@string.Format("{0:yyyy-MM-dd}", System.DateTime.Now)" /></div>
            </div>
            <div class="form-group row col-12">
                <label class="control-label col-md-6 align-self-center">Số ngày : </label>
                <input type="text" class="form-control col-md-2" id="LockedDays">

            </div>
        </div>
        <div class="col-6">
            <div class="form-group row col-12">
                <label class="control-label col-md-2 align-self-center">Ghi chú : </label>
                <textarea type="text" class="form-control col-md-4" id="Note"></textarea>
            </div>
            <div class="form-group row col-3">
                <div style="margin : auto">
                    <button type="button" class="btn btn-primary form-control float-left" onclick='LockCard()'>Khóa thẻ</button>
                </div>
            </div>
        </div>
    </div>
    <label style="margin-top:10px; text-align: right ; color: blue"><h5>Danh sách những thẻ bị khóa</h5></label>
    <div id="Main">
        <div class="form-row">
            <div class="form-group col-sm">
                <label for="Library">Thư viện trường</label>
                @Html.DropDownList("LibraryFilter", ViewData["lib"] as List<SelectListItem>, new { @class = "form-control" })
            </div>
            <div class="form-group col-sm">
                <label for="PatronCodeFilter">Thẻ bạn đọc</label>
                <input type="text" class="form-control" id="PatronCodeFilter" name="PatronCodeFilter" value="@Request.Form["PatronCodeFilter"]">
            </div>
            <div class="form-group col-sm">
                <label for="NoteFilter">Lý do</label>
                <input type="text" class="form-control" id="NoteFilter" name="NoteFilter" value="@Request.Form["NoteFilter"]">
            </div>
            <div class="form-group col-sm">
                <label for="LockDateFromFilter">Thời gian khóa Từ</label>
                <input type="text" class="form-control" id="LockDateFromFilter" name="LockDateFromFilter">
            </div>
            <div class="form-group col-sm">
                <label for="LockDateToFilter">Đến</label>
                <input type="date" class="form-control" id="LockDateToFilter" name="LockDateToFilter">
            </div>
        </div>
        <button id="Find" type="submit" class="btn btn-primary">Lọc</button>

        <div id="ContentStatLockPatron">
            <table id="table" class="table table-striped table-bordered datatables" style="border-collapse: collapse;" border="1">
                <thead>
                    <tr>
                        <th>Họ và tên bạn đọc</th>
                        <th>Số thẻ bạn đọc</th>
                        <th>Từ ngày</th>
                        <th>Đến ngày</th>
                        <th>Số ngày</th>
                        <th>Lý do</th>
                        <th style="text-align: center;"><input type="checkbox" id="select_all" /></th>
                        <th>Sửa</th>
                    </tr>
                </thead>

                <tfoot>
                    <tr></tr>
                </tfoot>
            </table>
            <div class="col-1">
                <button type="button" class="btn btn-primary form-control float-left" onclick="UnLockCardPatron()">Xóa</button>
            </div>
            <div style="margin-top:20px;" class="btn-group d-xl-flex justify-content-xl-center" role="group">
                <button id="Print" type="button" style="margin-right:20px;">In</button>
                <button id="ExportReporttoExcel" type="button" style="margin-right:20px;">Lưu vào file excel</button>
            </div>
        </div>
    </div>

    <div id="myModal" class="modal face">

        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2 class=""modal-title">Sửa thông tin thẻ bị khóa</h2>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="txtFullName">Full Name:</label>
                    <input type="text" class="form-control" id="txtFullName">
                </div>
                <div class="form-group">
                    <label for="txtPatronCode">Số thẻ bạn đọc:</label>
                    <input type="text" class="form-control" id="txtPatronCode">
                </div>
                <div class="form-group">
                    <label for="txtStartdate">Từ ngày:</label>
                    <input type="text" class="form-control" id="txtStartdate">
                </div>
                <div class="form-group">
                    <label for="txtFinishdate">Đến ngày:</label>
                    <input type="text" class="form-control" id="txtFinishdate">
                </div>
                <div class="form-group">
                    <label for="txtLockedDay">Số ngày:</label>
                    <input type="text" class="form-control" id="txtLockedDay">
                </div>
                <div class="form-group">
                    <label for="txtNote">Lý do: </label>
                    <input type="text" class="form-control" id="txtNote">
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success " style="float: right;margin-left:15px; " onclick="Save()">Lưu</button>
                <button class="btn btn-danger" style="float: right" onclick="CancelUpdate()">Hủy bỏ</button>
            </div>
        </div>

    </div>
}




@*<script type="text/javascript">
        document.getElementById("Find").onclick = function () {
            var empObj = {
                strPatronCode: document.getElementById("PatronCodeFilter").value,
                strLockDateFrom: document.getElementById("LockDateFromFilter").value,
                strLockDateTo: document.getElementById("LockDateToFilter").value,
                strCollegeID: document.getElementById("LibraryFilter").value
            };

            $.ajax({
                url: "GetLockPatronStats",
                data: JSON.stringify(empObj),
                contentType: "application/json;charset=utf-8",
                type: "POST",
                beforeSend: function () {
                    $("#ContentStatLockPatron").html("<h4>Loading...</h4>");
                },
                success: function (result) {
                    $("#ContentStatLockPatron").html(result)
                },
                error: function (errormessage) {
                    console.log("error");
                }
            });
        };

    </script>*@

