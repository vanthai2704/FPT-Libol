
@{
    Layout = null;
}
@if (ViewBag.test.Count >= 1)
{
    <div class="row">
        <div class="col-md-3">
            <table class="table table-bordered table-striped" id="123" style="border-collapse: collapse" , border="1">
                <tr>
                    <th>Bạn đọc</th>
                    <th>Số lượt mượn</th>
                </tr>
                @foreach (var item in ViewBag.test)
                {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.TotalLoan</td>
                </tr>
                }
            </table>
        </div>

        <div class="col-md-9">
            <div style="text-align:center; padding-top:20px">
                <h4 style="font-size:16px">Biểu đồ hình cột</h4>
            </div>
            <div id="columnchart_values3" style="width: 100%; height: 50%; font-size:10px"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-center">
            <button type="button" id="ExportReporttoExcel" class="btn btn-primary" onclick="exportTableToExcel('123','Top Patron')">Lưu vào file excel</button>
        </div>
    </div>
}
else
{
    <h5>Không có dữ liệu</h5>
}




<script src="~/Scripts/GoodleDrawingChart.js"></script>
<script type="text/javascript" src="~/Scripts/load.js"></script>

<script type="text/javascript">
    google.charts.load("current", { packages: ['corechart'] });
    google.charts.setOnLoadCallback(drawChart3);

    function drawChart3() {
        var table = document.getElementById("123");
        if (table == null)
            return;
        var data = google.visualization.arrayToDataTable([
            ["Mã tài liệu", "số lần mượn", { role: "style" }],

            @foreach (var item in ViewBag.test)
            {
                <text>['@item.Name', @item.TotalLoan, "blue"],</text>
            }
        ]);

        var view = new google.visualization.DataView(data);
        view.setColumns([0, 1,
            {
                calc: "stringify",
                sourceColumn: 1,
                type: "string",
                role: "annotation"
            },
            2]);

        var options = {
            title: "",
            bar: { groupWidth: "80%" },
            legend: { position: "none" },
            is3D: true,
            hAxis: {
                title: 'Mã Bạn Đọc',
            },
            vAxis: {
                title: 'Số Lượt Mượn',
            }

        };
        var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values3"));
        chart.draw(view, options);
    }


    function exportTableToExcel(tableID, filename = '') {
        var downloadLink;
        var dataType = 'application/vnd.ms-excel';
        var tableSelect = document.getElementById(tableID);
        var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');
        // Specify file name
        filename = filename ? filename + '.xls' : 'excel_data.xls';
        // Create download link element
        downloadLink = document.createElement("a");
        document.body.appendChild(downloadLink);
        if (navigator.msSaveOrOpenBlob) {
            var blob = new Blob(['\ufeff', tableHTML], {
                type: dataType
            });
            navigator.msSaveOrOpenBlob(blob, filename);
        } else {
            // Create a link to the file
            downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
            // Setting the file name
            downloadLink.download = filename;
            //triggering the function
            downloadLink.click();
        }
    }
</script>
