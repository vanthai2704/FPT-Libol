//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Libol.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Libol.EntityResult;
    using System.Collections.Generic;

    public partial class LibolEntities : DbContext
    {
        public LibolEntities()
            : base("name=LibolEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACQ_ACQUIRE_SOURCE> ACQ_ACQUIRE_SOURCE { get; set; }
        public virtual DbSet<ACQ_BUDGET> ACQ_BUDGET { get; set; }
        public virtual DbSet<ACQ_BUDGET_ACCUMULATE> ACQ_BUDGET_ACCUMULATE { get; set; }
        public virtual DbSet<ACQ_BUDGET_CREDIT> ACQ_BUDGET_CREDIT { get; set; }
        public virtual DbSet<ACQ_BUDGET_DEBIT> ACQ_BUDGET_DEBIT { get; set; }
        public virtual DbSet<ACQ_CURRENCY> ACQ_CURRENCY { get; set; }
        public virtual DbSet<ACQ_ITEM> ACQ_ITEM { get; set; }
        public virtual DbSet<ACQ_ONLOAN_INLIST_INVENT> ACQ_ONLOAN_INLIST_INVENT { get; set; }
        public virtual DbSet<ACQ_PO> ACQ_PO { get; set; }
        public virtual DbSet<ACQ_STATUS> ACQ_STATUS { get; set; }
        public virtual DbSet<ACQ_VENDOR> ACQ_VENDOR { get; set; }
        public virtual DbSet<BANDOC_IN> BANDOC_IN { get; set; }
        public virtual DbSet<Book_code> Book_code { get; set; }
        public virtual DbSet<CAT_AUTHORITY> CAT_AUTHORITY { get; set; }
        public virtual DbSet<CAT_BIBLIOGRAPHY> CAT_BIBLIOGRAPHY { get; set; }
        public virtual DbSet<CAT_BIBLIOGRAPHY_DETAIL> CAT_BIBLIOGRAPHY_DETAIL { get; set; }
        public virtual DbSet<CAT_DIC_AUTHOR> CAT_DIC_AUTHOR { get; set; }
        public virtual DbSet<CAT_DIC_CLASS_BBK> CAT_DIC_CLASS_BBK { get; set; }
        public virtual DbSet<CAT_DIC_CLASS_DDC> CAT_DIC_CLASS_DDC { get; set; }
        public virtual DbSet<CAT_DIC_CLASS_LOC> CAT_DIC_CLASS_LOC { get; set; }
        public virtual DbSet<CAT_DIC_CLASS_NLM> CAT_DIC_CLASS_NLM { get; set; }
        public virtual DbSet<CAT_DIC_CLASS_NSC> CAT_DIC_CLASS_NSC { get; set; }
        public virtual DbSet<CAT_DIC_CLASS_UDC> CAT_DIC_CLASS_UDC { get; set; }
        public virtual DbSet<CAT_DIC_COUNTRY> CAT_DIC_COUNTRY { get; set; }
        public virtual DbSet<CAT_DIC_ITEM_TYPE> CAT_DIC_ITEM_TYPE { get; set; }
        public virtual DbSet<CAT_DIC_KEYWORD> CAT_DIC_KEYWORD { get; set; }
        public virtual DbSet<CAT_DIC_LANGUAGE> CAT_DIC_LANGUAGE { get; set; }
        public virtual DbSet<CAT_DIC_LIST> CAT_DIC_LIST { get; set; }
        public virtual DbSet<CAT_DIC_MEDIUM> CAT_DIC_MEDIUM { get; set; }
        public virtual DbSet<CAT_DIC_OAI_SET> CAT_DIC_OAI_SET { get; set; }
        public virtual DbSet<CAT_DIC_PUBLISHER> CAT_DIC_PUBLISHER { get; set; }
        public virtual DbSet<CAT_DIC_RECORDTYPE> CAT_DIC_RECORDTYPE { get; set; }
        public virtual DbSet<CAT_DIC_RELATOR> CAT_DIC_RELATOR { get; set; }
        public virtual DbSet<CAT_DIC_SER_CATEGORY> CAT_DIC_SER_CATEGORY { get; set; }
        public virtual DbSet<CAT_DIC_SERIES> CAT_DIC_SERIES { get; set; }
        public virtual DbSet<CAT_DIC_SH> CAT_DIC_SH { get; set; }
        public virtual DbSet<CAT_DIC_THESIS_LEVEL> CAT_DIC_THESIS_LEVEL { get; set; }
        public virtual DbSet<CAT_DIC_THESIS_SUBJECT> CAT_DIC_THESIS_SUBJECT { get; set; }
        public virtual DbSet<CAT_EDATA_AUDIO> CAT_EDATA_AUDIO { get; set; }
        public virtual DbSet<CAT_EDATA_COLLECTION> CAT_EDATA_COLLECTION { get; set; }
        public virtual DbSet<CAT_EDATA_FILE> CAT_EDATA_FILE { get; set; }
        public virtual DbSet<CAT_EDATA_IMAGE> CAT_EDATA_IMAGE { get; set; }
        public virtual DbSet<CAT_EDATA_METADATA> CAT_EDATA_METADATA { get; set; }
        public virtual DbSet<CAT_EDATA_METADATA_DEFIN> CAT_EDATA_METADATA_DEFIN { get; set; }
        public virtual DbSet<CAT_EDATA_MULTIMEDIA> CAT_EDATA_MULTIMEDIA { get; set; }
        public virtual DbSet<CAT_EDATA_URL> CAT_EDATA_URL { get; set; }
        public virtual DbSet<CAT_EDATA_VIDEO> CAT_EDATA_VIDEO { get; set; }
        public virtual DbSet<CIR_DIC_COLLEGE> CIR_DIC_COLLEGE { get; set; }
        public virtual DbSet<CIR_DIC_EDUCATION> CIR_DIC_EDUCATION { get; set; }
        public virtual DbSet<CIR_DIC_ETHNIC> CIR_DIC_ETHNIC { get; set; }
        public virtual DbSet<CIR_DIC_FACULTY> CIR_DIC_FACULTY { get; set; }
        public virtual DbSet<CIR_DIC_OCCUPATION> CIR_DIC_OCCUPATION { get; set; }
        public virtual DbSet<CIR_DIC_PROVINCE> CIR_DIC_PROVINCE { get; set; }
        public virtual DbSet<CIR_FINE> CIR_FINE { get; set; }
        public virtual DbSet<CIR_HOLDING> CIR_HOLDING { get; set; }
        public virtual DbSet<CIR_LOAN> CIR_LOAN { get; set; }
        public virtual DbSet<CIR_LOAN_HISTORY> CIR_LOAN_HISTORY { get; set; }
        public virtual DbSet<CIR_LOAN_TYPE> CIR_LOAN_TYPE { get; set; }
        public virtual DbSet<CIR_PATRON> CIR_PATRON { get; set; }
        public virtual DbSet<CIR_PATRON_BLOCK> CIR_PATRON_BLOCK { get; set; }
        public virtual DbSet<CIR_PATRON_GROUP> CIR_PATRON_GROUP { get; set; }
        public virtual DbSet<CIR_PATRON_LOCK> CIR_PATRON_LOCK { get; set; }
        public virtual DbSet<CIR_PATRON_OTHER_ADDR> CIR_PATRON_OTHER_ADDR { get; set; }
        public virtual DbSet<CIR_PATRON_UNIVERSITY> CIR_PATRON_UNIVERSITY { get; set; }
        public virtual DbSet<CIR_PHOTOCOPY_PRICE> CIR_PHOTOCOPY_PRICE { get; set; }
        public virtual DbSet<CIR_PHOTOCOPY_REQUEST> CIR_PHOTOCOPY_REQUEST { get; set; }
        public virtual DbSet<CIR_PRINTED_CARD> CIR_PRINTED_CARD { get; set; }
        public virtual DbSet<CIR_RENEW> CIR_RENEW { get; set; }
        public virtual DbSet<CIR_RESERVE_REQUEST> CIR_RESERVE_REQUEST { get; set; }
        public virtual DbSet<CLASSIFICATION> CLASSIFICATIONs { get; set; }
        public virtual DbSet<CLASSIFICATION_FIELD> CLASSIFICATION_FIELD { get; set; }
        public virtual DbSet<CLASSIFICATION_LINK_TYPES> CLASSIFICATION_LINK_TYPES { get; set; }
        public virtual DbSet<CLASSIFICATION_LINKS> CLASSIFICATION_LINKS { get; set; }
        public virtual DbSet<DICTIONARY40> DICTIONARY40 { get; set; }
        public virtual DbSet<DICTIONARY41> DICTIONARY41 { get; set; }
        public virtual DbSet<DICTIONARY42> DICTIONARY42 { get; set; }
        public virtual DbSet<DICTIONARY43> DICTIONARY43 { get; set; }
        public virtual DbSet<dtproperty> dtproperties { get; set; }
        public virtual DbSet<EDELIV_FILE> EDELIV_FILE { get; set; }
        public virtual DbSet<EDELIV_PAYMENT> EDELIV_PAYMENT { get; set; }
        public virtual DbSet<EDELIV_REQUEST> EDELIV_REQUEST { get; set; }
        public virtual DbSet<EDELIV_REQUEST_MODE> EDELIV_REQUEST_MODE { get; set; }
        public virtual DbSet<EDELIV_STATUS> EDELIV_STATUS { get; set; }
        public virtual DbSet<EDELIV_USER> EDELIV_USER { get; set; }
        public virtual DbSet<FIELD_AUTHORITY> FIELD_AUTHORITY { get; set; }
        public virtual DbSet<FIELD000S> FIELD000S { get; set; }
        public virtual DbSet<FIELD100S> FIELD100S { get; set; }
        public virtual DbSet<FIELD200S> FIELD200S { get; set; }
        public virtual DbSet<FIELD300S> FIELD300S { get; set; }
        public virtual DbSet<FIELD400S> FIELD400S { get; set; }
        public virtual DbSet<FIELD500S> FIELD500S { get; set; }
        public virtual DbSet<FIELD600S> FIELD600S { get; set; }
        public virtual DbSet<FIELD700S> FIELD700S { get; set; }
        public virtual DbSet<FIELD800S> FIELD800S { get; set; }
        public virtual DbSet<FIELD900S> FIELD900S { get; set; }
        public virtual DbSet<HELP_CAT_DIC> HELP_CAT_DIC { get; set; }
        public virtual DbSet<HELP_CAT_FILE> HELP_CAT_FILE { get; set; }
        public virtual DbSet<HELP_DIC_ITEM> HELP_DIC_ITEM { get; set; }
        public virtual DbSet<HELP_ITEM_LINK> HELP_ITEM_LINK { get; set; }
        public virtual DbSet<HOLDING> HOLDINGs { get; set; }
        public virtual DbSet<HOLDING_INVENTORY> HOLDING_INVENTORY { get; set; }
        public virtual DbSet<HOLDING_LIBRARY> HOLDING_LIBRARY { get; set; }
        public virtual DbSet<HOLDING_LOCATION> HOLDING_LOCATION { get; set; }
        public virtual DbSet<HOLDING_LOCATION_PROCESS> HOLDING_LOCATION_PROCESS { get; set; }
        public virtual DbSet<HOLDING_LOCATION_SCHEMA> HOLDING_LOCATION_SCHEMA { get; set; }
        public virtual DbSet<HOLDING_REMOVE_REASON> HOLDING_REMOVE_REASON { get; set; }
        public virtual DbSet<HOLDING_REMOVED> HOLDING_REMOVED { get; set; }
        public virtual DbSet<HOLDING_SHELF_SCHEMA> HOLDING_SHELF_SCHEMA { get; set; }
        public virtual DbSet<ILL_APDU_TYPES> ILL_APDU_TYPES { get; set; }
        public virtual DbSet<ILL_COPYRIGHT_COMPLIANCE> ILL_COPYRIGHT_COMPLIANCE { get; set; }
        public virtual DbSet<ILL_INCOMING_REQUESTS> ILL_INCOMING_REQUESTS { get; set; }
        public virtual DbSet<ILL_INCOMING_REQUESTS_BILINF> ILL_INCOMING_REQUESTS_BILINF { get; set; }
        public virtual DbSet<ILL_INCOMING_REQUESTS_DELINF> ILL_INCOMING_REQUESTS_DELINF { get; set; }
        public virtual DbSet<ILL_INCOMING_REQUESTS_DENIED> ILL_INCOMING_REQUESTS_DENIED { get; set; }
        public virtual DbSet<ILL_INCOMING_REQUESTS_LOG> ILL_INCOMING_REQUESTS_LOG { get; set; }
        public virtual DbSet<ILL_ITEM_TYPES> ILL_ITEM_TYPES { get; set; }
        public virtual DbSet<ILL_LIBRARIES> ILL_LIBRARIES { get; set; }
        public virtual DbSet<ILL_LOCAL_LIBRARY_ADDRESSES> ILL_LOCAL_LIBRARY_ADDRESSES { get; set; }
        public virtual DbSet<ILL_LOCAL_LIBRARY_E_ADDRESSES> ILL_LOCAL_LIBRARY_E_ADDRESSES { get; set; }
        public virtual DbSet<ILL_MEDIUM_TYPES> ILL_MEDIUM_TYPES { get; set; }
        public virtual DbSet<ILL_OUTGOING_REQUESTS> ILL_OUTGOING_REQUESTS { get; set; }
        public virtual DbSet<ILL_OUTGOING_REQUESTS_DENIED> ILL_OUTGOING_REQUESTS_DENIED { get; set; }
        public virtual DbSet<ILL_OUTGOING_REQUESTS_LOG> ILL_OUTGOING_REQUESTS_LOG { get; set; }
        public virtual DbSet<ILL_OUTGOING_REQUESTS_RETINF> ILL_OUTGOING_REQUESTS_RETINF { get; set; }
        public virtual DbSet<ILL_PAYMENT_TYPES> ILL_PAYMENT_TYPES { get; set; }
        public virtual DbSet<ILL_PHYSICAL_DELIVERY_MODES> ILL_PHYSICAL_DELIVERY_MODES { get; set; }
        public virtual DbSet<ILL_REQUEST_ITEMS> ILL_REQUEST_ITEMS { get; set; }
        public virtual DbSet<ILL_REQUEST_STATUS> ILL_REQUEST_STATUS { get; set; }
        public virtual DbSet<ILL_RESPONSES> ILL_RESPONSES { get; set; }
        public virtual DbSet<ILL_SERVICE_TYPES> ILL_SERVICE_TYPES { get; set; }
        public virtual DbSet<ILL_Z3950_DBS> ILL_Z3950_DBS { get; set; }
        public virtual DbSet<ILL_Z3950_SERVERS> ILL_Z3950_SERVERS { get; set; }
        public virtual DbSet<INIT_INVENTORY> INIT_INVENTORY { get; set; }
        public virtual DbSet<INVENTORY> INVENTORies { get; set; }
        public virtual DbSet<ITEM> ITEMs { get; set; }
        public virtual DbSet<ITEM_FULLTEXT> ITEM_FULLTEXT { get; set; }
        public virtual DbSet<ITEM_ITEM> ITEM_ITEM { get; set; }
        public virtual DbSet<ITEM_TITLE> ITEM_TITLE { get; set; }
        public virtual DbSet<ItemCode> ItemCodes { get; set; }
        public virtual DbSet<MARC_AUTHORITY_BLOCK> MARC_AUTHORITY_BLOCK { get; set; }
        public virtual DbSet<MARC_AUTHORITY_FIELD> MARC_AUTHORITY_FIELD { get; set; }
        public virtual DbSet<MARC_AUTHORITY_FIELD_TYPE> MARC_AUTHORITY_FIELD_TYPE { get; set; }
        public virtual DbSet<MARC_AUTHORITY_INDICATOR> MARC_AUTHORITY_INDICATOR { get; set; }
        public virtual DbSet<MARC_AUTHORITY_WORKSHEET> MARC_AUTHORITY_WORKSHEET { get; set; }
        public virtual DbSet<MARC_BIB_BLOCK> MARC_BIB_BLOCK { get; set; }
        public virtual DbSet<MARC_BIB_FIELD> MARC_BIB_FIELD { get; set; }
        public virtual DbSet<MARC_BIB_INDICATOR> MARC_BIB_INDICATOR { get; set; }
        public virtual DbSet<MARC_FIELD_TYPE> MARC_FIELD_TYPE { get; set; }
        public virtual DbSet<MARC_FUNCTION> MARC_FUNCTION { get; set; }
        public virtual DbSet<MARC_LINK_TYPE> MARC_LINK_TYPE { get; set; }
        public virtual DbSet<MARC_WORKSHEET> MARC_WORKSHEET { get; set; }
        public virtual DbSet<OAI_SET> OAI_SET { get; set; }
        public virtual DbSet<OAI_URL_RESOURCE> OAI_URL_RESOURCE { get; set; }
        public virtual DbSet<OPAC_COMMENT> OPAC_COMMENT { get; set; }
        public virtual DbSet<OPAC_SUBJECT_BBK> OPAC_SUBJECT_BBK { get; set; }
        public virtual DbSet<OPAC_SUBJECT_DDC> OPAC_SUBJECT_DDC { get; set; }
        public virtual DbSet<REGULARITY_OUT> REGULARITY_OUT { get; set; }
        public virtual DbSet<SER_ARTICLE> SER_ARTICLE { get; set; }
        public virtual DbSet<SER_CATEGORY> SER_CATEGORY { get; set; }
        public virtual DbSet<SER_COPY> SER_COPY { get; set; }
        public virtual DbSet<SER_ISSUE> SER_ISSUE { get; set; }
        public virtual DbSet<SER_ITEM> SER_ITEM { get; set; }
        public virtual DbSet<SER_REGULARITY> SER_REGULARITY { get; set; }
        public virtual DbSet<SER_ROUTING> SER_ROUTING { get; set; }
        public virtual DbSet<SER_SUBJECT> SER_SUBJECT { get; set; }
        public virtual DbSet<SYS_EVENT_GROUP> SYS_EVENT_GROUP { get; set; }
        public virtual DbSet<SYS_LOG> SYS_LOG { get; set; }
        public virtual DbSet<SYS_MODULE> SYS_MODULE { get; set; }
        public virtual DbSet<SYS_PARAMETER> SYS_PARAMETER { get; set; }
        public virtual DbSet<SYS_REFERENCE> SYS_REFERENCE { get; set; }
        public virtual DbSet<SYS_TEMP_CODE> SYS_TEMP_CODE { get; set; }
        public virtual DbSet<SYS_TEMP_FILE> SYS_TEMP_FILE { get; set; }
        public virtual DbSet<SYS_TEMPLATE> SYS_TEMPLATE { get; set; }
        public virtual DbSet<SYS_USER> SYS_USER { get; set; }
        public virtual DbSet<SYS_USER_RIGHT> SYS_USER_RIGHT { get; set; }
        public virtual DbSet<SYS_USER_RIGHT_DETAIL> SYS_USER_RIGHT_DETAIL { get; set; }
        public virtual DbSet<SYS_VIEW> SYS_VIEW { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<test> tests { get; set; }
        public virtual DbSet<usertest> usertests { get; set; }
        public virtual DbSet<ACQ_PO_STATUS> ACQ_PO_STATUS { get; set; }
        public virtual DbSet<BOOKCODE_RES> BOOKCODE_RES { get; set; }
        public virtual DbSet<CAT_AUTHORITY_LINK> CAT_AUTHORITY_LINK { get; set; }
        public virtual DbSet<CAT_DIC_DIRLEVEL> CAT_DIC_DIRLEVEL { get; set; }
        public virtual DbSet<CAT_DIC_NUMBER> CAT_DIC_NUMBER { get; set; }
        public virtual DbSet<CAT_DIC_YEAR> CAT_DIC_YEAR { get; set; }
        public virtual DbSet<CAT_EDATA_PARAMETER> CAT_EDATA_PARAMETER { get; set; }
        public virtual DbSet<CAT_QUEUE> CAT_QUEUE { get; set; }
        public virtual DbSet<CIR_OPEN_HOUR> CIR_OPEN_HOUR { get; set; }
        public virtual DbSet<CIR_SERIAL_COUNT> CIR_SERIAL_COUNT { get; set; }
        public virtual DbSet<HOLDING_COPY> HOLDING_COPY { get; set; }
        public virtual DbSet<INVENTORY_COPY> INVENTORY_COPY { get; set; }
        public virtual DbSet<ITEM_AUTHOR> ITEM_AUTHOR { get; set; }
        public virtual DbSet<ITEM_AUTHORITY> ITEM_AUTHORITY { get; set; }
        public virtual DbSet<ITEM_BBK> ITEM_BBK { get; set; }
        public virtual DbSet<ITEM_COUNTRY> ITEM_COUNTRY { get; set; }
        public virtual DbSet<ITEM_DDC> ITEM_DDC { get; set; }
        public virtual DbSet<ITEM_DICTIONARY40> ITEM_DICTIONARY40 { get; set; }
        public virtual DbSet<ITEM_DICTIONARY41> ITEM_DICTIONARY41 { get; set; }
        public virtual DbSet<ITEM_DICTIONARY42> ITEM_DICTIONARY42 { get; set; }
        public virtual DbSet<ITEM_DICTIONARY43> ITEM_DICTIONARY43 { get; set; }
        public virtual DbSet<ITEM_KEYWORD> ITEM_KEYWORD { get; set; }
        public virtual DbSet<ITEM_LANGUAGE> ITEM_LANGUAGE { get; set; }
        public virtual DbSet<ITEM_LIBRARY> ITEM_LIBRARY { get; set; }
        public virtual DbSet<ITEM_LINK> ITEM_LINK { get; set; }
        public virtual DbSet<ITEM_LOC> ITEM_LOC { get; set; }
        public virtual DbSet<ITEM_NLM> ITEM_NLM { get; set; }
        public virtual DbSet<ITEM_NSC> ITEM_NSC { get; set; }
        public virtual DbSet<ITEM_OAI_SET> ITEM_OAI_SET { get; set; }
        public virtual DbSet<ITEM_PUBLISHER> ITEM_PUBLISHER { get; set; }
        public virtual DbSet<ITEM_SERIES> ITEM_SERIES { get; set; }
        public virtual DbSet<ITEM_SH> ITEM_SH { get; set; }
        public virtual DbSet<ITEM_THESIS_SUBJECT> ITEM_THESIS_SUBJECT { get; set; }
        public virtual DbSet<ITEM_UDC> ITEM_UDC { get; set; }
        public virtual DbSet<MARC_AUTHORITY_WS_DETAIL> MARC_AUTHORITY_WS_DETAIL { get; set; }
        public virtual DbSet<MARC_BIB_WS_DETAIL> MARC_BIB_WS_DETAIL { get; set; }
        public virtual DbSet<SYS_USER_GOOGLE_ACCOUNT> SYS_USER_GOOGLE_ACCOUNT { get; set; }
    
        public virtual ObjectResult<CAT_DIC_LIST_SEL_Result> CAT_DIC_LIST_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_DIC_LIST_SEL_Result>("CAT_DIC_LIST_SEL");
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int ExcuteSQL(string strSQL)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcuteSQL", strSQLParameter);
        }
    
        public virtual int FPT_EDU_ADD_COLLEGE(string college)
        {
            var collegeParameter = college != null ?
                new ObjectParameter("College", college) :
                new ObjectParameter("College", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_ADD_COLLEGE", collegeParameter);
        }
    
        public virtual int FPT_EDU_ADD_EDUCATION(string eDUCATION)
        {
            var eDUCATIONParameter = eDUCATION != null ?
                new ObjectParameter("EDUCATION", eDUCATION) :
                new ObjectParameter("EDUCATION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_ADD_EDUCATION", eDUCATIONParameter);
        }
    
        public virtual int FPT_EDU_ADD_FACUTY(string facuty, Nullable<int> collegeID)
        {
            var facutyParameter = facuty != null ?
                new ObjectParameter("facuty", facuty) :
                new ObjectParameter("facuty", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_ADD_FACUTY", facutyParameter, collegeIDParameter);
        }
    
        public virtual int FPT_EDU_ADD_OCCUPATION(string occupation)
        {
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_ADD_OCCUPATION", occupationParameter);
        }
    
        public virtual int FPT_EDU_ADD_PATRON(string strPatronCode, string strValidDate, string strExpiredDate, string strLastIssusedDate, string strLastName, string strFirstName, string strMiddleName, Nullable<bool> bitSex, string strDateOfBirth, Nullable<int> intEthnicCode, Nullable<int> intEducationCode, Nullable<int> intOccupationID, string strTelephone, string strMobile, string strEmail, Nullable<int> intPatronGroupID, string strNote, string strIDCard, string strAddress, string stringProvince, Nullable<int> intPronvinceID, Nullable<int> intCollege, Nullable<int> intFaculty, string strclass, string strGrade)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strExpiredDateParameter = strExpiredDate != null ?
                new ObjectParameter("strExpiredDate", strExpiredDate) :
                new ObjectParameter("strExpiredDate", typeof(string));
    
            var strLastIssusedDateParameter = strLastIssusedDate != null ?
                new ObjectParameter("strLastIssusedDate", strLastIssusedDate) :
                new ObjectParameter("strLastIssusedDate", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strMiddleNameParameter = strMiddleName != null ?
                new ObjectParameter("strMiddleName", strMiddleName) :
                new ObjectParameter("strMiddleName", typeof(string));
    
            var bitSexParameter = bitSex.HasValue ?
                new ObjectParameter("bitSex", bitSex) :
                new ObjectParameter("bitSex", typeof(bool));
    
            var strDateOfBirthParameter = strDateOfBirth != null ?
                new ObjectParameter("strDateOfBirth", strDateOfBirth) :
                new ObjectParameter("strDateOfBirth", typeof(string));
    
            var intEthnicCodeParameter = intEthnicCode.HasValue ?
                new ObjectParameter("intEthnicCode", intEthnicCode) :
                new ObjectParameter("intEthnicCode", typeof(int));
    
            var intEducationCodeParameter = intEducationCode.HasValue ?
                new ObjectParameter("intEducationCode", intEducationCode) :
                new ObjectParameter("intEducationCode", typeof(int));
    
            var intOccupationIDParameter = intOccupationID.HasValue ?
                new ObjectParameter("intOccupationID", intOccupationID) :
                new ObjectParameter("intOccupationID", typeof(int));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strMobileParameter = strMobile != null ?
                new ObjectParameter("strMobile", strMobile) :
                new ObjectParameter("strMobile", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strIDCardParameter = strIDCard != null ?
                new ObjectParameter("strIDCard", strIDCard) :
                new ObjectParameter("strIDCard", typeof(string));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var stringProvinceParameter = stringProvince != null ?
                new ObjectParameter("stringProvince", stringProvince) :
                new ObjectParameter("stringProvince", typeof(string));
    
            var intPronvinceIDParameter = intPronvinceID.HasValue ?
                new ObjectParameter("intPronvinceID", intPronvinceID) :
                new ObjectParameter("intPronvinceID", typeof(int));
    
            var intCollegeParameter = intCollege.HasValue ?
                new ObjectParameter("intCollege", intCollege) :
                new ObjectParameter("intCollege", typeof(int));
    
            var intFacultyParameter = intFaculty.HasValue ?
                new ObjectParameter("intFaculty", intFaculty) :
                new ObjectParameter("intFaculty", typeof(int));
    
            var strclassParameter = strclass != null ?
                new ObjectParameter("strclass", strclass) :
                new ObjectParameter("strclass", typeof(string));
    
            var strGradeParameter = strGrade != null ?
                new ObjectParameter("strGrade", strGrade) :
                new ObjectParameter("strGrade", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_ADD_PATRON", strPatronCodeParameter, strValidDateParameter, strExpiredDateParameter, strLastIssusedDateParameter, strLastNameParameter, strFirstNameParameter, strMiddleNameParameter, bitSexParameter, strDateOfBirthParameter, intEthnicCodeParameter, intEducationCodeParameter, intOccupationIDParameter, strTelephoneParameter, strMobileParameter, strEmailParameter, intPatronGroupIDParameter, strNoteParameter, strIDCardParameter, strAddressParameter, stringProvinceParameter, intPronvinceIDParameter, intCollegeParameter, intFacultyParameter, strclassParameter, strGradeParameter);
        }
    
        public virtual int FPT_EDU_ADD_PROVINCE(string province)
        {
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_ADD_PROVINCE", provinceParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FPT_EDU_CHECK_PATRON_CODE(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FPT_EDU_CHECK_PATRON_CODE", codeParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_COLLEGE_Result> FPT_EDU_COLLEGE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_COLLEGE_Result>("FPT_EDU_COLLEGE");
        }
    
        public virtual ObjectResult<Nullable<int>> FPT_EDU_COUNTINUSE_BOOK(Nullable<double> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FPT_EDU_COUNTINUSE_BOOK", itemIdParameter);
        }
    
        public virtual int FPT_EDU_DEL_COLLEGE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_DEL_COLLEGE", idParameter);
        }
    
        public virtual int FPT_EDU_DEL_EDUCATION(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_DEL_EDUCATION", idParameter);
        }
    
        public virtual int FPT_EDU_DEL_FACUTY(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_DEL_FACUTY", idParameter);
        }
    
        public virtual int FPT_EDU_DEL_OCCUPATION(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_DEL_OCCUPATION", idParameter);
        }
    
        public virtual int FPT_EDU_DEL_PROVINCE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_DEL_PROVINCE", idParameter);
        }
    
        public virtual int FPT_EDU_EDIT_COLLEGE(Nullable<int> iD, string college)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var collegeParameter = college != null ?
                new ObjectParameter("College", college) :
                new ObjectParameter("College", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_EDIT_COLLEGE", iDParameter, collegeParameter);
        }
    
        public virtual int FPT_EDU_EDIT_EDUCATION(Nullable<int> iD, string education)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var educationParameter = education != null ?
                new ObjectParameter("Education", education) :
                new ObjectParameter("Education", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_EDIT_EDUCATION", iDParameter, educationParameter);
        }
    
        public virtual int FPT_EDU_EDIT_FACUTY(Nullable<int> iD, Nullable<int> collegeID, string facuty)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var facutyParameter = facuty != null ?
                new ObjectParameter("Facuty", facuty) :
                new ObjectParameter("Facuty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_EDIT_FACUTY", iDParameter, collegeIDParameter, facutyParameter);
        }
    
        public virtual int FPT_EDU_EDIT_OCCUPATION(Nullable<int> iD, string occupation)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_EDIT_OCCUPATION", iDParameter, occupationParameter);
        }
    
        public virtual int FPT_EDU_EDIT_PATRONGROUP(Nullable<int> iD, string name)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_EDIT_PATRONGROUP", iDParameter, nameParameter);
        }
    
        public virtual int FPT_EDU_EDIT_PROVINCE(Nullable<int> iD, string province)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var provinceParameter = province != null ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_EDIT_PROVINCE", iDParameter, provinceParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_GET_ALL_COLLEGE_Result> FPT_EDU_GET_ALL_COLLEGE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_ALL_COLLEGE_Result>("FPT_EDU_GET_ALL_COLLEGE");
        }
    
        public virtual ObjectResult<FPT_EDU_GET_ALL_FACULTY_Result> FPT_EDU_GET_ALL_FACULTY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_ALL_FACULTY_Result>("FPT_EDU_GET_ALL_FACULTY");
        }
    
        public virtual ObjectResult<FPT_EDU_GET_ALL_FACULTY_BY_ID_Result> FPT_EDU_GET_ALL_FACULTY_BY_ID(string intCollectID)
        {
            var intCollectIDParameter = intCollectID != null ?
                new ObjectParameter("intCollectID", intCollectID) :
                new ObjectParameter("intCollectID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_ALL_FACULTY_BY_ID_Result>("FPT_EDU_GET_ALL_FACULTY_BY_ID", intCollectIDParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_GET_ALL_PROVINCE_Result> FPT_EDU_GET_ALL_PROVINCE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_ALL_PROVINCE_Result>("FPT_EDU_GET_ALL_PROVINCE");
        }
    
        public virtual int FPT_EDU_GET_ALLHOLDING_BYID(string strHolding)
        {
            var strHoldingParameter = strHolding != null ?
                new ObjectParameter("strHolding", strHolding) :
                new ObjectParameter("strHolding", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_GET_ALLHOLDING_BYID", strHoldingParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_GET_EDUCATION_Result> FPT_EDU_GET_EDUCATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_EDUCATION_Result>("FPT_EDU_GET_EDUCATION");
        }
    
        public virtual ObjectResult<Nullable<int>> FPT_EDU_GET_HOLDING_LOCATION(string copyNumber)
        {
            var copyNumberParameter = copyNumber != null ?
                new ObjectParameter("CopyNumber", copyNumber) :
                new ObjectParameter("CopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FPT_EDU_GET_HOLDING_LOCATION", copyNumberParameter);
        }
    
        public virtual int FPT_EDU_GET_PARTRON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_GET_PARTRON");
        }
    
        public virtual ObjectResult<FPT_EDU_GET_PARTRON_GROUP_Result> FPT_EDU_GET_PARTRON_GROUP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_PARTRON_GROUP_Result>("FPT_EDU_GET_PARTRON_GROUP");
        }
    
        public virtual int FPT_EDU_GET_PATRON_LOANINFOR(string strPatronCode, string strItemCode, string strCopyNumber, Nullable<int> intLocationID, string strCheckOutDateFrom, string strCheckOutDateTo, string strDueDateFrom, string strDueDateTo, string strSerial, Nullable<int> intUserID)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var strDueDateFromParameter = strDueDateFrom != null ?
                new ObjectParameter("strDueDateFrom", strDueDateFrom) :
                new ObjectParameter("strDueDateFrom", typeof(string));
    
            var strDueDateToParameter = strDueDateTo != null ?
                new ObjectParameter("strDueDateTo", strDueDateTo) :
                new ObjectParameter("strDueDateTo", typeof(string));
    
            var strSerialParameter = strSerial != null ?
                new ObjectParameter("strSerial", strSerial) :
                new ObjectParameter("strSerial", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_GET_PATRON_LOANINFOR", strPatronCodeParameter, strItemCodeParameter, strCopyNumberParameter, intLocationIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, strDueDateFromParameter, strDueDateToParameter, strSerialParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_Result> FPT_EDU_GET_PATRON_ONLOAN_INCOMMING()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_Result>("FPT_EDU_GET_PATRON_ONLOAN_INCOMMING");
        }
    
        public virtual ObjectResult<FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_BY_USERID_Result> FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_BY_USERID(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_BY_USERID_Result>("FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_BY_USERID", userIdParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_FOR_EMAILSCAN_Result> FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_FOR_EMAILSCAN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_FOR_EMAILSCAN_Result>("FPT_EDU_GET_PATRON_ONLOAN_INCOMMING_FOR_EMAILSCAN");
        }
    
        public virtual int FPT_EDU_GET_PATRON_ONLOANINFOR(string strPatronCode, string strItemCode, string strCopyNumber, Nullable<int> intLocationID, string strCheckOutDateFrom, string strCheckOutDateTo, string strDueDateFrom, string strDueDateTo, string strSerial, Nullable<int> intUserID)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var strDueDateFromParameter = strDueDateFrom != null ?
                new ObjectParameter("strDueDateFrom", strDueDateFrom) :
                new ObjectParameter("strDueDateFrom", typeof(string));
    
            var strDueDateToParameter = strDueDateTo != null ?
                new ObjectParameter("strDueDateTo", strDueDateTo) :
                new ObjectParameter("strDueDateTo", typeof(string));
    
            var strSerialParameter = strSerial != null ?
                new ObjectParameter("strSerial", strSerial) :
                new ObjectParameter("strSerial", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_GET_PATRON_ONLOANINFOR", strPatronCodeParameter, strItemCodeParameter, strCopyNumberParameter, intLocationIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, strDueDateFromParameter, strDueDateToParameter, strSerialParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_GET_VALUEFROMID_BOOK_Result> FPT_EDU_GET_VALUEFROMID_BOOK(string iDin)
        {
            var iDinParameter = iDin != null ?
                new ObjectParameter("IDin", iDin) :
                new ObjectParameter("IDin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GET_VALUEFROMID_BOOK_Result>("FPT_EDU_GET_VALUEFROMID_BOOK", iDinParameter);
        }
    
        public virtual ObjectResult<string> FPT_EDU_GETALL_HOLDING_REMOVE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FPT_EDU_GETALL_HOLDING_REMOVE");
        }
    
        public virtual ObjectResult<FPT_EDU_GETALL_OCCUPATION_Result> FPT_EDU_GETALL_OCCUPATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GETALL_OCCUPATION_Result>("FPT_EDU_GETALL_OCCUPATION");
        }
    
        public virtual ObjectResult<FPT_EDU_GETFACULTYBYID_Result> FPT_EDU_GETFACULTYBYID(Nullable<int> collegeID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GETFACULTYBYID_Result>("FPT_EDU_GETFACULTYBYID", collegeIDParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_GETWAREHOUSE_BOOK_Result> FPT_EDU_GETWAREHOUSE_BOOK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_GETWAREHOUSE_BOOK_Result>("FPT_EDU_GETWAREHOUSE_BOOK");
        }
    
        public virtual int FPT_EDU_LOAD_LIQUIDBOOK_BY_LIQUID_CODE(string strLiquidCode)
        {
            var strLiquidCodeParameter = strLiquidCode != null ?
                new ObjectParameter("strLiquidCode", strLiquidCode) :
                new ObjectParameter("strLiquidCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_LOAD_LIQUIDBOOK_BY_LIQUID_CODE", strLiquidCodeParameter);
        }
    
        public virtual int FPT_EDU_PATRON_LOAN_HISTORY(string strPatronCode, string strItemCode, string strCopyNumber, Nullable<int> intLocationID, string strCheckOutDateFrom, string strCheckOutDateTo, string strDueDateFrom, string strDueDateTo, string strSerial, Nullable<int> intUserID)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var strDueDateFromParameter = strDueDateFrom != null ?
                new ObjectParameter("strDueDateFrom", strDueDateFrom) :
                new ObjectParameter("strDueDateFrom", typeof(string));
    
            var strDueDateToParameter = strDueDateTo != null ?
                new ObjectParameter("strDueDateTo", strDueDateTo) :
                new ObjectParameter("strDueDateTo", typeof(string));
    
            var strSerialParameter = strSerial != null ?
                new ObjectParameter("strSerial", strSerial) :
                new ObjectParameter("strSerial", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_PATRON_LOAN_HISTORY", strPatronCodeParameter, strItemCodeParameter, strCopyNumberParameter, intLocationIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, strDueDateFromParameter, strDueDateToParameter, strSerialParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_PATRON_UNIVERSITY_Result> FPT_EDU_PATRON_UNIVERSITY(Nullable<int> collegeID, Nullable<int> facultyID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var facultyIDParameter = facultyID.HasValue ?
                new ObjectParameter("FacultyID", facultyID) :
                new ObjectParameter("FacultyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_PATRON_UNIVERSITY_Result>("FPT_EDU_PATRON_UNIVERSITY", collegeIDParameter, facultyIDParameter);
        }
    
        public virtual int FPT_EDU_SP_CIR_GET_RENEW(Nullable<int> intUserID, Nullable<short> intType, string strCodeVal, Nullable<byte> withSerial, string sortColumn, Nullable<bool> sorttype)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(short));
    
            var strCodeValParameter = strCodeVal != null ?
                new ObjectParameter("strCodeVal", strCodeVal) :
                new ObjectParameter("strCodeVal", typeof(string));
    
            var withSerialParameter = withSerial.HasValue ?
                new ObjectParameter("withSerial", withSerial) :
                new ObjectParameter("withSerial", typeof(byte));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("sortColumn", sortColumn) :
                new ObjectParameter("sortColumn", typeof(string));
    
            var sorttypeParameter = sorttype.HasValue ?
                new ObjectParameter("sorttype", sorttype) :
                new ObjectParameter("sorttype", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_CIR_GET_RENEW", intUserIDParameter, intTypeParameter, strCodeValParameter, withSerialParameter, sortColumnParameter, sorttypeParameter);
        }
    
        public virtual int FPT_EDU_SP_CIR_GET_RENEW_BYIDS(Nullable<int> intUserID, Nullable<short> intType, string strCodeVal, string strIds)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(short));
    
            var strCodeValParameter = strCodeVal != null ?
                new ObjectParameter("strCodeVal", strCodeVal) :
                new ObjectParameter("strCodeVal", typeof(string));
    
            var strIdsParameter = strIds != null ?
                new ObjectParameter("strIds", strIds) :
                new ObjectParameter("strIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_CIR_GET_RENEW_BYIDS", intUserIDParameter, intTypeParameter, strCodeValParameter, strIdsParameter);
        }
    
        public virtual int FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR(Nullable<int> intUserID, string strPatronIDs)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR", intUserIDParameter, strPatronIDsParameter);
        }
    
        public virtual int FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR_BYTIME(Nullable<int> intUserID, string strPatronIDs, Nullable<int> intTime)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            var intTimeParameter = intTime.HasValue ?
                new ObjectParameter("intTime", intTime) :
                new ObjectParameter("intTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR_BYTIME", intUserIDParameter, strPatronIDsParameter, intTimeParameter);
        }
    
        public virtual int FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR_BYWARSEHOUSE(string warseHouse)
        {
            var warseHouseParameter = warseHouse != null ?
                new ObjectParameter("WarseHouse", warseHouse) :
                new ObjectParameter("WarseHouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR_BYWARSEHOUSE", warseHouseParameter);
        }
    
        public virtual int FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR_EMAIL_SCAN(string strPatronIDs, Nullable<int> intTime)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            var intTimeParameter = intTime.HasValue ?
                new ObjectParameter("intTime", intTime) :
                new ObjectParameter("intTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_CIR_OVERDUELIST_GETINFOR_EMAIL_SCAN", strPatronIDsParameter, intTimeParameter);
        }
    
        public virtual int FPT_EDU_SP_GET_ITEM(string strFromDate, string strToDate, Nullable<int> intLocationID)
        {
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_GET_ITEM", strFromDateParameter, strToDateParameter, intLocationIDParameter);
        }
    
        public virtual int FPT_EDU_SP_GET_ITEM_BYDATAWARSEHOUSE(string strFromDate, string strToDate, string intLocationID)
        {
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var intLocationIDParameter = intLocationID != null ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_GET_ITEM_BYDATAWARSEHOUSE", strFromDateParameter, strToDateParameter, intLocationIDParameter);
        }
    
        public virtual int FPT_EDU_SP_GET_STAT_BOOK(string strIDs, string strLocationID)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var strLocationIDParameter = strLocationID != null ?
                new ObjectParameter("strLocationID", strLocationID) :
                new ObjectParameter("strLocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_GET_STAT_BOOK", strIDsParameter, strLocationIDParameter);
        }
    
        public virtual ObjectResult<FPT_EDU_SP_GETLOANTYPES_Result> FPT_EDU_SP_GETLOANTYPES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_EDU_SP_GETLOANTYPES_Result>("FPT_EDU_SP_GETLOANTYPES");
        }
    
        public virtual int FPT_EDU_SP_QUERY_HOLDING(Nullable<int> intLoanTypeID, Nullable<int> intUserID, string itemCode, string sortExpression, Nullable<bool> sortType)
        {
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var sortExpressionParameter = sortExpression != null ?
                new ObjectParameter("SortExpression", sortExpression) :
                new ObjectParameter("SortExpression", typeof(string));
    
            var sortTypeParameter = sortType.HasValue ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_QUERY_HOLDING", intLoanTypeIDParameter, intUserIDParameter, itemCodeParameter, sortExpressionParameter, sortTypeParameter);
        }
    
        public virtual int FPT_EDU_SP_RENEW_ITEM(Nullable<int> intLoanID, string strFixedDueDate)
        {
            var intLoanIDParameter = intLoanID.HasValue ?
                new ObjectParameter("intLoanID", intLoanID) :
                new ObjectParameter("intLoanID", typeof(int));
    
            var strFixedDueDateParameter = strFixedDueDate != null ?
                new ObjectParameter("strFixedDueDate", strFixedDueDate) :
                new ObjectParameter("strFixedDueDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_RENEW_ITEM", intLoanIDParameter, strFixedDueDateParameter);
        }
    
        public virtual int FPT_EDU_SP_RENEW_ITEM_BY_ALL_ID(string strFixedID)
        {
            var strFixedIDParameter = strFixedID != null ?
                new ObjectParameter("strFixedID", strFixedID) :
                new ObjectParameter("strFixedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_EDU_SP_RENEW_ITEM_BY_ALL_ID", strFixedIDParameter);
        }
    
        public virtual int FPT_SP_GET_STAT_BOOK(string strIDs, string strLocationID)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var strLocationIDParameter = strLocationID != null ?
                new ObjectParameter("strLocationID", strLocationID) :
                new ObjectParameter("strLocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FPT_SP_GET_STAT_BOOK", strIDsParameter, strLocationIDParameter);
        }
    
        public virtual ObjectResult<GET_BLACK_PATRON_INFOR_Result> GET_BLACK_PATRON_INFOR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_BLACK_PATRON_INFOR_Result>("GET_BLACK_PATRON_INFOR");
        }
    
        public virtual int GET_PATRON_LOANINFOR(string strPatronCode, string strItemCode, string strCopyNumber, Nullable<int> intLocationID, string strCheckOutDateFrom, string strCheckOutDateTo, string strCheckInDateFrom, string strCheckInDateTo, string strSerial, Nullable<int> intUserID)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var strCheckInDateFromParameter = strCheckInDateFrom != null ?
                new ObjectParameter("strCheckInDateFrom", strCheckInDateFrom) :
                new ObjectParameter("strCheckInDateFrom", typeof(string));
    
            var strCheckInDateToParameter = strCheckInDateTo != null ?
                new ObjectParameter("strCheckInDateTo", strCheckInDateTo) :
                new ObjectParameter("strCheckInDateTo", typeof(string));
    
            var strSerialParameter = strSerial != null ?
                new ObjectParameter("strSerial", strSerial) :
                new ObjectParameter("strSerial", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_PATRON_LOANINFOR", strPatronCodeParameter, strItemCodeParameter, strCopyNumberParameter, intLocationIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, strCheckInDateFromParameter, strCheckInDateToParameter, strSerialParameter, intUserIDParameter);
        }
    
        public virtual int GET_PATRON_ONLOANINFOR(string strPatronCode, string strItemCode, string strCopyNumber, Nullable<int> intLocationID, string strCheckOutDateFrom, string strCheckOutDateTo, string strDueDateFrom, string strDueDateTo, string strSerial, Nullable<int> intUserID)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var strDueDateFromParameter = strDueDateFrom != null ?
                new ObjectParameter("strDueDateFrom", strDueDateFrom) :
                new ObjectParameter("strDueDateFrom", typeof(string));
    
            var strDueDateToParameter = strDueDateTo != null ?
                new ObjectParameter("strDueDateTo", strDueDateTo) :
                new ObjectParameter("strDueDateTo", typeof(string));
    
            var strSerialParameter = strSerial != null ?
                new ObjectParameter("strSerial", strSerial) :
                new ObjectParameter("strSerial", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_PATRON_ONLOANINFOR", strPatronCodeParameter, strItemCodeParameter, strCopyNumberParameter, intLocationIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, strDueDateFromParameter, strDueDateToParameter, strSerialParameter, intUserIDParameter);
        }
    
        public virtual int GET_PATRON_RENEW_LOAN_INFOR(string strPatronCode, string strItemCode, string strCopyNumber, Nullable<int> intLocationID, string strCheckOutDateFrom, string strCheckOutDateTo, string strCheckInDateFrom, string strCheckInDateTo, Nullable<int> intLoan, Nullable<int> intUserID)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var strCheckInDateFromParameter = strCheckInDateFrom != null ?
                new ObjectParameter("strCheckInDateFrom", strCheckInDateFrom) :
                new ObjectParameter("strCheckInDateFrom", typeof(string));
    
            var strCheckInDateToParameter = strCheckInDateTo != null ?
                new ObjectParameter("strCheckInDateTo", strCheckInDateTo) :
                new ObjectParameter("strCheckInDateTo", typeof(string));
    
            var intLoanParameter = intLoan.HasValue ?
                new ObjectParameter("intLoan", intLoan) :
                new ObjectParameter("intLoan", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_PATRON_RENEW_LOAN_INFOR", strPatronCodeParameter, strItemCodeParameter, strCopyNumberParameter, intLocationIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, strCheckInDateFromParameter, strCheckInDateToParameter, intLoanParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<ILL_GET_OUT_RESPONSE_INFOR_Result> ILL_GET_OUT_RESPONSE_INFOR(Nullable<int> lngID)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ILL_GET_OUT_RESPONSE_INFOR_Result>("ILL_GET_OUT_RESPONSE_INFOR", lngIDParameter);
        }
    
        public virtual int SEARCH_CODE_TITLE_SEL(string strIDs, Nullable<short> smintCHECKJAVASCRIPT)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var smintCHECKJAVASCRIPTParameter = smintCHECKJAVASCRIPT.HasValue ?
                new ObjectParameter("smintCHECKJAVASCRIPT", smintCHECKJAVASCRIPT) :
                new ObjectParameter("smintCHECKJAVASCRIPT", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SEARCH_CODE_TITLE_SEL", strIDsParameter, smintCHECKJAVASCRIPTParameter);
        }
    
        public virtual int SearchAllTables(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTables", searchStrParameter);
        }
    
        public virtual int SONDP(string strACQIDs)
        {
            var strACQIDsParameter = strACQIDs != null ?
                new ObjectParameter("strACQIDs", strACQIDs) :
                new ObjectParameter("strACQIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SONDP", strACQIDsParameter);
        }
    
        public virtual int SP_ABC(Nullable<int> intReasonID, string strRemovedDate, string strCopyIDs)
        {
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(int));
    
            var strRemovedDateParameter = strRemovedDate != null ?
                new ObjectParameter("strRemovedDate", strRemovedDate) :
                new ObjectParameter("strRemovedDate", typeof(string));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ABC", intReasonIDParameter, strRemovedDateParameter, strCopyIDsParameter);
        }
    
        public virtual int SP_ACQ_ACCUMULATE_UPDATE(Nullable<int> intBudgetID, Nullable<decimal> mnyAmount, Nullable<byte> intMonth, Nullable<int> intYear)
        {
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(byte));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_ACCUMULATE_UPDATE", intBudgetIDParameter, mnyAmountParameter, intMonthParameter, intYearParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_ACQUIRE_SOURCE_SEL_Result> SP_ACQ_ACQUIRE_SOURCE_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_ACQUIRE_SOURCE_SEL_Result>("SP_ACQ_ACQUIRE_SOURCE_SEL");
        }
    
        public virtual ObjectResult<SP_ACQ_BROWSE_CONTRACT_Result> SP_ACQ_BROWSE_CONTRACT(Nullable<int> intParameter1, Nullable<int> intParameter2, Nullable<int> intOption)
        {
            var intParameter1Parameter = intParameter1.HasValue ?
                new ObjectParameter("intParameter1", intParameter1) :
                new ObjectParameter("intParameter1", typeof(int));
    
            var intParameter2Parameter = intParameter2.HasValue ?
                new ObjectParameter("intParameter2", intParameter2) :
                new ObjectParameter("intParameter2", typeof(int));
    
            var intOptionParameter = intOption.HasValue ?
                new ObjectParameter("intOption", intOption) :
                new ObjectParameter("intOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BROWSE_CONTRACT_Result>("SP_ACQ_BROWSE_CONTRACT", intParameter1Parameter, intParameter2Parameter, intOptionParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_ACCOUNT_SEL_Result> SP_ACQ_BUDGET_ACCOUNT_SEL(Nullable<int> intPoID, string strLabel1, string strLabel2, string strLabel3)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strLabel1Parameter = strLabel1 != null ?
                new ObjectParameter("strLabel1", strLabel1) :
                new ObjectParameter("strLabel1", typeof(string));
    
            var strLabel2Parameter = strLabel2 != null ?
                new ObjectParameter("strLabel2", strLabel2) :
                new ObjectParameter("strLabel2", typeof(string));
    
            var strLabel3Parameter = strLabel3 != null ?
                new ObjectParameter("strLabel3", strLabel3) :
                new ObjectParameter("strLabel3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_ACCOUNT_SEL_Result>("SP_ACQ_BUDGET_ACCOUNT_SEL", intPoIDParameter, strLabel1Parameter, strLabel2Parameter, strLabel3Parameter);
        }
    
        public virtual int SP_ACQ_BUDGET_CREDIT_INS(Nullable<int> intPoID, string strCurrency, string strReason, string strTransactionDate, string strInputer, Nullable<int> intBudgetID, Nullable<decimal> dblAmount, Nullable<float> dblExchangeRate, Nullable<float> dblFixedRate)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var strTransactionDateParameter = strTransactionDate != null ?
                new ObjectParameter("strTransactionDate", strTransactionDate) :
                new ObjectParameter("strTransactionDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var dblAmountParameter = dblAmount.HasValue ?
                new ObjectParameter("dblAmount", dblAmount) :
                new ObjectParameter("dblAmount", typeof(decimal));
    
            var dblExchangeRateParameter = dblExchangeRate.HasValue ?
                new ObjectParameter("dblExchangeRate", dblExchangeRate) :
                new ObjectParameter("dblExchangeRate", typeof(float));
    
            var dblFixedRateParameter = dblFixedRate.HasValue ?
                new ObjectParameter("dblFixedRate", dblFixedRate) :
                new ObjectParameter("dblFixedRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_CREDIT_INS", intPoIDParameter, strCurrencyParameter, strReasonParameter, strTransactionDateParameter, strInputerParameter, intBudgetIDParameter, dblAmountParameter, dblExchangeRateParameter, dblFixedRateParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_CREDIT_SEL_Result> SP_ACQ_BUDGET_CREDIT_SEL(Nullable<int> intPoID)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_CREDIT_SEL_Result>("SP_ACQ_BUDGET_CREDIT_SEL", intPoIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_CURRENCY_SEL_Result> SP_ACQ_BUDGET_CURRENCY_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_CURRENCY_SEL_Result>("SP_ACQ_BUDGET_CURRENCY_SEL");
        }
    
        public virtual int SP_ACQ_BUDGET_DEBIT_DEL(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_DEBIT_DEL", strIDsParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_DEBIT_INS(Nullable<int> intPoID, string strCurrency, string strReason, Nullable<bool> bytCommited, string strTransactionDate, string strInputer, Nullable<int> intBudgetID, Nullable<decimal> dblAmount, Nullable<float> dblExchangeRate, Nullable<float> dblFixedRate)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var bytCommitedParameter = bytCommited.HasValue ?
                new ObjectParameter("bytCommited", bytCommited) :
                new ObjectParameter("bytCommited", typeof(bool));
    
            var strTransactionDateParameter = strTransactionDate != null ?
                new ObjectParameter("strTransactionDate", strTransactionDate) :
                new ObjectParameter("strTransactionDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var dblAmountParameter = dblAmount.HasValue ?
                new ObjectParameter("dblAmount", dblAmount) :
                new ObjectParameter("dblAmount", typeof(decimal));
    
            var dblExchangeRateParameter = dblExchangeRate.HasValue ?
                new ObjectParameter("dblExchangeRate", dblExchangeRate) :
                new ObjectParameter("dblExchangeRate", typeof(float));
    
            var dblFixedRateParameter = dblFixedRate.HasValue ?
                new ObjectParameter("dblFixedRate", dblFixedRate) :
                new ObjectParameter("dblFixedRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_DEBIT_INS", intPoIDParameter, strCurrencyParameter, strReasonParameter, bytCommitedParameter, strTransactionDateParameter, strInputerParameter, intBudgetIDParameter, dblAmountParameter, dblExchangeRateParameter, dblFixedRateParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_DEBIT_INSERT(Nullable<int> intPoID, string strCurrency, string strReason, Nullable<bool> bytCommited, string strTransactionDate, string strInputer, Nullable<int> intBudgetID, Nullable<decimal> dblAmount, Nullable<float> relFixedRate)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var bytCommitedParameter = bytCommited.HasValue ?
                new ObjectParameter("bytCommited", bytCommited) :
                new ObjectParameter("bytCommited", typeof(bool));
    
            var strTransactionDateParameter = strTransactionDate != null ?
                new ObjectParameter("strTransactionDate", strTransactionDate) :
                new ObjectParameter("strTransactionDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var dblAmountParameter = dblAmount.HasValue ?
                new ObjectParameter("dblAmount", dblAmount) :
                new ObjectParameter("dblAmount", typeof(decimal));
    
            var relFixedRateParameter = relFixedRate.HasValue ?
                new ObjectParameter("relFixedRate", relFixedRate) :
                new ObjectParameter("relFixedRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_DEBIT_INSERT", intPoIDParameter, strCurrencyParameter, strReasonParameter, bytCommitedParameter, strTransactionDateParameter, strInputerParameter, intBudgetIDParameter, dblAmountParameter, relFixedRateParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_DEBIT_SEL(Nullable<bool> bytCommitedOnly, Nullable<int> intPoID)
        {
            var bytCommitedOnlyParameter = bytCommitedOnly.HasValue ?
                new ObjectParameter("bytCommitedOnly", bytCommitedOnly) :
                new ObjectParameter("bytCommitedOnly", typeof(bool));
    
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_DEBIT_SEL", bytCommitedOnlyParameter, intPoIDParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_DEBIT_UPD(string strIDs, string strExchangeRates)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var strExchangeRatesParameter = strExchangeRates != null ?
                new ObjectParameter("strExchangeRates", strExchangeRates) :
                new ObjectParameter("strExchangeRates", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_DEBIT_UPD", strIDsParameter, strExchangeRatesParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_DEL(Nullable<int> intBudID)
        {
            var intBudIDParameter = intBudID.HasValue ?
                new ObjectParameter("intBudID", intBudID) :
                new ObjectParameter("intBudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_DEL", intBudIDParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_INS(string strBudgetName, string strBudgetCode, string strCurrency, string strPurpose, Nullable<decimal> monBalance, Nullable<int> intStatus, ObjectParameter intRetVal)
        {
            var strBudgetNameParameter = strBudgetName != null ?
                new ObjectParameter("strBudgetName", strBudgetName) :
                new ObjectParameter("strBudgetName", typeof(string));
    
            var strBudgetCodeParameter = strBudgetCode != null ?
                new ObjectParameter("strBudgetCode", strBudgetCode) :
                new ObjectParameter("strBudgetCode", typeof(string));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strPurposeParameter = strPurpose != null ?
                new ObjectParameter("strPurpose", strPurpose) :
                new ObjectParameter("strPurpose", typeof(string));
    
            var monBalanceParameter = monBalance.HasValue ?
                new ObjectParameter("monBalance", monBalance) :
                new ObjectParameter("monBalance", typeof(decimal));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_INS", strBudgetNameParameter, strBudgetCodeParameter, strCurrencyParameter, strPurposeParameter, monBalanceParameter, intStatusParameter, intRetVal);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_LIQUIDATE_Result> SP_ACQ_BUDGET_LIQUIDATE(Nullable<int> intPOID)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_LIQUIDATE_Result>("SP_ACQ_BUDGET_LIQUIDATE", intPOIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_NAME_SEL_Result> SP_ACQ_BUDGET_NAME_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_NAME_SEL_Result>("SP_ACQ_BUDGET_NAME_SEL");
        }
    
        public virtual int SP_ACQ_BUDGET_PO_UPD(Nullable<int> intBudgetID, Nullable<decimal> dblAmount)
        {
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var dblAmountParameter = dblAmount.HasValue ?
                new ObjectParameter("dblAmount", dblAmount) :
                new ObjectParameter("dblAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_PO_UPD", intBudgetIDParameter, dblAmountParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_SEL_Result> SP_ACQ_BUDGET_SEL(Nullable<int> intBudID)
        {
            var intBudIDParameter = intBudID.HasValue ?
                new ObjectParameter("intBudID", intBudID) :
                new ObjectParameter("intBudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_SEL_Result>("SP_ACQ_BUDGET_SEL", intBudIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_SEL_STATUS_Result> SP_ACQ_BUDGET_SEL_STATUS(Nullable<bool> intStatus)
        {
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_SEL_STATUS_Result>("SP_ACQ_BUDGET_SEL_STATUS", intStatusParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_SUM_SEL_Result> SP_ACQ_BUDGET_SUM_SEL(Nullable<int> intBudgetID)
        {
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_SUM_SEL_Result>("SP_ACQ_BUDGET_SUM_SEL", intBudgetIDParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_TRANSACTION_LOG(Nullable<int> intBudgetID, string strYear, string strMonth)
        {
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var strYearParameter = strYear != null ?
                new ObjectParameter("strYear", strYear) :
                new ObjectParameter("strYear", typeof(string));
    
            var strMonthParameter = strMonth != null ?
                new ObjectParameter("strMonth", strMonth) :
                new ObjectParameter("strMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_TRANSACTION_LOG", intBudgetIDParameter, strYearParameter, strMonthParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_BUDGET_TRANSACTION_SEL_Result> SP_ACQ_BUDGET_TRANSACTION_SEL(Nullable<int> intTransactionID)
        {
            var intTransactionIDParameter = intTransactionID.HasValue ?
                new ObjectParameter("intTransactionID", intTransactionID) :
                new ObjectParameter("intTransactionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_BUDGET_TRANSACTION_SEL_Result>("SP_ACQ_BUDGET_TRANSACTION_SEL", intTransactionIDParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_TRANSFER(Nullable<int> intIDSrc, Nullable<int> intIDDes, Nullable<double> dbMonSrc, Nullable<double> dbMonDes)
        {
            var intIDSrcParameter = intIDSrc.HasValue ?
                new ObjectParameter("intIDSrc", intIDSrc) :
                new ObjectParameter("intIDSrc", typeof(int));
    
            var intIDDesParameter = intIDDes.HasValue ?
                new ObjectParameter("intIDDes", intIDDes) :
                new ObjectParameter("intIDDes", typeof(int));
    
            var dbMonSrcParameter = dbMonSrc.HasValue ?
                new ObjectParameter("dbMonSrc", dbMonSrc) :
                new ObjectParameter("dbMonSrc", typeof(double));
    
            var dbMonDesParameter = dbMonDes.HasValue ?
                new ObjectParameter("dbMonDes", dbMonDes) :
                new ObjectParameter("dbMonDes", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_TRANSFER", intIDSrcParameter, intIDDesParameter, dbMonSrcParameter, dbMonDesParameter);
        }
    
        public virtual ObjectResult<string> SP_ACQ_BUDGET_UNIT_SEL(Nullable<int> intBudgetID)
        {
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ACQ_BUDGET_UNIT_SEL", intBudgetIDParameter);
        }
    
        public virtual int SP_ACQ_BUDGET_UPD(Nullable<int> intBudID, string strBudgetName, string strBudgetCode, string strCurrency, Nullable<int> intStatus, string strPurpose, ObjectParameter intRetVal)
        {
            var intBudIDParameter = intBudID.HasValue ?
                new ObjectParameter("intBudID", intBudID) :
                new ObjectParameter("intBudID", typeof(int));
    
            var strBudgetNameParameter = strBudgetName != null ?
                new ObjectParameter("strBudgetName", strBudgetName) :
                new ObjectParameter("strBudgetName", typeof(string));
    
            var strBudgetCodeParameter = strBudgetCode != null ?
                new ObjectParameter("strBudgetCode", strBudgetCode) :
                new ObjectParameter("strBudgetCode", typeof(string));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var strPurposeParameter = strPurpose != null ?
                new ObjectParameter("strPurpose", strPurpose) :
                new ObjectParameter("strPurpose", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_BUDGET_UPD", intBudIDParameter, strBudgetNameParameter, strBudgetCodeParameter, strCurrencyParameter, intStatusParameter, strPurposeParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_CHANGE_PO_STATUS(string strPOIDs, Nullable<int> intStatusID)
        {
            var strPOIDsParameter = strPOIDs != null ?
                new ObjectParameter("strPOIDs", strPOIDs) :
                new ObjectParameter("strPOIDs", typeof(string));
    
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CHANGE_PO_STATUS", strPOIDsParameter, intStatusIDParameter);
        }
    
        public virtual ObjectResult<string> SP_ACQ_CHECK_EXITS_COPYNUMBER_HI(Nullable<int> intLocID, Nullable<int> intLibID, Nullable<int> intInventoryID, string strShelf, Nullable<int> intSessionID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intSessionIDParameter = intSessionID.HasValue ?
                new ObjectParameter("intSessionID", intSessionID) :
                new ObjectParameter("intSessionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ACQ_CHECK_EXITS_COPYNUMBER_HI", intLocIDParameter, intLibIDParameter, intInventoryIDParameter, strShelfParameter, intSessionIDParameter);
        }
    
        public virtual ObjectResult<string> SP_ACQ_CHECK_EXITS_COPYNUMBER_HOLDING(Nullable<int> intSessionID)
        {
            var intSessionIDParameter = intSessionID.HasValue ?
                new ObjectParameter("intSessionID", intSessionID) :
                new ObjectParameter("intSessionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ACQ_CHECK_EXITS_COPYNUMBER_HOLDING", intSessionIDParameter);
        }
    
        public virtual int SP_ACQ_CLEAR_INIT_INVENTORY(Nullable<int> intSessionID)
        {
            var intSessionIDParameter = intSessionID.HasValue ?
                new ObjectParameter("intSessionID", intSessionID) :
                new ObjectParameter("intSessionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CLEAR_INIT_INVENTORY", intSessionIDParameter);
        }
    
        public virtual int SP_ACQ_CLOSE_INVENTORY(Nullable<int> intInventoryID)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CLOSE_INVENTORY", intInventoryIDParameter);
        }
    
        public virtual int SP_ACQ_CONTRACT_SEARCH(string strSelectStatement)
        {
            var strSelectStatementParameter = strSelectStatement != null ?
                new ObjectParameter("strSelectStatement", strSelectStatement) :
                new ObjectParameter("strSelectStatement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CONTRACT_SEARCH", strSelectStatementParameter);
        }
    
        public virtual int SP_ACQ_CREATE_CONTRACT(string strReceiptNo, string strPoName, Nullable<int> intVendorID, Nullable<int> intPoType, string strValidDate, string strFilledDate, Nullable<int> intStatusID, Nullable<decimal> dblTotalAmount, Nullable<decimal> dblPrepaidAmount, Nullable<float> dblFixedRate, Nullable<float> dblDiscount, string strCurrency, ObjectParameter intRetVal)
        {
            var strReceiptNoParameter = strReceiptNo != null ?
                new ObjectParameter("strReceiptNo", strReceiptNo) :
                new ObjectParameter("strReceiptNo", typeof(string));
    
            var strPoNameParameter = strPoName != null ?
                new ObjectParameter("strPoName", strPoName) :
                new ObjectParameter("strPoName", typeof(string));
    
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            var intPoTypeParameter = intPoType.HasValue ?
                new ObjectParameter("intPoType", intPoType) :
                new ObjectParameter("intPoType", typeof(int));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strFilledDateParameter = strFilledDate != null ?
                new ObjectParameter("strFilledDate", strFilledDate) :
                new ObjectParameter("strFilledDate", typeof(string));
    
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            var dblTotalAmountParameter = dblTotalAmount.HasValue ?
                new ObjectParameter("dblTotalAmount", dblTotalAmount) :
                new ObjectParameter("dblTotalAmount", typeof(decimal));
    
            var dblPrepaidAmountParameter = dblPrepaidAmount.HasValue ?
                new ObjectParameter("dblPrepaidAmount", dblPrepaidAmount) :
                new ObjectParameter("dblPrepaidAmount", typeof(decimal));
    
            var dblFixedRateParameter = dblFixedRate.HasValue ?
                new ObjectParameter("dblFixedRate", dblFixedRate) :
                new ObjectParameter("dblFixedRate", typeof(float));
    
            var dblDiscountParameter = dblDiscount.HasValue ?
                new ObjectParameter("dblDiscount", dblDiscount) :
                new ObjectParameter("dblDiscount", typeof(float));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CREATE_CONTRACT", strReceiptNoParameter, strPoNameParameter, intVendorIDParameter, intPoTypeParameter, strValidDateParameter, strFilledDateParameter, intStatusIDParameter, dblTotalAmountParameter, dblPrepaidAmountParameter, dblFixedRateParameter, dblDiscountParameter, strCurrencyParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_CREATE_REQUEST(string chrRegularityCode, Nullable<int> intTypeID, Nullable<float> decUnitPrice, string strCurrency, Nullable<bool> bytAccepted, string strNote, Nullable<bool> bytRenewed, Nullable<decimal> decIssuePrice, string strISBN, string strISSN, string strEdition, Nullable<int> intUrgency, string strSerialCode, string strPubYear, string strValidSubscribedDate, string strExpiredSubscribedDate, Nullable<int> intLanguageID, string strRequester, Nullable<bool> bytAcquired, Nullable<int> intCountryID, string strPublisher, Nullable<int> intIssues, Nullable<int> intAcceptedCopies, Nullable<int> intReceivedCopies, Nullable<int> intRequestedCopies, string strAuthor, Nullable<int> intItemID, string strTitle, Nullable<int> intMediumID, Nullable<int> intItemTypeID, ObjectParameter intRetVal)
        {
            var chrRegularityCodeParameter = chrRegularityCode != null ?
                new ObjectParameter("chrRegularityCode", chrRegularityCode) :
                new ObjectParameter("chrRegularityCode", typeof(string));
    
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            var decUnitPriceParameter = decUnitPrice.HasValue ?
                new ObjectParameter("decUnitPrice", decUnitPrice) :
                new ObjectParameter("decUnitPrice", typeof(float));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var bytAcceptedParameter = bytAccepted.HasValue ?
                new ObjectParameter("bytAccepted", bytAccepted) :
                new ObjectParameter("bytAccepted", typeof(bool));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var bytRenewedParameter = bytRenewed.HasValue ?
                new ObjectParameter("bytRenewed", bytRenewed) :
                new ObjectParameter("bytRenewed", typeof(bool));
    
            var decIssuePriceParameter = decIssuePrice.HasValue ?
                new ObjectParameter("decIssuePrice", decIssuePrice) :
                new ObjectParameter("decIssuePrice", typeof(decimal));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var intUrgencyParameter = intUrgency.HasValue ?
                new ObjectParameter("intUrgency", intUrgency) :
                new ObjectParameter("intUrgency", typeof(int));
    
            var strSerialCodeParameter = strSerialCode != null ?
                new ObjectParameter("strSerialCode", strSerialCode) :
                new ObjectParameter("strSerialCode", typeof(string));
    
            var strPubYearParameter = strPubYear != null ?
                new ObjectParameter("strPubYear", strPubYear) :
                new ObjectParameter("strPubYear", typeof(string));
    
            var strValidSubscribedDateParameter = strValidSubscribedDate != null ?
                new ObjectParameter("strValidSubscribedDate", strValidSubscribedDate) :
                new ObjectParameter("strValidSubscribedDate", typeof(string));
    
            var strExpiredSubscribedDateParameter = strExpiredSubscribedDate != null ?
                new ObjectParameter("strExpiredSubscribedDate", strExpiredSubscribedDate) :
                new ObjectParameter("strExpiredSubscribedDate", typeof(string));
    
            var intLanguageIDParameter = intLanguageID.HasValue ?
                new ObjectParameter("intLanguageID", intLanguageID) :
                new ObjectParameter("intLanguageID", typeof(int));
    
            var strRequesterParameter = strRequester != null ?
                new ObjectParameter("strRequester", strRequester) :
                new ObjectParameter("strRequester", typeof(string));
    
            var bytAcquiredParameter = bytAcquired.HasValue ?
                new ObjectParameter("bytAcquired", bytAcquired) :
                new ObjectParameter("bytAcquired", typeof(bool));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var intIssuesParameter = intIssues.HasValue ?
                new ObjectParameter("intIssues", intIssues) :
                new ObjectParameter("intIssues", typeof(int));
    
            var intAcceptedCopiesParameter = intAcceptedCopies.HasValue ?
                new ObjectParameter("intAcceptedCopies", intAcceptedCopies) :
                new ObjectParameter("intAcceptedCopies", typeof(int));
    
            var intReceivedCopiesParameter = intReceivedCopies.HasValue ?
                new ObjectParameter("intReceivedCopies", intReceivedCopies) :
                new ObjectParameter("intReceivedCopies", typeof(int));
    
            var intRequestedCopiesParameter = intRequestedCopies.HasValue ?
                new ObjectParameter("intRequestedCopies", intRequestedCopies) :
                new ObjectParameter("intRequestedCopies", typeof(int));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intMediumIDParameter = intMediumID.HasValue ?
                new ObjectParameter("intMediumID", intMediumID) :
                new ObjectParameter("intMediumID", typeof(int));
    
            var intItemTypeIDParameter = intItemTypeID.HasValue ?
                new ObjectParameter("intItemTypeID", intItemTypeID) :
                new ObjectParameter("intItemTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CREATE_REQUEST", chrRegularityCodeParameter, intTypeIDParameter, decUnitPriceParameter, strCurrencyParameter, bytAcceptedParameter, strNoteParameter, bytRenewedParameter, decIssuePriceParameter, strISBNParameter, strISSNParameter, strEditionParameter, intUrgencyParameter, strSerialCodeParameter, strPubYearParameter, strValidSubscribedDateParameter, strExpiredSubscribedDateParameter, intLanguageIDParameter, strRequesterParameter, bytAcquiredParameter, intCountryIDParameter, strPublisherParameter, intIssuesParameter, intAcceptedCopiesParameter, intReceivedCopiesParameter, intRequestedCopiesParameter, strAuthorParameter, intItemIDParameter, strTitleParameter, intMediumIDParameter, intItemTypeIDParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_CURRENCY_DEL(string strCurrencyCode, ObjectParameter intRetVal)
        {
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CURRENCY_DEL", strCurrencyCodeParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_CURRENCY_INS(string strCurrencyCode, Nullable<double> douRate, ObjectParameter intRetVal)
        {
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var douRateParameter = douRate.HasValue ?
                new ObjectParameter("douRate", douRate) :
                new ObjectParameter("douRate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CURRENCY_INS", strCurrencyCodeParameter, douRateParameter, intRetVal);
        }
    
        public virtual ObjectResult<SP_ACQ_CURRENCY_SEL_Result> SP_ACQ_CURRENCY_SEL(string strCurrencyCode)
        {
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_CURRENCY_SEL_Result>("SP_ACQ_CURRENCY_SEL", strCurrencyCodeParameter);
        }
    
        public virtual int SP_ACQ_CURRENCY_UPD(string strCurrencyCode, Nullable<double> douRate, ObjectParameter intRetVal)
        {
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var douRateParameter = douRate.HasValue ?
                new ObjectParameter("douRate", douRate) :
                new ObjectParameter("douRate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_CURRENCY_UPD", strCurrencyCodeParameter, douRateParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_DEBIT_UPD(Nullable<int> intTransactionID, Nullable<int> intPoID, string strCurrency, Nullable<bool> bytCommited, string strReason, string strTransactionDate, string strInputer, Nullable<int> intBudgetID, Nullable<decimal> mnyAmount, Nullable<float> relFixedRate, Nullable<float> relExChangeRate)
        {
            var intTransactionIDParameter = intTransactionID.HasValue ?
                new ObjectParameter("intTransactionID", intTransactionID) :
                new ObjectParameter("intTransactionID", typeof(int));
    
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var bytCommitedParameter = bytCommited.HasValue ?
                new ObjectParameter("bytCommited", bytCommited) :
                new ObjectParameter("bytCommited", typeof(bool));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var strTransactionDateParameter = strTransactionDate != null ?
                new ObjectParameter("strTransactionDate", strTransactionDate) :
                new ObjectParameter("strTransactionDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var relFixedRateParameter = relFixedRate.HasValue ?
                new ObjectParameter("relFixedRate", relFixedRate) :
                new ObjectParameter("relFixedRate", typeof(float));
    
            var relExChangeRateParameter = relExChangeRate.HasValue ?
                new ObjectParameter("relExChangeRate", relExChangeRate) :
                new ObjectParameter("relExChangeRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_DEBIT_UPD", intTransactionIDParameter, intPoIDParameter, strCurrencyParameter, bytCommitedParameter, strReasonParameter, strTransactionDateParameter, strInputerParameter, intBudgetIDParameter, mnyAmountParameter, relFixedRateParameter, relExChangeRateParameter);
        }
    
        public virtual int SP_ACQ_DEL_DEBIT_AMOUNT(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_DEL_DEBIT_AMOUNT", strIDsParameter);
        }
    
        public virtual int SP_ACQ_DELETE_CONTRACT(Nullable<int> intID, ObjectParameter intRetVal)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_DELETE_CONTRACT", intIDParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_FINE_DEL(Nullable<int> intType, Nullable<int> intID, Nullable<int> intBudgetID)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_FINE_DEL", intTypeParameter, intIDParameter, intBudgetIDParameter);
        }
    
        public virtual int SP_ACQ_FINE_INS(Nullable<int> intType, Nullable<int> intBudgetID, Nullable<int> intPoID, string strCurrency, string strReason, Nullable<bool> bytCommited, string strTransactionDate, string strInputer, Nullable<decimal> mnyAmount, Nullable<double> dblExchangeRate, Nullable<double> dblFixedRate)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var bytCommitedParameter = bytCommited.HasValue ?
                new ObjectParameter("bytCommited", bytCommited) :
                new ObjectParameter("bytCommited", typeof(bool));
    
            var strTransactionDateParameter = strTransactionDate != null ?
                new ObjectParameter("strTransactionDate", strTransactionDate) :
                new ObjectParameter("strTransactionDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var dblExchangeRateParameter = dblExchangeRate.HasValue ?
                new ObjectParameter("dblExchangeRate", dblExchangeRate) :
                new ObjectParameter("dblExchangeRate", typeof(double));
    
            var dblFixedRateParameter = dblFixedRate.HasValue ?
                new ObjectParameter("dblFixedRate", dblFixedRate) :
                new ObjectParameter("dblFixedRate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_FINE_INS", intTypeParameter, intBudgetIDParameter, intPoIDParameter, strCurrencyParameter, strReasonParameter, bytCommitedParameter, strTransactionDateParameter, strInputerParameter, mnyAmountParameter, dblExchangeRateParameter, dblFixedRateParameter);
        }
    
        public virtual int SP_ACQ_FINE_SEL(Nullable<int> intType, Nullable<int> intBudgetID, Nullable<byte> intMonth, Nullable<int> intYear, Nullable<int> intPOID, ObjectParameter mnyBalance, ObjectParameter mnyRealBalance, ObjectParameter strCurrency, ObjectParameter mnyStartRemain, ObjectParameter mnyLastBase)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(byte));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_FINE_SEL", intTypeParameter, intBudgetIDParameter, intMonthParameter, intYearParameter, intPOIDParameter, mnyBalance, mnyRealBalance, strCurrency, mnyStartRemain, mnyLastBase);
        }
    
        public virtual int SP_ACQ_FINE_UPD(Nullable<int> intType, Nullable<int> intID, Nullable<int> intBudgetID, Nullable<int> intPoID, string strCurrency, string strReason, Nullable<bool> bytCommited, string strTransactionDate, string strInputer, Nullable<decimal> mnyAmount, Nullable<float> dblExchangeRate)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var bytCommitedParameter = bytCommited.HasValue ?
                new ObjectParameter("bytCommited", bytCommited) :
                new ObjectParameter("bytCommited", typeof(bool));
    
            var strTransactionDateParameter = strTransactionDate != null ?
                new ObjectParameter("strTransactionDate", strTransactionDate) :
                new ObjectParameter("strTransactionDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var dblExchangeRateParameter = dblExchangeRate.HasValue ?
                new ObjectParameter("dblExchangeRate", dblExchangeRate) :
                new ObjectParameter("dblExchangeRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_FINE_UPD", intTypeParameter, intIDParameter, intBudgetIDParameter, intPoIDParameter, strCurrencyParameter, strReasonParameter, bytCommitedParameter, strTransactionDateParameter, strInputerParameter, mnyAmountParameter, dblExchangeRateParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_ACQ_PO_Result> SP_ACQ_GET_ACQ_PO(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_ACQ_PO_Result>("SP_ACQ_GET_ACQ_PO", intIDParameter);
        }
    
        public virtual int SP_ACQ_GET_ACQITEM_BY_PO(string strPOIDs)
        {
            var strPOIDsParameter = strPOIDs != null ?
                new ObjectParameter("strPOIDs", strPOIDs) :
                new ObjectParameter("strPOIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GET_ACQITEM_BY_PO", strPOIDsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ACQ_GET_ACQYEAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ACQ_GET_ACQYEAR");
        }
    
        public virtual ObjectResult<SP_ACQ_GET_BUDGET_INFOR_Result> SP_ACQ_GET_BUDGET_INFOR(Nullable<int> intBudID, Nullable<int> intFromPO, Nullable<int> intDisplay)
        {
            var intBudIDParameter = intBudID.HasValue ?
                new ObjectParameter("intBudID", intBudID) :
                new ObjectParameter("intBudID", typeof(int));
    
            var intFromPOParameter = intFromPO.HasValue ?
                new ObjectParameter("intFromPO", intFromPO) :
                new ObjectParameter("intFromPO", typeof(int));
    
            var intDisplayParameter = intDisplay.HasValue ?
                new ObjectParameter("intDisplay", intDisplay) :
                new ObjectParameter("intDisplay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_BUDGET_INFOR_Result>("SP_ACQ_GET_BUDGET_INFOR", intBudIDParameter, intFromPOParameter, intDisplayParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_CAT_DIC_LIST_Result> SP_ACQ_GET_CAT_DIC_LIST(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_CAT_DIC_LIST_Result>("SP_ACQ_GET_CAT_DIC_LIST", intIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_CHECKINGRECEIVED_Result> SP_ACQ_GET_CHECKINGRECEIVED(Nullable<int> intPOID)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_CHECKINGRECEIVED_Result>("SP_ACQ_GET_CHECKINGRECEIVED", intPOIDParameter);
        }
    
        public virtual int SP_ACQ_GET_CLIAIMITEMS(Nullable<int> intPOID, string strHaveFields)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            var strHaveFieldsParameter = strHaveFields != null ?
                new ObjectParameter("strHaveFields", strHaveFields) :
                new ObjectParameter("strHaveFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GET_CLIAIMITEMS", intPOIDParameter, strHaveFieldsParameter);
        }
    
        public virtual int SP_ACQ_GET_COMPREHENSIVE_RB(string strItemIDs, string strCurrency, string strToTime, string strFromTime, string iLibID)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strToTimeParameter = strToTime != null ?
                new ObjectParameter("strToTime", strToTime) :
                new ObjectParameter("strToTime", typeof(string));
    
            var strFromTimeParameter = strFromTime != null ?
                new ObjectParameter("strFromTime", strFromTime) :
                new ObjectParameter("strFromTime", typeof(string));
    
            var iLibIDParameter = iLibID != null ?
                new ObjectParameter("iLibID", iLibID) :
                new ObjectParameter("iLibID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GET_COMPREHENSIVE_RB", strItemIDsParameter, strCurrencyParameter, strToTimeParameter, strFromTimeParameter, iLibIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_CONTACTDETAIL_Result> SP_ACQ_GET_CONTACTDETAIL(Nullable<int> intVendorID)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_CONTACTDETAIL_Result>("SP_ACQ_GET_CONTACTDETAIL", intVendorIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_CONTRACT_Result> SP_ACQ_GET_CONTRACT(Nullable<int> intACQPOID, string strReceiptPO)
        {
            var intACQPOIDParameter = intACQPOID.HasValue ?
                new ObjectParameter("intACQPOID", intACQPOID) :
                new ObjectParameter("intACQPOID", typeof(int));
    
            var strReceiptPOParameter = strReceiptPO != null ?
                new ObjectParameter("strReceiptPO", strReceiptPO) :
                new ObjectParameter("strReceiptPO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_CONTRACT_Result>("SP_ACQ_GET_CONTRACT", intACQPOIDParameter, strReceiptPOParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_DEBIT_AMOUNT_Result> SP_ACQ_GET_DEBIT_AMOUNT(Nullable<bool> bytCommitedOnly, Nullable<int> intPoID)
        {
            var bytCommitedOnlyParameter = bytCommitedOnly.HasValue ?
                new ObjectParameter("bytCommitedOnly", bytCommitedOnly) :
                new ObjectParameter("bytCommitedOnly", typeof(bool));
    
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_DEBIT_AMOUNT_Result>("SP_ACQ_GET_DEBIT_AMOUNT", bytCommitedOnlyParameter, intPoIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_FINACIAL_Result> SP_ACQ_GET_FINACIAL(Nullable<int> intContractID)
        {
            var intContractIDParameter = intContractID.HasValue ?
                new ObjectParameter("intContractID", intContractID) :
                new ObjectParameter("intContractID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_FINACIAL_Result>("SP_ACQ_GET_FINACIAL", intContractIDParameter);
        }
    
        public virtual int SP_ACQ_GET_ITEM_FALSE_PATHS(Nullable<int> intLocID, Nullable<int> intLibID, Nullable<int> intInventoryID, string strShelf, string strOrderField, string strDirection)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strOrderFieldParameter = strOrderField != null ?
                new ObjectParameter("strOrderField", strOrderField) :
                new ObjectParameter("strOrderField", typeof(string));
    
            var strDirectionParameter = strDirection != null ?
                new ObjectParameter("strDirection", strDirection) :
                new ObjectParameter("strDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GET_ITEM_FALSE_PATHS", intLocIDParameter, intLibIDParameter, intInventoryIDParameter, strShelfParameter, strOrderFieldParameter, strDirectionParameter);
        }
    
        public virtual int SP_ACQ_GET_ITEM_NOHAVE_REAL(Nullable<int> intLocID, Nullable<int> intLibID, Nullable<int> intInventoryID, string strShelf, string strOrderField, string strDirection)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strOrderFieldParameter = strOrderField != null ?
                new ObjectParameter("strOrderField", strOrderField) :
                new ObjectParameter("strOrderField", typeof(string));
    
            var strDirectionParameter = strDirection != null ?
                new ObjectParameter("strDirection", strDirection) :
                new ObjectParameter("strDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GET_ITEM_NOHAVE_REAL", intLocIDParameter, intLibIDParameter, intInventoryIDParameter, strShelfParameter, strOrderFieldParameter, strDirectionParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_ITEMS_OF_CONTRACT_Result> SP_ACQ_GET_ITEMS_OF_CONTRACT(Nullable<int> intContractID)
        {
            var intContractIDParameter = intContractID.HasValue ?
                new ObjectParameter("intContractID", intContractID) :
                new ObjectParameter("intContractID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_ITEMS_OF_CONTRACT_Result>("SP_ACQ_GET_ITEMS_OF_CONTRACT", intContractIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_ITEMS_TOCLAIM_Result> SP_ACQ_GET_ITEMS_TOCLAIM(Nullable<int> intPOID)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_ITEMS_TOCLAIM_Result>("SP_ACQ_GET_ITEMS_TOCLAIM", intPOIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_ORDER_ITEMS_Result> SP_ACQ_GET_ORDER_ITEMS(Nullable<int> intRequestID, Nullable<int> intTypeID)
        {
            var intRequestIDParameter = intRequestID.HasValue ?
                new ObjectParameter("intRequestID", intRequestID) :
                new ObjectParameter("intRequestID", typeof(int));
    
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_ORDER_ITEMS_Result>("SP_ACQ_GET_ORDER_ITEMS", intRequestIDParameter, intTypeIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_ORDER_ITEMS_LIST_Result> SP_ACQ_GET_ORDER_ITEMS_LIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_ORDER_ITEMS_LIST_Result>("SP_ACQ_GET_ORDER_ITEMS_LIST");
        }
    
        public virtual ObjectResult<SP_ACQ_GET_PO_VENDOR_INF_Result> SP_ACQ_GET_PO_VENDOR_INF(Nullable<int> intPOID, string strHaveFields)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            var strHaveFieldsParameter = strHaveFields != null ?
                new ObjectParameter("strHaveFields", strHaveFields) :
                new ObjectParameter("strHaveFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_PO_VENDOR_INF_Result>("SP_ACQ_GET_PO_VENDOR_INF", intPOIDParameter, strHaveFieldsParameter);
        }
    
        public virtual int SP_ACQ_GET_POID_BY_POS(Nullable<int> intPOS)
        {
            var intPOSParameter = intPOS.HasValue ?
                new ObjectParameter("intPOS", intPOS) :
                new ObjectParameter("intPOS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GET_POID_BY_POS", intPOSParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_SEPLOC_ITEMS_Result> SP_ACQ_GET_SEPLOC_ITEMS(Nullable<int> intTop, Nullable<int> intPOID, string strHaveFields)
        {
            var intTopParameter = intTop.HasValue ?
                new ObjectParameter("intTop", intTop) :
                new ObjectParameter("intTop", typeof(int));
    
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            var strHaveFieldsParameter = strHaveFields != null ?
                new ObjectParameter("strHaveFields", strHaveFields) :
                new ObjectParameter("strHaveFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_SEPLOC_ITEMS_Result>("SP_ACQ_GET_SEPLOC_ITEMS", intTopParameter, intPOIDParameter, strHaveFieldsParameter);
        }
    
        public virtual int SP_ACQ_GET_SEPLOC_LIBHOL(Nullable<int> intFlage, Nullable<int> intPOID)
        {
            var intFlageParameter = intFlage.HasValue ?
                new ObjectParameter("intFlage", intFlage) :
                new ObjectParameter("intFlage", typeof(int));
    
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GET_SEPLOC_LIBHOL", intFlageParameter, intPOIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_STATUS_Result> SP_ACQ_GET_STATUS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_STATUS_Result>("SP_ACQ_GET_STATUS");
        }
    
        public virtual ObjectResult<SP_ACQ_GET_STATUS_OF_CONTRACT_Result> SP_ACQ_GET_STATUS_OF_CONTRACT(Nullable<int> intContractID)
        {
            var intContractIDParameter = intContractID.HasValue ?
                new ObjectParameter("intContractID", intContractID) :
                new ObjectParameter("intContractID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_STATUS_OF_CONTRACT_Result>("SP_ACQ_GET_STATUS_OF_CONTRACT", intContractIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ACQ_GET_SUMMARY_HOLDING(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, Nullable<int> intMode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ACQ_GET_SUMMARY_HOLDING", intLibIDParameter, intLocIDParameter, strShelfParameter, intModeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ACQ_GET_TOTAL_CONTRACTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ACQ_GET_TOTAL_CONTRACTS");
        }
    
        public virtual ObjectResult<SP_ACQ_GET_VENDOR_Result> SP_ACQ_GET_VENDOR(Nullable<int> intVendorID)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_VENDOR_Result>("SP_ACQ_GET_VENDOR", intVendorIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_GET_WAITING_PO_Result> SP_ACQ_GET_WAITING_PO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_GET_WAITING_PO_Result>("SP_ACQ_GET_WAITING_PO");
        }
    
        public virtual int SP_ACQ_GETMAXID_HINT(ObjectParameter intInventoryTime)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_GETMAXID_HINT", intInventoryTime);
        }
    
        public virtual int SP_ACQ_HINTVENTORY_DEL(Nullable<int> intInventoryID, string strCopynumbers)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strCopynumbersParameter = strCopynumbers != null ?
                new ObjectParameter("strCopynumbers", strCopynumbers) :
                new ObjectParameter("strCopynumbers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_HINTVENTORY_DEL", intInventoryIDParameter, strCopynumbersParameter);
        }
    
        public virtual int SP_ACQ_HOL_INVENTORY_LAST_STEP(Nullable<int> intInventoryID, Nullable<int> intInventoryTime, Nullable<int> intLibID, Nullable<int> intLocID, string strShelf)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var intInventoryTimeParameter = intInventoryTime.HasValue ?
                new ObjectParameter("intInventoryTime", intInventoryTime) :
                new ObjectParameter("intInventoryTime", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_HOL_INVENTORY_LAST_STEP", intInventoryIDParameter, intInventoryTimeParameter, intLibIDParameter, intLocIDParameter, strShelfParameter);
        }
    
        public virtual int SP_ACQ_HOL_LOC_GETMINMAX_HOLDINGID(Nullable<int> intLocationID)
        {
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_HOL_LOC_GETMINMAX_HOLDINGID", intLocationIDParameter);
        }
    
        public virtual int SP_ACQ_HOLDING_INV_REMOVED(Nullable<int> intInventoryID, Nullable<int> intUseID, string strCopynumbers)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var intUseIDParameter = intUseID.HasValue ?
                new ObjectParameter("intUseID", intUseID) :
                new ObjectParameter("intUseID", typeof(int));
    
            var strCopynumbersParameter = strCopynumbers != null ?
                new ObjectParameter("strCopynumbers", strCopynumbers) :
                new ObjectParameter("strCopynumbers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_HOLDING_INV_REMOVED", intInventoryIDParameter, intUseIDParameter, strCopynumbersParameter);
        }
    
        public virtual int SP_ACQ_HOLDING_REMOVED(Nullable<int> intUseID, string strCopynumbers)
        {
            var intUseIDParameter = intUseID.HasValue ?
                new ObjectParameter("intUseID", intUseID) :
                new ObjectParameter("intUseID", typeof(int));
    
            var strCopynumbersParameter = strCopynumbers != null ?
                new ObjectParameter("strCopynumbers", strCopynumbers) :
                new ObjectParameter("strCopynumbers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_HOLDING_REMOVED", intUseIDParameter, strCopynumbersParameter);
        }
    
        public virtual int SP_ACQ_HOLDING_UPDATE(Nullable<int> intInventoryID, string strCopynumbers, string strReason)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strCopynumbersParameter = strCopynumbers != null ?
                new ObjectParameter("strCopynumbers", strCopynumbers) :
                new ObjectParameter("strCopynumbers", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_HOLDING_UPDATE", intInventoryIDParameter, strCopynumbersParameter, strReasonParameter);
        }
    
        public virtual int SP_ACQ_INIT_COPYNUMBERINVEN(string strCopyNumbers, Nullable<int> intSessionIDInput, ObjectParameter intSessionIDOutput)
        {
            var strCopyNumbersParameter = strCopyNumbers != null ?
                new ObjectParameter("strCopyNumbers", strCopyNumbers) :
                new ObjectParameter("strCopyNumbers", typeof(string));
    
            var intSessionIDInputParameter = intSessionIDInput.HasValue ?
                new ObjectParameter("intSessionIDInput", intSessionIDInput) :
                new ObjectParameter("intSessionIDInput", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_INIT_COPYNUMBERINVEN", strCopyNumbersParameter, intSessionIDInputParameter, intSessionIDOutput);
        }
    
        public virtual ObjectResult<SP_ACQ_INVENTORY_GET_Result> SP_ACQ_INVENTORY_GET(Nullable<int> intInventoryID, Nullable<int> intStatus)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_INVENTORY_GET_Result>("SP_ACQ_INVENTORY_GET", intInventoryIDParameter, intStatusParameter);
        }
    
        public virtual int SP_ACQ_INVENTORY_INS(string strInventoryName, string strInventoryDate, string strInputer, ObjectParameter intResult)
        {
            var strInventoryNameParameter = strInventoryName != null ?
                new ObjectParameter("strInventoryName", strInventoryName) :
                new ObjectParameter("strInventoryName", typeof(string));
    
            var strInventoryDateParameter = strInventoryDate != null ?
                new ObjectParameter("strInventoryDate", strInventoryDate) :
                new ObjectParameter("strInventoryDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_INVENTORY_INS", strInventoryNameParameter, strInventoryDateParameter, strInputerParameter, intResult);
        }
    
        public virtual int SP_ACQ_INVENTORY_RESULT_SEL(Nullable<int> intIsFromHolding, string strCopyIDs, string strReason, string strOnLoan)
        {
            var intIsFromHoldingParameter = intIsFromHolding.HasValue ?
                new ObjectParameter("intIsFromHolding", intIsFromHolding) :
                new ObjectParameter("intIsFromHolding", typeof(int));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var strOnLoanParameter = strOnLoan != null ?
                new ObjectParameter("strOnLoan", strOnLoan) :
                new ObjectParameter("strOnLoan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_INVENTORY_RESULT_SEL", intIsFromHoldingParameter, strCopyIDsParameter, strReasonParameter, strOnLoanParameter);
        }
    
        public virtual int SP_ACQ_INVENTORY_SUCESS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_INVENTORY_SUCESS");
        }
    
        public virtual int SP_ACQ_ITEM_BY_PO_SEL(string strPOIDs)
        {
            var strPOIDsParameter = strPOIDs != null ?
                new ObjectParameter("strPOIDs", strPOIDs) :
                new ObjectParameter("strPOIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_ITEM_BY_PO_SEL", strPOIDsParameter);
        }
    
        public virtual int SP_ACQ_ITEM_BY_TITLE_SEL(string strTitle, string strSql)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strSqlParameter = strSql != null ?
                new ObjectParameter("strSql", strSql) :
                new ObjectParameter("strSql", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_ITEM_BY_TITLE_SEL", strTitleParameter, strSqlParameter);
        }
    
        public virtual ObjectResult<string> SP_ACQ_ITEM_GET_PUBLISHER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ACQ_ITEM_GET_PUBLISHER");
        }
    
        public virtual int SP_ACQ_ITEM_POREM(string strItemIDs, ObjectParameter strSQL)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_ITEM_POREM", strItemIDsParameter, strSQL);
        }
    
        public virtual int SP_ACQ_ITEM_QUEUE_SELECT(Nullable<int> intOrderBy, string strDate)
        {
            var intOrderByParameter = intOrderBy.HasValue ?
                new ObjectParameter("intOrderBy", intOrderBy) :
                new ObjectParameter("intOrderBy", typeof(int));
    
            var strDateParameter = strDate != null ?
                new ObjectParameter("strDate", strDate) :
                new ObjectParameter("strDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_ITEM_QUEUE_SELECT", intOrderByParameter, strDateParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_ITEM_SEL_Result> SP_ACQ_ITEM_SEL(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_ITEM_SEL_Result>("SP_ACQ_ITEM_SEL", intIDParameter);
        }
    
        public virtual int SP_ACQ_ITEM_UPD(string strItemIDs, string strReceivedCopies)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var strReceivedCopiesParameter = strReceivedCopies != null ?
                new ObjectParameter("strReceivedCopies", strReceivedCopies) :
                new ObjectParameter("strReceivedCopies", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_ITEM_UPD", strItemIDsParameter, strReceivedCopiesParameter);
        }
    
        public virtual int SP_ACQ_ITEM_UPD_RECEIVE(Nullable<int> received, Nullable<int> intId)
        {
            var receivedParameter = received.HasValue ?
                new ObjectParameter("Received", received) :
                new ObjectParameter("Received", typeof(int));
    
            var intIdParameter = intId.HasValue ?
                new ObjectParameter("intId", intId) :
                new ObjectParameter("intId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_ITEM_UPD_RECEIVE", receivedParameter, intIdParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_LIB_GET_Result> SP_ACQ_LIB_GET(Nullable<int> intLocID, Nullable<int> intLibID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_LIB_GET_Result>("SP_ACQ_LIB_GET", intLocIDParameter, intLibIDParameter);
        }
    
        public virtual int SP_ACQ_NEW_INVENTORY(string strInventoryName, string strInventoryDate, string strInputer, ObjectParameter intResult)
        {
            var strInventoryNameParameter = strInventoryName != null ?
                new ObjectParameter("strInventoryName", strInventoryName) :
                new ObjectParameter("strInventoryName", typeof(string));
    
            var strInventoryDateParameter = strInventoryDate != null ?
                new ObjectParameter("strInventoryDate", strInventoryDate) :
                new ObjectParameter("strInventoryDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_NEW_INVENTORY", strInventoryNameParameter, strInventoryDateParameter, strInputerParameter, intResult);
        }
    
        public virtual int SP_ACQ_PICK_ITEMS_FOR_CONTRACT(Nullable<int> intContractID, string strItemIDs)
        {
            var intContractIDParameter = intContractID.HasValue ?
                new ObjectParameter("intContractID", intContractID) :
                new ObjectParameter("intContractID", typeof(int));
    
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PICK_ITEMS_FOR_CONTRACT", intContractIDParameter, strItemIDsParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_PO_ALL_SEL_Result> SP_ACQ_PO_ALL_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_ALL_SEL_Result>("SP_ACQ_PO_ALL_SEL");
        }
    
        public virtual ObjectResult<SP_ACQ_PO_BROWSE_Result> SP_ACQ_PO_BROWSE(Nullable<int> intBrowseType, Nullable<int> intLevel1, Nullable<int> intLevel2, Nullable<int> intMonLen)
        {
            var intBrowseTypeParameter = intBrowseType.HasValue ?
                new ObjectParameter("intBrowseType", intBrowseType) :
                new ObjectParameter("intBrowseType", typeof(int));
    
            var intLevel1Parameter = intLevel1.HasValue ?
                new ObjectParameter("intLevel1", intLevel1) :
                new ObjectParameter("intLevel1", typeof(int));
    
            var intLevel2Parameter = intLevel2.HasValue ?
                new ObjectParameter("intLevel2", intLevel2) :
                new ObjectParameter("intLevel2", typeof(int));
    
            var intMonLenParameter = intMonLen.HasValue ?
                new ObjectParameter("intMonLen", intMonLen) :
                new ObjectParameter("intMonLen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_BROWSE_Result>("SP_ACQ_PO_BROWSE", intBrowseTypeParameter, intLevel1Parameter, intLevel2Parameter, intMonLenParameter);
        }
    
        public virtual int SP_ACQ_PO_BROWSE_L1(Nullable<int> intBrowseType, Nullable<int> intLevel1)
        {
            var intBrowseTypeParameter = intBrowseType.HasValue ?
                new ObjectParameter("intBrowseType", intBrowseType) :
                new ObjectParameter("intBrowseType", typeof(int));
    
            var intLevel1Parameter = intLevel1.HasValue ?
                new ObjectParameter("intLevel1", intLevel1) :
                new ObjectParameter("intLevel1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_BROWSE_L1", intBrowseTypeParameter, intLevel1Parameter);
        }
    
        public virtual ObjectResult<SP_ACQ_PO_BY_VENDOR_SEL_Result> SP_ACQ_PO_BY_VENDOR_SEL(Nullable<int> intVendorID)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_BY_VENDOR_SEL_Result>("SP_ACQ_PO_BY_VENDOR_SEL", intVendorIDParameter);
        }
    
        public virtual int SP_ACQ_PO_DEL(Nullable<int> intPoID)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_DEL", intPoIDParameter);
        }
    
        public virtual int SP_ACQ_PO_DEL_BOOKORDER(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_DEL_BOOKORDER", strIDsParameter);
        }
    
        public virtual int SP_ACQ_PO_GET_ACQITEMS(Nullable<int> intAccepted, string strPublisher, Nullable<int> intItemTypeID, Nullable<int> intMediumID, Nullable<int> intUrgency, string strFromDate, string strToDate, string strCurrency, string strHaveFields)
        {
            var intAcceptedParameter = intAccepted.HasValue ?
                new ObjectParameter("intAccepted", intAccepted) :
                new ObjectParameter("intAccepted", typeof(int));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var intItemTypeIDParameter = intItemTypeID.HasValue ?
                new ObjectParameter("intItemTypeID", intItemTypeID) :
                new ObjectParameter("intItemTypeID", typeof(int));
    
            var intMediumIDParameter = intMediumID.HasValue ?
                new ObjectParameter("intMediumID", intMediumID) :
                new ObjectParameter("intMediumID", typeof(int));
    
            var intUrgencyParameter = intUrgency.HasValue ?
                new ObjectParameter("intUrgency", intUrgency) :
                new ObjectParameter("intUrgency", typeof(int));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strHaveFieldsParameter = strHaveFields != null ?
                new ObjectParameter("strHaveFields", strHaveFields) :
                new ObjectParameter("strHaveFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_GET_ACQITEMS", intAcceptedParameter, strPublisherParameter, intItemTypeIDParameter, intMediumIDParameter, intUrgencyParameter, strFromDateParameter, strToDateParameter, strCurrencyParameter, strHaveFieldsParameter);
        }
    
        public virtual int SP_ACQ_PO_INS(string strReceiptNo, string strPoName, Nullable<int> intVendorID, Nullable<int> intPoType, string strValidDate, string strFilledDate, string strSetDate, Nullable<int> intStatusID, Nullable<decimal> dblTotalAmount, Nullable<decimal> dblPrepaidAmount, Nullable<float> dblFixedRate, Nullable<float> dblDiscount, string strCurrency, ObjectParameter intRetVal, ObjectParameter strSQL)
        {
            var strReceiptNoParameter = strReceiptNo != null ?
                new ObjectParameter("strReceiptNo", strReceiptNo) :
                new ObjectParameter("strReceiptNo", typeof(string));
    
            var strPoNameParameter = strPoName != null ?
                new ObjectParameter("strPoName", strPoName) :
                new ObjectParameter("strPoName", typeof(string));
    
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            var intPoTypeParameter = intPoType.HasValue ?
                new ObjectParameter("intPoType", intPoType) :
                new ObjectParameter("intPoType", typeof(int));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strFilledDateParameter = strFilledDate != null ?
                new ObjectParameter("strFilledDate", strFilledDate) :
                new ObjectParameter("strFilledDate", typeof(string));
    
            var strSetDateParameter = strSetDate != null ?
                new ObjectParameter("strSetDate", strSetDate) :
                new ObjectParameter("strSetDate", typeof(string));
    
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            var dblTotalAmountParameter = dblTotalAmount.HasValue ?
                new ObjectParameter("dblTotalAmount", dblTotalAmount) :
                new ObjectParameter("dblTotalAmount", typeof(decimal));
    
            var dblPrepaidAmountParameter = dblPrepaidAmount.HasValue ?
                new ObjectParameter("dblPrepaidAmount", dblPrepaidAmount) :
                new ObjectParameter("dblPrepaidAmount", typeof(decimal));
    
            var dblFixedRateParameter = dblFixedRate.HasValue ?
                new ObjectParameter("dblFixedRate", dblFixedRate) :
                new ObjectParameter("dblFixedRate", typeof(float));
    
            var dblDiscountParameter = dblDiscount.HasValue ?
                new ObjectParameter("dblDiscount", dblDiscount) :
                new ObjectParameter("dblDiscount", typeof(float));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_INS", strReceiptNoParameter, strPoNameParameter, intVendorIDParameter, intPoTypeParameter, strValidDateParameter, strFilledDateParameter, strSetDateParameter, intStatusIDParameter, dblTotalAmountParameter, dblPrepaidAmountParameter, dblFixedRateParameter, dblDiscountParameter, strCurrencyParameter, intRetVal, strSQL);
        }
    
        public virtual ObjectResult<SP_ACQ_PO_ITEM_DETAIL_Result> SP_ACQ_PO_ITEM_DETAIL(Nullable<int> intPOID)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_ITEM_DETAIL_Result>("SP_ACQ_PO_ITEM_DETAIL", intPOIDParameter);
        }
    
        public virtual int SP_ACQ_PO_ITEM_INS(Nullable<int> intPoID, string strItemIDs)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_ITEM_INS", intPoIDParameter, strItemIDsParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_PO_ITEM_SEL_Result> SP_ACQ_PO_ITEM_SEL(Nullable<int> intPoID)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_ITEM_SEL_Result>("SP_ACQ_PO_ITEM_SEL", intPoIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_PO_ITEM_SEL_BYPOID_Result> SP_ACQ_PO_ITEM_SEL_BYPOID(Nullable<int> intPOID)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_ITEM_SEL_BYPOID_Result>("SP_ACQ_PO_ITEM_SEL_BYPOID", intPOIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ACQ_PO_SEL(Nullable<int> intPoID, Nullable<int> intDirection)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var intDirectionParameter = intDirection.HasValue ?
                new ObjectParameter("intDirection", intDirection) :
                new ObjectParameter("intDirection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ACQ_PO_SEL", intPoIDParameter, intDirectionParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_PO_SEL_BOOKORDER_Result> SP_ACQ_PO_SEL_BOOKORDER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_SEL_BOOKORDER_Result>("SP_ACQ_PO_SEL_BOOKORDER");
        }
    
        public virtual ObjectResult<SP_ACQ_PO_SELECT_Result> SP_ACQ_PO_SELECT(Nullable<int> intPoID)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_SELECT_Result>("SP_ACQ_PO_SELECT", intPoIDParameter);
        }
    
        public virtual int SP_ACQ_PO_STATUS_INS(Nullable<int> intPoID, Nullable<int> intStatusID, string strSetDate, string strNote, ObjectParameter strSQL)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            var strSetDateParameter = strSetDate != null ?
                new ObjectParameter("strSetDate", strSetDate) :
                new ObjectParameter("strSetDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_STATUS_INS", intPoIDParameter, intStatusIDParameter, strSetDateParameter, strNoteParameter, strSQL);
        }
    
        public virtual ObjectResult<SP_ACQ_PO_STATUS_SEL_Result> SP_ACQ_PO_STATUS_SEL(Nullable<int> intPoID)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_PO_STATUS_SEL_Result>("SP_ACQ_PO_STATUS_SEL", intPoIDParameter);
        }
    
        public virtual int SP_ACQ_PO_UPD_BOOKORDER(string strIDs, string strAccepted)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var strAcceptedParameter = strAccepted != null ?
                new ObjectParameter("strAccepted", strAccepted) :
                new ObjectParameter("strAccepted", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_PO_UPD_BOOKORDER", strIDsParameter, strAcceptedParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_RECEIPT_NO_SEL_Result> SP_ACQ_RECEIPT_NO_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_RECEIPT_NO_SEL_Result>("SP_ACQ_RECEIPT_NO_SEL");
        }
    
        public virtual int SP_ACQ_REM_ITEMS_OF_CONTRACT(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_REM_ITEMS_OF_CONTRACT", strItemIDsParameter);
        }
    
        public virtual int SP_ACQ_RUN_INVENTORY(Nullable<int> intLocID, Nullable<int> intLibID, Nullable<int> intPurpose, Nullable<int> intInventoryID, string strShelf, Nullable<int> intInventoryTime, Nullable<int> intIsFirstTimeInventory, Nullable<int> intSessionID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intPurposeParameter = intPurpose.HasValue ?
                new ObjectParameter("intPurpose", intPurpose) :
                new ObjectParameter("intPurpose", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intInventoryTimeParameter = intInventoryTime.HasValue ?
                new ObjectParameter("intInventoryTime", intInventoryTime) :
                new ObjectParameter("intInventoryTime", typeof(int));
    
            var intIsFirstTimeInventoryParameter = intIsFirstTimeInventory.HasValue ?
                new ObjectParameter("intIsFirstTimeInventory", intIsFirstTimeInventory) :
                new ObjectParameter("intIsFirstTimeInventory", typeof(int));
    
            var intSessionIDParameter = intSessionID.HasValue ?
                new ObjectParameter("intSessionID", intSessionID) :
                new ObjectParameter("intSessionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_RUN_INVENTORY", intLocIDParameter, intLibIDParameter, intPurposeParameter, intInventoryIDParameter, strShelfParameter, intInventoryTimeParameter, intIsFirstTimeInventoryParameter, intSessionIDParameter);
        }
    
        public virtual int SP_ACQ_SEL_FORMPRINT(string strSQL)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_SEL_FORMPRINT", strSQLParameter);
        }
    
        public virtual ObjectResult<string> SP_ACQ_SEL_PUBLISHER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_ACQ_SEL_PUBLISHER");
        }
    
        public virtual int SP_ACQ_SET_ITEMID_FOR_ACQITEM(Nullable<int> intItemID, Nullable<int> intACQItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intACQItemIDParameter = intACQItemID.HasValue ?
                new ObjectParameter("intACQItemID", intACQItemID) :
                new ObjectParameter("intACQItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_SET_ITEMID_FOR_ACQITEM", intItemIDParameter, intACQItemIDParameter);
        }
    
        public virtual int SP_ACQ_SHELF_SCHEMA_DELETE(Nullable<int> intLocID, string strShelf)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_SHELF_SCHEMA_DELETE", intLocIDParameter, strShelfParameter);
        }
    
        public virtual int SP_ACQ_SHELF_SCHEMA_INSERT(Nullable<int> intLocID, string strShelf, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<int> intWidth, Nullable<int> intDepth, Nullable<bool> intDirection)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var intWidthParameter = intWidth.HasValue ?
                new ObjectParameter("intWidth", intWidth) :
                new ObjectParameter("intWidth", typeof(int));
    
            var intDepthParameter = intDepth.HasValue ?
                new ObjectParameter("intDepth", intDepth) :
                new ObjectParameter("intDepth", typeof(int));
    
            var intDirectionParameter = intDirection.HasValue ?
                new ObjectParameter("intDirection", intDirection) :
                new ObjectParameter("intDirection", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_SHELF_SCHEMA_INSERT", intLocIDParameter, strShelfParameter, intTopCoorParameter, intLeftCoorParameter, intWidthParameter, intDepthParameter, intDirectionParameter);
        }
    
        public virtual int SP_ACQ_SHELF_SCHEMA_SELECT(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_SHELF_SCHEMA_SELECT", intLocIDParameter);
        }
    
        public virtual int SP_ACQ_SHELF_SCHEMA_UPDATE(Nullable<int> intLocID, string strShelf, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<int> intWidth, Nullable<int> intDepth, Nullable<bool> intDirection, string strSelShelf)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var intWidthParameter = intWidth.HasValue ?
                new ObjectParameter("intWidth", intWidth) :
                new ObjectParameter("intWidth", typeof(int));
    
            var intDepthParameter = intDepth.HasValue ?
                new ObjectParameter("intDepth", intDepth) :
                new ObjectParameter("intDepth", typeof(int));
    
            var intDirectionParameter = intDirection.HasValue ?
                new ObjectParameter("intDirection", intDirection) :
                new ObjectParameter("intDirection", typeof(bool));
    
            var strSelShelfParameter = strSelShelf != null ?
                new ObjectParameter("strSelShelf", strSelShelf) :
                new ObjectParameter("strSelShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_SHELF_SCHEMA_UPDATE", intLocIDParameter, strShelfParameter, intTopCoorParameter, intLeftCoorParameter, intWidthParameter, intDepthParameter, intDirectionParameter, strSelShelfParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ACQ_STAT_QICKVIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ACQ_STAT_QICKVIEW");
        }
    
        public virtual ObjectResult<SP_ACQ_STAT_QUICKVIEW_Result> SP_ACQ_STAT_QUICKVIEW(Nullable<int> intMode, Nullable<int> intUserID)
        {
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STAT_QUICKVIEW_Result>("SP_ACQ_STAT_QUICKVIEW", intModeParameter, intUserIDParameter);
        }
    
        public virtual int SP_ACQ_STATCLASSCOPYNUMBER(string strTypeSelect, string strIndex, string strWhere, string strBranch)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            var strIndexParameter = strIndex != null ?
                new ObjectParameter("strIndex", strIndex) :
                new ObjectParameter("strIndex", typeof(string));
    
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            var strBranchParameter = strBranch != null ?
                new ObjectParameter("strBranch", strBranch) :
                new ObjectParameter("strBranch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STATCLASSCOPYNUMBER", strTypeSelectParameter, strIndexParameter, strWhereParameter, strBranchParameter);
        }
    
        public virtual int SP_ACQ_STATCLASSITEMID(string strTypeSelect, string strIndex, string strWhere, string strBranch)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            var strIndexParameter = strIndex != null ?
                new ObjectParameter("strIndex", strIndex) :
                new ObjectParameter("strIndex", typeof(string));
    
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            var strBranchParameter = strBranch != null ?
                new ObjectParameter("strBranch", strBranch) :
                new ObjectParameter("strBranch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STATCLASSITEMID", strTypeSelectParameter, strIndexParameter, strWhereParameter, strBranchParameter);
        }
    
        public virtual int SP_ACQ_STATDAY(string strTypeSelect, string strDay, string strMonth, string strYear)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            var strDayParameter = strDay != null ?
                new ObjectParameter("strDay", strDay) :
                new ObjectParameter("strDay", typeof(string));
    
            var strMonthParameter = strMonth != null ?
                new ObjectParameter("strMonth", strMonth) :
                new ObjectParameter("strMonth", typeof(string));
    
            var strYearParameter = strYear != null ?
                new ObjectParameter("strYear", strYear) :
                new ObjectParameter("strYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STATDAY", strTypeSelectParameter, strDayParameter, strMonthParameter, strYearParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATITEMTYPE_Result> SP_ACQ_STATITEMTYPE(string strTypeSelect)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATITEMTYPE_Result>("SP_ACQ_STATITEMTYPE", strTypeSelectParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATLANGUAGE_Result> SP_ACQ_STATLANGUAGE(string strTypeSelect)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATLANGUAGE_Result>("SP_ACQ_STATLANGUAGE", strTypeSelectParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATLOCATION_Result> SP_ACQ_STATLOCATION(string strTypeSelect, Nullable<int> intLocID)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATLOCATION_Result>("SP_ACQ_STATLOCATION", strTypeSelectParameter, intLocIDParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATMEDIUM_Result> SP_ACQ_STATMEDIUM(string strTypeSelect)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATMEDIUM_Result>("SP_ACQ_STATMEDIUM", strTypeSelectParameter);
        }
    
        public virtual int SP_ACQ_STATMONTH(string strTypeSelect, string strYear)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            var strYearParameter = strYear != null ?
                new ObjectParameter("strYear", strYear) :
                new ObjectParameter("strYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STATMONTH", strTypeSelectParameter, strYearParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATNATIONPUB_Result> SP_ACQ_STATNATIONPUB(string strTypeSelect)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATNATIONPUB_Result>("SP_ACQ_STATNATIONPUB", strTypeSelectParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATPUBLISHER_Result> SP_ACQ_STATPUBLISHER(string strTypeSelect)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATPUBLISHER_Result>("SP_ACQ_STATPUBLISHER", strTypeSelectParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATSOURCE_Result> SP_ACQ_STATSOURCE(string strTypeSelect, string strFromDate, string strToDate)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATSOURCE_Result>("SP_ACQ_STATSOURCE", strTypeSelectParameter, strFromDateParameter, strToDateParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATTOP20_Result> SP_ACQ_STATTOP20(string strTypeSelect)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATTOP20_Result>("SP_ACQ_STATTOP20", strTypeSelectParameter);
        }
    
        public virtual ObjectResult<SP_ACQ_STATUS_SEL_Result> SP_ACQ_STATUS_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATUS_SEL_Result>("SP_ACQ_STATUS_SEL");
        }
    
        public virtual ObjectResult<SP_ACQ_STATYEAR_Result> SP_ACQ_STATYEAR(string strTypeSelect)
        {
            var strTypeSelectParameter = strTypeSelect != null ?
                new ObjectParameter("strTypeSelect", strTypeSelect) :
                new ObjectParameter("strTypeSelect", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_STATYEAR_Result>("SP_ACQ_STATYEAR", strTypeSelectParameter);
        }
    
        public virtual int SP_ACQ_STO_SCHEMA_DELETE(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STO_SCHEMA_DELETE", intLocIDParameter);
        }
    
        public virtual int SP_ACQ_STO_SCHEMA_INSERT(Nullable<int> intLocID, string strImgURL, Nullable<int> intImgWidth, Nullable<int> intImgHeight, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<float> dbImgWidthMetter, Nullable<float> dbImgHeightMetter)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strImgURLParameter = strImgURL != null ?
                new ObjectParameter("strImgURL", strImgURL) :
                new ObjectParameter("strImgURL", typeof(string));
    
            var intImgWidthParameter = intImgWidth.HasValue ?
                new ObjectParameter("intImgWidth", intImgWidth) :
                new ObjectParameter("intImgWidth", typeof(int));
    
            var intImgHeightParameter = intImgHeight.HasValue ?
                new ObjectParameter("intImgHeight", intImgHeight) :
                new ObjectParameter("intImgHeight", typeof(int));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var dbImgWidthMetterParameter = dbImgWidthMetter.HasValue ?
                new ObjectParameter("dbImgWidthMetter", dbImgWidthMetter) :
                new ObjectParameter("dbImgWidthMetter", typeof(float));
    
            var dbImgHeightMetterParameter = dbImgHeightMetter.HasValue ?
                new ObjectParameter("dbImgHeightMetter", dbImgHeightMetter) :
                new ObjectParameter("dbImgHeightMetter", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STO_SCHEMA_INSERT", intLocIDParameter, strImgURLParameter, intImgWidthParameter, intImgHeightParameter, intTopCoorParameter, intLeftCoorParameter, dbImgWidthMetterParameter, dbImgHeightMetterParameter);
        }
    
        public virtual int SP_ACQ_STO_SCHEMA_SELECT(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STO_SCHEMA_SELECT", intLocIDParameter);
        }
    
        public virtual int SP_ACQ_STO_SCHEMA_UPDATE(Nullable<int> intLocID, string strImgURL, Nullable<int> intImgWidth, Nullable<int> intImgHeight, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<float> dbImgWidthMetter, Nullable<float> dbImgHeightMetter)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strImgURLParameter = strImgURL != null ?
                new ObjectParameter("strImgURL", strImgURL) :
                new ObjectParameter("strImgURL", typeof(string));
    
            var intImgWidthParameter = intImgWidth.HasValue ?
                new ObjectParameter("intImgWidth", intImgWidth) :
                new ObjectParameter("intImgWidth", typeof(int));
    
            var intImgHeightParameter = intImgHeight.HasValue ?
                new ObjectParameter("intImgHeight", intImgHeight) :
                new ObjectParameter("intImgHeight", typeof(int));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var dbImgWidthMetterParameter = dbImgWidthMetter.HasValue ?
                new ObjectParameter("dbImgWidthMetter", dbImgWidthMetter) :
                new ObjectParameter("dbImgWidthMetter", typeof(float));
    
            var dbImgHeightMetterParameter = dbImgHeightMetter.HasValue ?
                new ObjectParameter("dbImgHeightMetter", dbImgHeightMetter) :
                new ObjectParameter("dbImgHeightMetter", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_STO_SCHEMA_UPDATE", intLocIDParameter, strImgURLParameter, intImgWidthParameter, intImgHeightParameter, intTopCoorParameter, intLeftCoorParameter, dbImgWidthMetterParameter, dbImgHeightMetterParameter);
        }
    
        public virtual int SP_ACQ_TEMPLATE_SEL(string selectFields, string selectTabs)
        {
            var selectFieldsParameter = selectFields != null ?
                new ObjectParameter("SelectFields", selectFields) :
                new ObjectParameter("SelectFields", typeof(string));
    
            var selectTabsParameter = selectTabs != null ?
                new ObjectParameter("SelectTabs", selectTabs) :
                new ObjectParameter("SelectTabs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_TEMPLATE_SEL", selectFieldsParameter, selectTabsParameter);
        }
    
        public virtual int SP_ACQ_UPDATE_CONTRACT(Nullable<int> intID, string strReceiptNo, string strPoName, Nullable<int> intVendorID, Nullable<int> intPoType, Nullable<int> intStatusID, string strStatusNote, string strValidDate, string strFilledDate, Nullable<decimal> dblTotalAmount, Nullable<decimal> dblPrepaidAmount, Nullable<float> dblFixedRate, Nullable<float> dblDiscount, string strCurrency, ObjectParameter intRetVal)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strReceiptNoParameter = strReceiptNo != null ?
                new ObjectParameter("strReceiptNo", strReceiptNo) :
                new ObjectParameter("strReceiptNo", typeof(string));
    
            var strPoNameParameter = strPoName != null ?
                new ObjectParameter("strPoName", strPoName) :
                new ObjectParameter("strPoName", typeof(string));
    
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            var intPoTypeParameter = intPoType.HasValue ?
                new ObjectParameter("intPoType", intPoType) :
                new ObjectParameter("intPoType", typeof(int));
    
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            var strStatusNoteParameter = strStatusNote != null ?
                new ObjectParameter("strStatusNote", strStatusNote) :
                new ObjectParameter("strStatusNote", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strFilledDateParameter = strFilledDate != null ?
                new ObjectParameter("strFilledDate", strFilledDate) :
                new ObjectParameter("strFilledDate", typeof(string));
    
            var dblTotalAmountParameter = dblTotalAmount.HasValue ?
                new ObjectParameter("dblTotalAmount", dblTotalAmount) :
                new ObjectParameter("dblTotalAmount", typeof(decimal));
    
            var dblPrepaidAmountParameter = dblPrepaidAmount.HasValue ?
                new ObjectParameter("dblPrepaidAmount", dblPrepaidAmount) :
                new ObjectParameter("dblPrepaidAmount", typeof(decimal));
    
            var dblFixedRateParameter = dblFixedRate.HasValue ?
                new ObjectParameter("dblFixedRate", dblFixedRate) :
                new ObjectParameter("dblFixedRate", typeof(float));
    
            var dblDiscountParameter = dblDiscount.HasValue ?
                new ObjectParameter("dblDiscount", dblDiscount) :
                new ObjectParameter("dblDiscount", typeof(float));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_UPDATE_CONTRACT", intIDParameter, strReceiptNoParameter, strPoNameParameter, intVendorIDParameter, intPoTypeParameter, intStatusIDParameter, strStatusNoteParameter, strValidDateParameter, strFilledDateParameter, dblTotalAmountParameter, dblPrepaidAmountParameter, dblFixedRateParameter, dblDiscountParameter, strCurrencyParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_UPDATE_DEBIT_AMOUNT(string strIDs, string strRates)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var strRatesParameter = strRates != null ?
                new ObjectParameter("strRates", strRates) :
                new ObjectParameter("strRates", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_UPDATE_DEBIT_AMOUNT", strIDsParameter, strRatesParameter);
        }
    
        public virtual int SP_ACQ_UPDATE_REQUEST(Nullable<int> intRequestID, string chrRegularityCode, Nullable<int> intTypeID, Nullable<float> decUnitPrice, string strCurrency, Nullable<bool> bytAccepted, string strNote, Nullable<bool> bytRenewed, Nullable<decimal> decIssuePrice, string strISBN, string strISSN, string strEdition, Nullable<int> intUrgency, string strSerialCode, string strPubYear, string strValidSubscribedDate, string strExpiredSubscribedDate, Nullable<int> intLanguageID, string strRequester, Nullable<bool> bytAcquired, Nullable<int> intCountryID, string strPublisher, Nullable<int> intIssues, Nullable<int> intAcceptedCopies, Nullable<int> intReceivedCopies, Nullable<int> intRequestedCopies, string strAuthor, Nullable<int> intItemID, string strTitle, Nullable<int> intMediumID, Nullable<int> intItemTypeID, ObjectParameter intRetVal)
        {
            var intRequestIDParameter = intRequestID.HasValue ?
                new ObjectParameter("intRequestID", intRequestID) :
                new ObjectParameter("intRequestID", typeof(int));
    
            var chrRegularityCodeParameter = chrRegularityCode != null ?
                new ObjectParameter("chrRegularityCode", chrRegularityCode) :
                new ObjectParameter("chrRegularityCode", typeof(string));
    
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            var decUnitPriceParameter = decUnitPrice.HasValue ?
                new ObjectParameter("decUnitPrice", decUnitPrice) :
                new ObjectParameter("decUnitPrice", typeof(float));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var bytAcceptedParameter = bytAccepted.HasValue ?
                new ObjectParameter("bytAccepted", bytAccepted) :
                new ObjectParameter("bytAccepted", typeof(bool));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var bytRenewedParameter = bytRenewed.HasValue ?
                new ObjectParameter("bytRenewed", bytRenewed) :
                new ObjectParameter("bytRenewed", typeof(bool));
    
            var decIssuePriceParameter = decIssuePrice.HasValue ?
                new ObjectParameter("decIssuePrice", decIssuePrice) :
                new ObjectParameter("decIssuePrice", typeof(decimal));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var intUrgencyParameter = intUrgency.HasValue ?
                new ObjectParameter("intUrgency", intUrgency) :
                new ObjectParameter("intUrgency", typeof(int));
    
            var strSerialCodeParameter = strSerialCode != null ?
                new ObjectParameter("strSerialCode", strSerialCode) :
                new ObjectParameter("strSerialCode", typeof(string));
    
            var strPubYearParameter = strPubYear != null ?
                new ObjectParameter("strPubYear", strPubYear) :
                new ObjectParameter("strPubYear", typeof(string));
    
            var strValidSubscribedDateParameter = strValidSubscribedDate != null ?
                new ObjectParameter("strValidSubscribedDate", strValidSubscribedDate) :
                new ObjectParameter("strValidSubscribedDate", typeof(string));
    
            var strExpiredSubscribedDateParameter = strExpiredSubscribedDate != null ?
                new ObjectParameter("strExpiredSubscribedDate", strExpiredSubscribedDate) :
                new ObjectParameter("strExpiredSubscribedDate", typeof(string));
    
            var intLanguageIDParameter = intLanguageID.HasValue ?
                new ObjectParameter("intLanguageID", intLanguageID) :
                new ObjectParameter("intLanguageID", typeof(int));
    
            var strRequesterParameter = strRequester != null ?
                new ObjectParameter("strRequester", strRequester) :
                new ObjectParameter("strRequester", typeof(string));
    
            var bytAcquiredParameter = bytAcquired.HasValue ?
                new ObjectParameter("bytAcquired", bytAcquired) :
                new ObjectParameter("bytAcquired", typeof(bool));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var intIssuesParameter = intIssues.HasValue ?
                new ObjectParameter("intIssues", intIssues) :
                new ObjectParameter("intIssues", typeof(int));
    
            var intAcceptedCopiesParameter = intAcceptedCopies.HasValue ?
                new ObjectParameter("intAcceptedCopies", intAcceptedCopies) :
                new ObjectParameter("intAcceptedCopies", typeof(int));
    
            var intReceivedCopiesParameter = intReceivedCopies.HasValue ?
                new ObjectParameter("intReceivedCopies", intReceivedCopies) :
                new ObjectParameter("intReceivedCopies", typeof(int));
    
            var intRequestedCopiesParameter = intRequestedCopies.HasValue ?
                new ObjectParameter("intRequestedCopies", intRequestedCopies) :
                new ObjectParameter("intRequestedCopies", typeof(int));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intMediumIDParameter = intMediumID.HasValue ?
                new ObjectParameter("intMediumID", intMediumID) :
                new ObjectParameter("intMediumID", typeof(int));
    
            var intItemTypeIDParameter = intItemTypeID.HasValue ?
                new ObjectParameter("intItemTypeID", intItemTypeID) :
                new ObjectParameter("intItemTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_UPDATE_REQUEST", intRequestIDParameter, chrRegularityCodeParameter, intTypeIDParameter, decUnitPriceParameter, strCurrencyParameter, bytAcceptedParameter, strNoteParameter, bytRenewedParameter, decIssuePriceParameter, strISBNParameter, strISSNParameter, strEditionParameter, intUrgencyParameter, strSerialCodeParameter, strPubYearParameter, strValidSubscribedDateParameter, strExpiredSubscribedDateParameter, intLanguageIDParameter, strRequesterParameter, bytAcquiredParameter, intCountryIDParameter, strPublisherParameter, intIssuesParameter, intAcceptedCopiesParameter, intReceivedCopiesParameter, intRequestedCopiesParameter, strAuthorParameter, intItemIDParameter, strTitleParameter, intMediumIDParameter, intItemTypeIDParameter, intRetVal);
        }
    
        public virtual int SP_ACQ_VENDOR_DEL(Nullable<int> intVendorID)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_VENDOR_DEL", intVendorIDParameter);
        }
    
        public virtual int SP_ACQ_VENDOR_INS(string strName, string strAddress, Nullable<int> intProvinceID, Nullable<int> intCountryID, string strZip, string strContactPerson, string strTel, string strFax, string strEmail, string strSAN, string strLibSAN, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3, string strClaimEmail, Nullable<int> intDeliveryTime, Nullable<bool> blnX12Enable, string strX12Email, string strLibAC, string strBankingInfo, string strNote, ObjectParameter intRetval)
        {
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var intProvinceIDParameter = intProvinceID.HasValue ?
                new ObjectParameter("intProvinceID", intProvinceID) :
                new ObjectParameter("intProvinceID", typeof(int));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var strContactPersonParameter = strContactPerson != null ?
                new ObjectParameter("strContactPerson", strContactPerson) :
                new ObjectParameter("strContactPerson", typeof(string));
    
            var strTelParameter = strTel != null ?
                new ObjectParameter("strTel", strTel) :
                new ObjectParameter("strTel", typeof(string));
    
            var strFaxParameter = strFax != null ?
                new ObjectParameter("strFax", strFax) :
                new ObjectParameter("strFax", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strSANParameter = strSAN != null ?
                new ObjectParameter("strSAN", strSAN) :
                new ObjectParameter("strSAN", typeof(string));
    
            var strLibSANParameter = strLibSAN != null ?
                new ObjectParameter("strLibSAN", strLibSAN) :
                new ObjectParameter("strLibSAN", typeof(string));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            var strClaimEmailParameter = strClaimEmail != null ?
                new ObjectParameter("strClaimEmail", strClaimEmail) :
                new ObjectParameter("strClaimEmail", typeof(string));
    
            var intDeliveryTimeParameter = intDeliveryTime.HasValue ?
                new ObjectParameter("intDeliveryTime", intDeliveryTime) :
                new ObjectParameter("intDeliveryTime", typeof(int));
    
            var blnX12EnableParameter = blnX12Enable.HasValue ?
                new ObjectParameter("blnX12Enable", blnX12Enable) :
                new ObjectParameter("blnX12Enable", typeof(bool));
    
            var strX12EmailParameter = strX12Email != null ?
                new ObjectParameter("strX12Email", strX12Email) :
                new ObjectParameter("strX12Email", typeof(string));
    
            var strLibACParameter = strLibAC != null ?
                new ObjectParameter("strLibAC", strLibAC) :
                new ObjectParameter("strLibAC", typeof(string));
    
            var strBankingInfoParameter = strBankingInfo != null ?
                new ObjectParameter("strBankingInfo", strBankingInfo) :
                new ObjectParameter("strBankingInfo", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_VENDOR_INS", strNameParameter, strAddressParameter, intProvinceIDParameter, intCountryIDParameter, strZipParameter, strContactPersonParameter, strTelParameter, strFaxParameter, strEmailParameter, strSANParameter, strLibSANParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter, strClaimEmailParameter, intDeliveryTimeParameter, blnX12EnableParameter, strX12EmailParameter, strLibACParameter, strBankingInfoParameter, strNoteParameter, intRetval);
        }
    
        public virtual ObjectResult<SP_ACQ_VENDOR_SEL_Result> SP_ACQ_VENDOR_SEL(Nullable<int> intVendorID)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ACQ_VENDOR_SEL_Result>("SP_ACQ_VENDOR_SEL", intVendorIDParameter);
        }
    
        public virtual int SP_ACQ_VENDOR_UPD(Nullable<int> intVendorID, string strName, string strAddress, Nullable<int> intProvinceID, Nullable<int> intCountryID, string strZip, string strContactPerson, string strTel, string strFax, string strEmail, string strSAN, string strLibSAN, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3, string strClaimEmail, Nullable<int> intDeliveryTime, Nullable<bool> blnX12Enable, string strX12Email, string strLibAC, string strBankingInfo, string strNote)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var intProvinceIDParameter = intProvinceID.HasValue ?
                new ObjectParameter("intProvinceID", intProvinceID) :
                new ObjectParameter("intProvinceID", typeof(int));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var strContactPersonParameter = strContactPerson != null ?
                new ObjectParameter("strContactPerson", strContactPerson) :
                new ObjectParameter("strContactPerson", typeof(string));
    
            var strTelParameter = strTel != null ?
                new ObjectParameter("strTel", strTel) :
                new ObjectParameter("strTel", typeof(string));
    
            var strFaxParameter = strFax != null ?
                new ObjectParameter("strFax", strFax) :
                new ObjectParameter("strFax", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strSANParameter = strSAN != null ?
                new ObjectParameter("strSAN", strSAN) :
                new ObjectParameter("strSAN", typeof(string));
    
            var strLibSANParameter = strLibSAN != null ?
                new ObjectParameter("strLibSAN", strLibSAN) :
                new ObjectParameter("strLibSAN", typeof(string));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            var strClaimEmailParameter = strClaimEmail != null ?
                new ObjectParameter("strClaimEmail", strClaimEmail) :
                new ObjectParameter("strClaimEmail", typeof(string));
    
            var intDeliveryTimeParameter = intDeliveryTime.HasValue ?
                new ObjectParameter("intDeliveryTime", intDeliveryTime) :
                new ObjectParameter("intDeliveryTime", typeof(int));
    
            var blnX12EnableParameter = blnX12Enable.HasValue ?
                new ObjectParameter("blnX12Enable", blnX12Enable) :
                new ObjectParameter("blnX12Enable", typeof(bool));
    
            var strX12EmailParameter = strX12Email != null ?
                new ObjectParameter("strX12Email", strX12Email) :
                new ObjectParameter("strX12Email", typeof(string));
    
            var strLibACParameter = strLibAC != null ?
                new ObjectParameter("strLibAC", strLibAC) :
                new ObjectParameter("strLibAC", typeof(string));
    
            var strBankingInfoParameter = strBankingInfo != null ?
                new ObjectParameter("strBankingInfo", strBankingInfo) :
                new ObjectParameter("strBankingInfo", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQ_VENDOR_UPD", intVendorIDParameter, strNameParameter, strAddressParameter, intProvinceIDParameter, intCountryIDParameter, strZipParameter, strContactPersonParameter, strTelParameter, strFaxParameter, strEmailParameter, strSANParameter, strLibSANParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter, strClaimEmailParameter, intDeliveryTimeParameter, blnX12EnableParameter, strX12EmailParameter, strLibACParameter, strBankingInfoParameter, strNoteParameter);
        }
    
        public virtual int SP_ACQREQUEST_DEL(Nullable<int> intRequestID, ObjectParameter intRetval)
        {
            var intRequestIDParameter = intRequestID.HasValue ?
                new ObjectParameter("intRequestID", intRequestID) :
                new ObjectParameter("intRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQREQUEST_DEL", intRequestIDParameter, intRetval);
        }
    
        public virtual int SP_ACQREQUEST_INS(string chrRegularityCode, Nullable<int> intTypeID, string strCreatedDate, Nullable<decimal> decUnitPrice, string strCurrency, Nullable<bool> bytAccepted, string strNote, Nullable<bool> bytRenewed, Nullable<decimal> decIssuePrice, string strISBN, string strISSN, string strEdition, Nullable<int> intUrgency, string strSerialCode, string strPubYear, string strValidSubscribedDate, string strExpiredSubscribedDate, Nullable<int> intLanguageID, string strRequester, Nullable<bool> bytAcquired, Nullable<int> intCountryID, string strPublisher, Nullable<int> intIssues, Nullable<int> intAcceptedCopies, Nullable<int> intReceivedCopies, Nullable<int> intRequestedCopies, string strAuthor, Nullable<int> intItemID, string strTitle, Nullable<int> intMediumID, ObjectParameter intRetVal)
        {
            var chrRegularityCodeParameter = chrRegularityCode != null ?
                new ObjectParameter("chrRegularityCode", chrRegularityCode) :
                new ObjectParameter("chrRegularityCode", typeof(string));
    
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var decUnitPriceParameter = decUnitPrice.HasValue ?
                new ObjectParameter("decUnitPrice", decUnitPrice) :
                new ObjectParameter("decUnitPrice", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var bytAcceptedParameter = bytAccepted.HasValue ?
                new ObjectParameter("bytAccepted", bytAccepted) :
                new ObjectParameter("bytAccepted", typeof(bool));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var bytRenewedParameter = bytRenewed.HasValue ?
                new ObjectParameter("bytRenewed", bytRenewed) :
                new ObjectParameter("bytRenewed", typeof(bool));
    
            var decIssuePriceParameter = decIssuePrice.HasValue ?
                new ObjectParameter("decIssuePrice", decIssuePrice) :
                new ObjectParameter("decIssuePrice", typeof(decimal));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var intUrgencyParameter = intUrgency.HasValue ?
                new ObjectParameter("intUrgency", intUrgency) :
                new ObjectParameter("intUrgency", typeof(int));
    
            var strSerialCodeParameter = strSerialCode != null ?
                new ObjectParameter("strSerialCode", strSerialCode) :
                new ObjectParameter("strSerialCode", typeof(string));
    
            var strPubYearParameter = strPubYear != null ?
                new ObjectParameter("strPubYear", strPubYear) :
                new ObjectParameter("strPubYear", typeof(string));
    
            var strValidSubscribedDateParameter = strValidSubscribedDate != null ?
                new ObjectParameter("strValidSubscribedDate", strValidSubscribedDate) :
                new ObjectParameter("strValidSubscribedDate", typeof(string));
    
            var strExpiredSubscribedDateParameter = strExpiredSubscribedDate != null ?
                new ObjectParameter("strExpiredSubscribedDate", strExpiredSubscribedDate) :
                new ObjectParameter("strExpiredSubscribedDate", typeof(string));
    
            var intLanguageIDParameter = intLanguageID.HasValue ?
                new ObjectParameter("intLanguageID", intLanguageID) :
                new ObjectParameter("intLanguageID", typeof(int));
    
            var strRequesterParameter = strRequester != null ?
                new ObjectParameter("strRequester", strRequester) :
                new ObjectParameter("strRequester", typeof(string));
    
            var bytAcquiredParameter = bytAcquired.HasValue ?
                new ObjectParameter("bytAcquired", bytAcquired) :
                new ObjectParameter("bytAcquired", typeof(bool));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var intIssuesParameter = intIssues.HasValue ?
                new ObjectParameter("intIssues", intIssues) :
                new ObjectParameter("intIssues", typeof(int));
    
            var intAcceptedCopiesParameter = intAcceptedCopies.HasValue ?
                new ObjectParameter("intAcceptedCopies", intAcceptedCopies) :
                new ObjectParameter("intAcceptedCopies", typeof(int));
    
            var intReceivedCopiesParameter = intReceivedCopies.HasValue ?
                new ObjectParameter("intReceivedCopies", intReceivedCopies) :
                new ObjectParameter("intReceivedCopies", typeof(int));
    
            var intRequestedCopiesParameter = intRequestedCopies.HasValue ?
                new ObjectParameter("intRequestedCopies", intRequestedCopies) :
                new ObjectParameter("intRequestedCopies", typeof(int));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intMediumIDParameter = intMediumID.HasValue ?
                new ObjectParameter("intMediumID", intMediumID) :
                new ObjectParameter("intMediumID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQREQUEST_INS", chrRegularityCodeParameter, intTypeIDParameter, strCreatedDateParameter, decUnitPriceParameter, strCurrencyParameter, bytAcceptedParameter, strNoteParameter, bytRenewedParameter, decIssuePriceParameter, strISBNParameter, strISSNParameter, strEditionParameter, intUrgencyParameter, strSerialCodeParameter, strPubYearParameter, strValidSubscribedDateParameter, strExpiredSubscribedDateParameter, intLanguageIDParameter, strRequesterParameter, bytAcquiredParameter, intCountryIDParameter, strPublisherParameter, intIssuesParameter, intAcceptedCopiesParameter, intReceivedCopiesParameter, intRequestedCopiesParameter, strAuthorParameter, intItemIDParameter, strTitleParameter, intMediumIDParameter, intRetVal);
        }
    
        public virtual int SP_ACQREQUEST_UPD(Nullable<int> intRequestID, string chrRegularityCode, Nullable<int> intTypeID, string strCreatedDate, Nullable<decimal> decUnitPrice, string strCurrency, Nullable<bool> bytAccepted, string strNote, Nullable<bool> bytRenewed, Nullable<decimal> decIssuePrice, string strISBN, string strISSN, string strEdition, Nullable<int> intUrgency, string strSerialCode, string strPubYear, string strValidSubscribedDate, string strExpiredSubscribedDate, Nullable<int> intLanguageID, string strRequester, Nullable<bool> bytAcquired, Nullable<int> intCountryID, string strPublisher, Nullable<int> intIssues, Nullable<int> intAcceptedCopies, Nullable<int> intReceivedCopies, Nullable<int> intRequestedCopies, string strAuthor, Nullable<int> intItemID, string strTitle, Nullable<int> intMediumID, ObjectParameter intRetVal)
        {
            var intRequestIDParameter = intRequestID.HasValue ?
                new ObjectParameter("intRequestID", intRequestID) :
                new ObjectParameter("intRequestID", typeof(int));
    
            var chrRegularityCodeParameter = chrRegularityCode != null ?
                new ObjectParameter("chrRegularityCode", chrRegularityCode) :
                new ObjectParameter("chrRegularityCode", typeof(string));
    
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var decUnitPriceParameter = decUnitPrice.HasValue ?
                new ObjectParameter("decUnitPrice", decUnitPrice) :
                new ObjectParameter("decUnitPrice", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var bytAcceptedParameter = bytAccepted.HasValue ?
                new ObjectParameter("bytAccepted", bytAccepted) :
                new ObjectParameter("bytAccepted", typeof(bool));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var bytRenewedParameter = bytRenewed.HasValue ?
                new ObjectParameter("bytRenewed", bytRenewed) :
                new ObjectParameter("bytRenewed", typeof(bool));
    
            var decIssuePriceParameter = decIssuePrice.HasValue ?
                new ObjectParameter("decIssuePrice", decIssuePrice) :
                new ObjectParameter("decIssuePrice", typeof(decimal));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var intUrgencyParameter = intUrgency.HasValue ?
                new ObjectParameter("intUrgency", intUrgency) :
                new ObjectParameter("intUrgency", typeof(int));
    
            var strSerialCodeParameter = strSerialCode != null ?
                new ObjectParameter("strSerialCode", strSerialCode) :
                new ObjectParameter("strSerialCode", typeof(string));
    
            var strPubYearParameter = strPubYear != null ?
                new ObjectParameter("strPubYear", strPubYear) :
                new ObjectParameter("strPubYear", typeof(string));
    
            var strValidSubscribedDateParameter = strValidSubscribedDate != null ?
                new ObjectParameter("strValidSubscribedDate", strValidSubscribedDate) :
                new ObjectParameter("strValidSubscribedDate", typeof(string));
    
            var strExpiredSubscribedDateParameter = strExpiredSubscribedDate != null ?
                new ObjectParameter("strExpiredSubscribedDate", strExpiredSubscribedDate) :
                new ObjectParameter("strExpiredSubscribedDate", typeof(string));
    
            var intLanguageIDParameter = intLanguageID.HasValue ?
                new ObjectParameter("intLanguageID", intLanguageID) :
                new ObjectParameter("intLanguageID", typeof(int));
    
            var strRequesterParameter = strRequester != null ?
                new ObjectParameter("strRequester", strRequester) :
                new ObjectParameter("strRequester", typeof(string));
    
            var bytAcquiredParameter = bytAcquired.HasValue ?
                new ObjectParameter("bytAcquired", bytAcquired) :
                new ObjectParameter("bytAcquired", typeof(bool));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var intIssuesParameter = intIssues.HasValue ?
                new ObjectParameter("intIssues", intIssues) :
                new ObjectParameter("intIssues", typeof(int));
    
            var intAcceptedCopiesParameter = intAcceptedCopies.HasValue ?
                new ObjectParameter("intAcceptedCopies", intAcceptedCopies) :
                new ObjectParameter("intAcceptedCopies", typeof(int));
    
            var intReceivedCopiesParameter = intReceivedCopies.HasValue ?
                new ObjectParameter("intReceivedCopies", intReceivedCopies) :
                new ObjectParameter("intReceivedCopies", typeof(int));
    
            var intRequestedCopiesParameter = intRequestedCopies.HasValue ?
                new ObjectParameter("intRequestedCopies", intRequestedCopies) :
                new ObjectParameter("intRequestedCopies", typeof(int));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intMediumIDParameter = intMediumID.HasValue ?
                new ObjectParameter("intMediumID", intMediumID) :
                new ObjectParameter("intMediumID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQREQUEST_UPD", intRequestIDParameter, chrRegularityCodeParameter, intTypeIDParameter, strCreatedDateParameter, decUnitPriceParameter, strCurrencyParameter, bytAcceptedParameter, strNoteParameter, bytRenewedParameter, decIssuePriceParameter, strISBNParameter, strISSNParameter, strEditionParameter, intUrgencyParameter, strSerialCodeParameter, strPubYearParameter, strValidSubscribedDateParameter, strExpiredSubscribedDateParameter, intLanguageIDParameter, strRequesterParameter, bytAcquiredParameter, intCountryIDParameter, strPublisherParameter, intIssuesParameter, intAcceptedCopiesParameter, intReceivedCopiesParameter, intRequestedCopiesParameter, strAuthorParameter, intItemIDParameter, strTitleParameter, intMediumIDParameter, intRetVal);
        }
    
        public virtual int SP_ACQUIRE_PERIODICAL(Nullable<int> intPOID, Nullable<int> lngItemID, Nullable<int> intAcqSourceID, Nullable<int> intCategoryID, Nullable<int> intCeased, string strCeasedDate, string strBasedDate, string strNote, string strChangeNote, Nullable<int> intOnSubscription, ObjectParameter intOutValue)
        {
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intAcqSourceIDParameter = intAcqSourceID.HasValue ?
                new ObjectParameter("intAcqSourceID", intAcqSourceID) :
                new ObjectParameter("intAcqSourceID", typeof(int));
    
            var intCategoryIDParameter = intCategoryID.HasValue ?
                new ObjectParameter("intCategoryID", intCategoryID) :
                new ObjectParameter("intCategoryID", typeof(int));
    
            var intCeasedParameter = intCeased.HasValue ?
                new ObjectParameter("intCeased", intCeased) :
                new ObjectParameter("intCeased", typeof(int));
    
            var strCeasedDateParameter = strCeasedDate != null ?
                new ObjectParameter("strCeasedDate", strCeasedDate) :
                new ObjectParameter("strCeasedDate", typeof(string));
    
            var strBasedDateParameter = strBasedDate != null ?
                new ObjectParameter("strBasedDate", strBasedDate) :
                new ObjectParameter("strBasedDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strChangeNoteParameter = strChangeNote != null ?
                new ObjectParameter("strChangeNote", strChangeNote) :
                new ObjectParameter("strChangeNote", typeof(string));
    
            var intOnSubscriptionParameter = intOnSubscription.HasValue ?
                new ObjectParameter("intOnSubscription", intOnSubscription) :
                new ObjectParameter("intOnSubscription", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQUIRE_PERIODICAL", intPOIDParameter, lngItemIDParameter, intAcqSourceIDParameter, intCategoryIDParameter, intCeasedParameter, strCeasedDateParameter, strBasedDateParameter, strNoteParameter, strChangeNoteParameter, intOnSubscriptionParameter, intOutValue);
        }
    
        public virtual int SP_ACQUISITION_STATISTIC(string strSQL)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ACQUISITION_STATISTIC", strSQLParameter);
        }
    
        public virtual int SP_ADD_ISSUE(Nullable<int> lngItemID, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3, Nullable<int> intDeliveryTime, Nullable<int> intSpecialIssue, string strPhysDetail, Nullable<decimal> dblPrice, string strNote, string strIssuedDate, string strIssueNo, string strOvIssueNo, string strVolumeByPublisher, string strSpecialTitle, string strSummary, Nullable<int> intFirstIssueInYear, Nullable<int> intResetRegularity, Nullable<int> intSubscribedCopies, ObjectParameter intOutValue)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            var intDeliveryTimeParameter = intDeliveryTime.HasValue ?
                new ObjectParameter("intDeliveryTime", intDeliveryTime) :
                new ObjectParameter("intDeliveryTime", typeof(int));
    
            var intSpecialIssueParameter = intSpecialIssue.HasValue ?
                new ObjectParameter("intSpecialIssue", intSpecialIssue) :
                new ObjectParameter("intSpecialIssue", typeof(int));
    
            var strPhysDetailParameter = strPhysDetail != null ?
                new ObjectParameter("strPhysDetail", strPhysDetail) :
                new ObjectParameter("strPhysDetail", typeof(string));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strIssuedDateParameter = strIssuedDate != null ?
                new ObjectParameter("strIssuedDate", strIssuedDate) :
                new ObjectParameter("strIssuedDate", typeof(string));
    
            var strIssueNoParameter = strIssueNo != null ?
                new ObjectParameter("strIssueNo", strIssueNo) :
                new ObjectParameter("strIssueNo", typeof(string));
    
            var strOvIssueNoParameter = strOvIssueNo != null ?
                new ObjectParameter("strOvIssueNo", strOvIssueNo) :
                new ObjectParameter("strOvIssueNo", typeof(string));
    
            var strVolumeByPublisherParameter = strVolumeByPublisher != null ?
                new ObjectParameter("strVolumeByPublisher", strVolumeByPublisher) :
                new ObjectParameter("strVolumeByPublisher", typeof(string));
    
            var strSpecialTitleParameter = strSpecialTitle != null ?
                new ObjectParameter("strSpecialTitle", strSpecialTitle) :
                new ObjectParameter("strSpecialTitle", typeof(string));
    
            var strSummaryParameter = strSummary != null ?
                new ObjectParameter("strSummary", strSummary) :
                new ObjectParameter("strSummary", typeof(string));
    
            var intFirstIssueInYearParameter = intFirstIssueInYear.HasValue ?
                new ObjectParameter("intFirstIssueInYear", intFirstIssueInYear) :
                new ObjectParameter("intFirstIssueInYear", typeof(int));
    
            var intResetRegularityParameter = intResetRegularity.HasValue ?
                new ObjectParameter("intResetRegularity", intResetRegularity) :
                new ObjectParameter("intResetRegularity", typeof(int));
    
            var intSubscribedCopiesParameter = intSubscribedCopies.HasValue ?
                new ObjectParameter("intSubscribedCopies", intSubscribedCopies) :
                new ObjectParameter("intSubscribedCopies", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADD_ISSUE", lngItemIDParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter, intDeliveryTimeParameter, intSpecialIssueParameter, strPhysDetailParameter, dblPriceParameter, strNoteParameter, strIssuedDateParameter, strIssueNoParameter, strOvIssueNoParameter, strVolumeByPublisherParameter, strSpecialTitleParameter, strSummaryParameter, intFirstIssueInYearParameter, intResetRegularityParameter, intSubscribedCopiesParameter, intOutValue);
        }
    
        public virtual int SP_ADMIN_ADD_LANGUAGE(string strOptions)
        {
            var strOptionsParameter = strOptions != null ?
                new ObjectParameter("strOptions", strOptions) :
                new ObjectParameter("strOptions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_ADD_LANGUAGE", strOptionsParameter);
        }
    
        public virtual int SP_ADMIN_ADD_USER(Nullable<int> intIsLdap, string strName, string strUserName, string strPassword, Nullable<int> intCatModule, Nullable<int> intPatModule, Nullable<int> intCirModule, Nullable<int> intAcqModule, Nullable<int> intSerModule, Nullable<int> intILLModule, Nullable<int> intDelModule, Nullable<int> intAdmModule, Nullable<int> intParentID, string strLDAPAdsPath, ObjectParameter intNewUID, ObjectParameter intOutVal)
        {
            var intIsLdapParameter = intIsLdap.HasValue ?
                new ObjectParameter("intIsLdap", intIsLdap) :
                new ObjectParameter("intIsLdap", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intCatModuleParameter = intCatModule.HasValue ?
                new ObjectParameter("intCatModule", intCatModule) :
                new ObjectParameter("intCatModule", typeof(int));
    
            var intPatModuleParameter = intPatModule.HasValue ?
                new ObjectParameter("intPatModule", intPatModule) :
                new ObjectParameter("intPatModule", typeof(int));
    
            var intCirModuleParameter = intCirModule.HasValue ?
                new ObjectParameter("intCirModule", intCirModule) :
                new ObjectParameter("intCirModule", typeof(int));
    
            var intAcqModuleParameter = intAcqModule.HasValue ?
                new ObjectParameter("intAcqModule", intAcqModule) :
                new ObjectParameter("intAcqModule", typeof(int));
    
            var intSerModuleParameter = intSerModule.HasValue ?
                new ObjectParameter("intSerModule", intSerModule) :
                new ObjectParameter("intSerModule", typeof(int));
    
            var intILLModuleParameter = intILLModule.HasValue ?
                new ObjectParameter("intILLModule", intILLModule) :
                new ObjectParameter("intILLModule", typeof(int));
    
            var intDelModuleParameter = intDelModule.HasValue ?
                new ObjectParameter("intDelModule", intDelModule) :
                new ObjectParameter("intDelModule", typeof(int));
    
            var intAdmModuleParameter = intAdmModule.HasValue ?
                new ObjectParameter("intAdmModule", intAdmModule) :
                new ObjectParameter("intAdmModule", typeof(int));
    
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            var strLDAPAdsPathParameter = strLDAPAdsPath != null ?
                new ObjectParameter("strLDAPAdsPath", strLDAPAdsPath) :
                new ObjectParameter("strLDAPAdsPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_ADD_USER", intIsLdapParameter, strNameParameter, strUserNameParameter, strPasswordParameter, intCatModuleParameter, intPatModuleParameter, intCirModuleParameter, intAcqModuleParameter, intSerModuleParameter, intILLModuleParameter, intDelModuleParameter, intAdmModuleParameter, intParentIDParameter, strLDAPAdsPathParameter, intNewUID, intOutVal);
        }
    
        public virtual int SP_ADMIN_CHANGE_USER_PASS(Nullable<int> intUID, Nullable<int> intISLDAP, string strName, string strUserName, string strPassword, ObjectParameter intOutVal)
        {
            var intUIDParameter = intUID.HasValue ?
                new ObjectParameter("intUID", intUID) :
                new ObjectParameter("intUID", typeof(int));
    
            var intISLDAPParameter = intISLDAP.HasValue ?
                new ObjectParameter("intISLDAP", intISLDAP) :
                new ObjectParameter("intISLDAP", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_CHANGE_USER_PASS", intUIDParameter, intISLDAPParameter, strNameParameter, strUserNameParameter, strPasswordParameter, intOutVal);
        }
    
        public virtual int SP_ADMIN_CHECK_USER_NAME(string strUserName, ObjectParameter intOutVal)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_CHECK_USER_NAME", strUserNameParameter, intOutVal);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ADMIN_COUNT_USER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ADMIN_COUNT_USER");
        }
    
        public virtual int SP_ADMIN_DELETE_LOGS(string strFromDate, string strToDate)
        {
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_DELETE_LOGS", strFromDateParameter, strToDateParameter);
        }
    
        public virtual int SP_ADMIN_DELETE_USER(string strUIDs)
        {
            var strUIDsParameter = strUIDs != null ?
                new ObjectParameter("strUIDs", strUIDs) :
                new ObjectParameter("strUIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_DELETE_USER", strUIDsParameter);
        }
    
        public virtual ObjectResult<SP_ADMIN_GET_EVENTGROUPS_Result> SP_ADMIN_GET_EVENTGROUPS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_GET_EVENTGROUPS_Result>("SP_ADMIN_GET_EVENTGROUPS");
        }
    
        public virtual ObjectResult<SP_ADMIN_GET_EVENTS_Result> SP_ADMIN_GET_EVENTS(Nullable<int> intEventGroupID)
        {
            var intEventGroupIDParameter = intEventGroupID.HasValue ?
                new ObjectParameter("intEventGroupID", intEventGroupID) :
                new ObjectParameter("intEventGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_GET_EVENTS_Result>("SP_ADMIN_GET_EVENTS", intEventGroupIDParameter);
        }
    
        public virtual int SP_ADMIN_GET_LOCATION_INFOR(Nullable<int> intUserID, ObjectParameter strCirLocs, ObjectParameter strAcqLocs, ObjectParameter strSerLocs)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_GET_LOCATION_INFOR", intUserIDParameter, strCirLocs, strAcqLocs, strSerLocs);
        }
    
        public virtual int SP_ADMIN_GET_NEW_USER_ID(ObjectParameter intNewUID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_GET_NEW_USER_ID", intNewUID);
        }
    
        public virtual ObjectResult<SP_ADMIN_GET_PARAMETERS_Result> SP_ADMIN_GET_PARAMETERS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_GET_PARAMETERS_Result>("SP_ADMIN_GET_PARAMETERS");
        }
    
        public virtual ObjectResult<SP_ADMIN_GET_RIGHTS_Result> SP_ADMIN_GET_RIGHTS(Nullable<int> intModuleID, Nullable<int> intUID, Nullable<int> intParentID)
        {
            var intModuleIDParameter = intModuleID.HasValue ?
                new ObjectParameter("intModuleID", intModuleID) :
                new ObjectParameter("intModuleID", typeof(int));
    
            var intUIDParameter = intUID.HasValue ?
                new ObjectParameter("intUID", intUID) :
                new ObjectParameter("intUID", typeof(int));
    
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_GET_RIGHTS_Result>("SP_ADMIN_GET_RIGHTS", intModuleIDParameter, intUIDParameter, intParentIDParameter);
        }
    
        public virtual ObjectResult<SP_ADMIN_GET_USERS_Result> SP_ADMIN_GET_USERS(Nullable<int> intUID, Nullable<int> intParentID)
        {
            var intUIDParameter = intUID.HasValue ?
                new ObjectParameter("intUID", intUID) :
                new ObjectParameter("intUID", typeof(int));
    
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_GET_USERS_Result>("SP_ADMIN_GET_USERS", intUIDParameter, intParentIDParameter);
        }
    
        public virtual int SP_ADMIN_GRANT_LOCATIONS(Nullable<int> intUID, Nullable<int> intLocationID, Nullable<int> intLocType)
        {
            var intUIDParameter = intUID.HasValue ?
                new ObjectParameter("intUID", intUID) :
                new ObjectParameter("intUID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intLocTypeParameter = intLocType.HasValue ?
                new ObjectParameter("intLocType", intLocType) :
                new ObjectParameter("intLocType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_GRANT_LOCATIONS", intUIDParameter, intLocationIDParameter, intLocTypeParameter);
        }
    
        public virtual int SP_ADMIN_GRANT_RIGHTS(Nullable<int> intUID, Nullable<int> intRightID)
        {
            var intUIDParameter = intUID.HasValue ?
                new ObjectParameter("intUID", intUID) :
                new ObjectParameter("intUID", typeof(int));
    
            var intRightIDParameter = intRightID.HasValue ?
                new ObjectParameter("intRightID", intRightID) :
                new ObjectParameter("intRightID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_GRANT_RIGHTS", intUIDParameter, intRightIDParameter);
        }
    
        public virtual int SP_ADMIN_LOG_SEARCH(string strEventGroupIDs, string strUserNames, string strMessage, string strFromDate, string strToDate)
        {
            var strEventGroupIDsParameter = strEventGroupIDs != null ?
                new ObjectParameter("strEventGroupIDs", strEventGroupIDs) :
                new ObjectParameter("strEventGroupIDs", typeof(string));
    
            var strUserNamesParameter = strUserNames != null ?
                new ObjectParameter("strUserNames", strUserNames) :
                new ObjectParameter("strUserNames", typeof(string));
    
            var strMessageParameter = strMessage != null ?
                new ObjectParameter("strMessage", strMessage) :
                new ObjectParameter("strMessage", typeof(string));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_LOG_SEARCH", strEventGroupIDsParameter, strUserNamesParameter, strMessageParameter, strFromDateParameter, strToDateParameter);
        }
    
        public virtual int SP_ADMIN_SET_LOGMODE(Nullable<int> intParentID, string strEventIDs)
        {
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            var strEventIDsParameter = strEventIDs != null ?
                new ObjectParameter("strEventIDs", strEventIDs) :
                new ObjectParameter("strEventIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_SET_LOGMODE", intParentIDParameter, strEventIDsParameter);
        }
    
        public virtual int SP_ADMIN_STA_QUICKVIEW(Nullable<int> intDay, Nullable<int> intMonth, Nullable<int> intYear)
        {
            var intDayParameter = intDay.HasValue ?
                new ObjectParameter("intDay", intDay) :
                new ObjectParameter("intDay", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_STA_QUICKVIEW", intDayParameter, intMonthParameter, intYearParameter);
        }
    
        public virtual ObjectResult<SP_ADMIN_STATDAY_EVENT_Result> SP_ADMIN_STATDAY_EVENT(Nullable<int> intParentID, Nullable<int> intDay, Nullable<int> intMonth, Nullable<int> intYear)
        {
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            var intDayParameter = intDay.HasValue ?
                new ObjectParameter("intDay", intDay) :
                new ObjectParameter("intDay", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_STATDAY_EVENT_Result>("SP_ADMIN_STATDAY_EVENT", intParentIDParameter, intDayParameter, intMonthParameter, intYearParameter);
        }
    
        public virtual ObjectResult<SP_ADMIN_STATDAY_MODULE_Result> SP_ADMIN_STATDAY_MODULE(Nullable<int> intDay, Nullable<int> intMonth, Nullable<int> intYear)
        {
            var intDayParameter = intDay.HasValue ?
                new ObjectParameter("intDay", intDay) :
                new ObjectParameter("intDay", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_STATDAY_MODULE_Result>("SP_ADMIN_STATDAY_MODULE", intDayParameter, intMonthParameter, intYearParameter);
        }
    
        public virtual ObjectResult<SP_ADMIN_STATIC_WEEKLY_Result> SP_ADMIN_STATIC_WEEKLY(string strTo_Date, string strFrom_Date)
        {
            var strTo_DateParameter = strTo_Date != null ?
                new ObjectParameter("strTo_Date", strTo_Date) :
                new ObjectParameter("strTo_Date", typeof(string));
    
            var strFrom_DateParameter = strFrom_Date != null ?
                new ObjectParameter("strFrom_Date", strFrom_Date) :
                new ObjectParameter("strFrom_Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_STATIC_WEEKLY_Result>("SP_ADMIN_STATIC_WEEKLY", strTo_DateParameter, strFrom_DateParameter);
        }
    
        public virtual ObjectResult<SP_ADMIN_STATMONTH_Result> SP_ADMIN_STATMONTH(Nullable<int> intMonth, Nullable<int> intYear)
        {
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ADMIN_STATMONTH_Result>("SP_ADMIN_STATMONTH", intMonthParameter, intYearParameter);
        }
    
        public virtual int SP_ADMIN_UPDATE_SYSPARAM(string strAlterParams, string strAlterValues, ObjectParameter intOutVal)
        {
            var strAlterParamsParameter = strAlterParams != null ?
                new ObjectParameter("strAlterParams", strAlterParams) :
                new ObjectParameter("strAlterParams", typeof(string));
    
            var strAlterValuesParameter = strAlterValues != null ?
                new ObjectParameter("strAlterValues", strAlterValues) :
                new ObjectParameter("strAlterValues", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_UPDATE_SYSPARAM", strAlterParamsParameter, strAlterValuesParameter, intOutVal);
        }
    
        public virtual int SP_ADMIN_UPDATE_USER(Nullable<int> intUID, Nullable<int> intISLDAP, string strName, string strUserName, string strPassword, Nullable<int> intCatModule, Nullable<int> intPatModule, Nullable<int> intCirModule, Nullable<int> intAcqModule, Nullable<int> intSerModule, Nullable<int> intILLModule, Nullable<int> intDelModule, Nullable<int> intAdmModule, Nullable<int> intParentID, ObjectParameter intOutVal)
        {
            var intUIDParameter = intUID.HasValue ?
                new ObjectParameter("intUID", intUID) :
                new ObjectParameter("intUID", typeof(int));
    
            var intISLDAPParameter = intISLDAP.HasValue ?
                new ObjectParameter("intISLDAP", intISLDAP) :
                new ObjectParameter("intISLDAP", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intCatModuleParameter = intCatModule.HasValue ?
                new ObjectParameter("intCatModule", intCatModule) :
                new ObjectParameter("intCatModule", typeof(int));
    
            var intPatModuleParameter = intPatModule.HasValue ?
                new ObjectParameter("intPatModule", intPatModule) :
                new ObjectParameter("intPatModule", typeof(int));
    
            var intCirModuleParameter = intCirModule.HasValue ?
                new ObjectParameter("intCirModule", intCirModule) :
                new ObjectParameter("intCirModule", typeof(int));
    
            var intAcqModuleParameter = intAcqModule.HasValue ?
                new ObjectParameter("intAcqModule", intAcqModule) :
                new ObjectParameter("intAcqModule", typeof(int));
    
            var intSerModuleParameter = intSerModule.HasValue ?
                new ObjectParameter("intSerModule", intSerModule) :
                new ObjectParameter("intSerModule", typeof(int));
    
            var intILLModuleParameter = intILLModule.HasValue ?
                new ObjectParameter("intILLModule", intILLModule) :
                new ObjectParameter("intILLModule", typeof(int));
    
            var intDelModuleParameter = intDelModule.HasValue ?
                new ObjectParameter("intDelModule", intDelModule) :
                new ObjectParameter("intDelModule", typeof(int));
    
            var intAdmModuleParameter = intAdmModule.HasValue ?
                new ObjectParameter("intAdmModule", intAdmModule) :
                new ObjectParameter("intAdmModule", typeof(int));
    
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ADMIN_UPDATE_USER", intUIDParameter, intISLDAPParameter, strNameParameter, strUserNameParameter, strPasswordParameter, intCatModuleParameter, intPatModuleParameter, intCirModuleParameter, intAcqModuleParameter, intSerModuleParameter, intILLModuleParameter, intDelModuleParameter, intAdmModuleParameter, intParentIDParameter, intOutVal);
        }
    
        public virtual ObjectResult<SP_ALL_Result> SP_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ALL_Result>("SP_ALL");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_AUTO_REGISTER_ISSUE(Nullable<int> lngItemID, Nullable<int> intStartIssueNo, Nullable<int> intStartOvIssueNo, string strStartDate, string strEndDate, Nullable<decimal> dblPrice, string strVolumeByPublisher, Nullable<int> intSubscribedCopies, ObjectParameter intOutValue)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intStartIssueNoParameter = intStartIssueNo.HasValue ?
                new ObjectParameter("intStartIssueNo", intStartIssueNo) :
                new ObjectParameter("intStartIssueNo", typeof(int));
    
            var intStartOvIssueNoParameter = intStartOvIssueNo.HasValue ?
                new ObjectParameter("intStartOvIssueNo", intStartOvIssueNo) :
                new ObjectParameter("intStartOvIssueNo", typeof(int));
    
            var strStartDateParameter = strStartDate != null ?
                new ObjectParameter("strStartDate", strStartDate) :
                new ObjectParameter("strStartDate", typeof(string));
    
            var strEndDateParameter = strEndDate != null ?
                new ObjectParameter("strEndDate", strEndDate) :
                new ObjectParameter("strEndDate", typeof(string));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strVolumeByPublisherParameter = strVolumeByPublisher != null ?
                new ObjectParameter("strVolumeByPublisher", strVolumeByPublisher) :
                new ObjectParameter("strVolumeByPublisher", typeof(string));
    
            var intSubscribedCopiesParameter = intSubscribedCopies.HasValue ?
                new ObjectParameter("intSubscribedCopies", intSubscribedCopies) :
                new ObjectParameter("intSubscribedCopies", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AUTO_REGISTER_ISSUE", lngItemIDParameter, intStartIssueNoParameter, intStartOvIssueNoParameter, strStartDateParameter, strEndDateParameter, dblPriceParameter, strVolumeByPublisherParameter, intSubscribedCopiesParameter, intOutValue);
        }
    
        public virtual int SP_CAT_AUTHORITY_SEL(string strAuthorityIDs, Nullable<int> lngReferenceID, string strAccessEntry)
        {
            var strAuthorityIDsParameter = strAuthorityIDs != null ?
                new ObjectParameter("strAuthorityIDs", strAuthorityIDs) :
                new ObjectParameter("strAuthorityIDs", typeof(string));
    
            var lngReferenceIDParameter = lngReferenceID.HasValue ?
                new ObjectParameter("lngReferenceID", lngReferenceID) :
                new ObjectParameter("lngReferenceID", typeof(int));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_AUTHORITY_SEL", strAuthorityIDsParameter, lngReferenceIDParameter, strAccessEntryParameter);
        }
    
        public virtual int SP_CAT_AUTHORITYS_SEL(string strIDs, string strAccessEntry)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_AUTHORITYS_SEL", strIDsParameter, strAccessEntryParameter);
        }
    
        public virtual int SP_CAT_BIBLIOGRAPHIC_DEL(Nullable<int> intBibliographicID)
        {
            var intBibliographicIDParameter = intBibliographicID.HasValue ?
                new ObjectParameter("intBibliographicID", intBibliographicID) :
                new ObjectParameter("intBibliographicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_BIBLIOGRAPHIC_DEL", intBibliographicIDParameter);
        }
    
        public virtual int SP_CAT_BIBLIOGRAPHIC_INS(Nullable<int> intUserID, Nullable<int> lngTORs, string strTitle, string strGroupedBy, string strCreatedDate)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var lngTORsParameter = lngTORs.HasValue ?
                new ObjectParameter("lngTORs", lngTORs) :
                new ObjectParameter("lngTORs", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strGroupedByParameter = strGroupedBy != null ?
                new ObjectParameter("strGroupedBy", strGroupedBy) :
                new ObjectParameter("strGroupedBy", typeof(string));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_BIBLIOGRAPHIC_INS", intUserIDParameter, lngTORsParameter, strTitleParameter, strGroupedByParameter, strCreatedDateParameter);
        }
    
        public virtual int SP_CAT_BIBLIOGRAPHIC_SEL(Nullable<int> intUserID, Nullable<int> intBibliographicID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intBibliographicIDParameter = intBibliographicID.HasValue ?
                new ObjectParameter("intBibliographicID", intBibliographicID) :
                new ObjectParameter("intBibliographicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_BIBLIOGRAPHIC_SEL", intUserIDParameter, intBibliographicIDParameter);
        }
    
        public virtual int SP_CAT_BIBLIOGRAPHIC_UPD(Nullable<int> intType, Nullable<int> intBibliographicID, Nullable<int> lngTORs, string strLastModifiedDate)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intBibliographicIDParameter = intBibliographicID.HasValue ?
                new ObjectParameter("intBibliographicID", intBibliographicID) :
                new ObjectParameter("intBibliographicID", typeof(int));
    
            var lngTORsParameter = lngTORs.HasValue ?
                new ObjectParameter("lngTORs", lngTORs) :
                new ObjectParameter("lngTORs", typeof(int));
    
            var strLastModifiedDateParameter = strLastModifiedDate != null ?
                new ObjectParameter("strLastModifiedDate", strLastModifiedDate) :
                new ObjectParameter("strLastModifiedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_BIBLIOGRAPHIC_UPD", intTypeParameter, intBibliographicIDParameter, lngTORsParameter, strLastModifiedDateParameter);
        }
    
        public virtual int SP_CAT_BIBLIOGRAPHYPART_INS(string strItemIDs, Nullable<int> lngNORs, Nullable<int> intPart_Index, Nullable<int> lngPosition, string strQString, string strSQL, string strGroupName, Nullable<int> intGroupID, ObjectParameter intBibliographyPartID)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var lngNORsParameter = lngNORs.HasValue ?
                new ObjectParameter("lngNORs", lngNORs) :
                new ObjectParameter("lngNORs", typeof(int));
    
            var intPart_IndexParameter = intPart_Index.HasValue ?
                new ObjectParameter("intPart_Index", intPart_Index) :
                new ObjectParameter("intPart_Index", typeof(int));
    
            var lngPositionParameter = lngPosition.HasValue ?
                new ObjectParameter("lngPosition", lngPosition) :
                new ObjectParameter("lngPosition", typeof(int));
    
            var strQStringParameter = strQString != null ?
                new ObjectParameter("strQString", strQString) :
                new ObjectParameter("strQString", typeof(string));
    
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            var strGroupNameParameter = strGroupName != null ?
                new ObjectParameter("strGroupName", strGroupName) :
                new ObjectParameter("strGroupName", typeof(string));
    
            var intGroupIDParameter = intGroupID.HasValue ?
                new ObjectParameter("intGroupID", intGroupID) :
                new ObjectParameter("intGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_BIBLIOGRAPHYPART_INS", strItemIDsParameter, lngNORsParameter, intPart_IndexParameter, lngPositionParameter, strQStringParameter, strSQLParameter, strGroupNameParameter, intGroupIDParameter, intBibliographyPartID);
        }
    
        public virtual int SP_CAT_DIC_COUNTRY_DEL(Nullable<int> intCountryID, ObjectParameter intRetVal)
        {
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_COUNTRY_DEL", intCountryIDParameter, intRetVal);
        }
    
        public virtual int SP_CAT_DIC_COUNTRY_IMPORT(string strCountry, ObjectParameter intCountryID)
        {
            var strCountryParameter = strCountry != null ?
                new ObjectParameter("strCountry", strCountry) :
                new ObjectParameter("strCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_COUNTRY_IMPORT", strCountryParameter, intCountryID);
        }
    
        public virtual ObjectResult<SP_CAT_DIC_COUNTRY_SELECT_Result> SP_CAT_DIC_COUNTRY_SELECT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_DIC_COUNTRY_SELECT_Result>("SP_CAT_DIC_COUNTRY_SELECT");
        }
    
        public virtual ObjectResult<SP_CAT_DIC_DIRLEVEL_SEL_Result> SP_CAT_DIC_DIRLEVEL_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_DIC_DIRLEVEL_SEL_Result>("SP_CAT_DIC_DIRLEVEL_SEL");
        }
    
        public virtual ObjectResult<SP_CAT_DIC_ITEM_TYPE_INDEX_SEL_Result> SP_CAT_DIC_ITEM_TYPE_INDEX_SEL(string strAccessEntry)
        {
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_DIC_ITEM_TYPE_INDEX_SEL_Result>("SP_CAT_DIC_ITEM_TYPE_INDEX_SEL", strAccessEntryParameter);
        }
    
        public virtual int SP_CAT_DIC_ITEM_TYPE_INS(string strTypeCode, string strTypeName, string strAccessEntry, ObjectParameter intRetval)
        {
            var strTypeCodeParameter = strTypeCode != null ?
                new ObjectParameter("strTypeCode", strTypeCode) :
                new ObjectParameter("strTypeCode", typeof(string));
    
            var strTypeNameParameter = strTypeName != null ?
                new ObjectParameter("strTypeName", strTypeName) :
                new ObjectParameter("strTypeName", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_ITEM_TYPE_INS", strTypeCodeParameter, strTypeNameParameter, strAccessEntryParameter, intRetval);
        }
    
        public virtual int SP_CAT_DIC_ITEM_TYPE_MER(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_ITEM_TYPE_MER", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_CAT_DIC_ITEM_TYPE_SEL(string strTypeID)
        {
            var strTypeIDParameter = strTypeID != null ?
                new ObjectParameter("strTypeID", strTypeID) :
                new ObjectParameter("strTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_ITEM_TYPE_SEL", strTypeIDParameter);
        }
    
        public virtual int SP_CAT_DIC_ITEM_TYPE_UPD(string strTypeCode, string strTypeName, string strAccessEntry, Nullable<int> intID, ObjectParameter intRetval)
        {
            var strTypeCodeParameter = strTypeCode != null ?
                new ObjectParameter("strTypeCode", strTypeCode) :
                new ObjectParameter("strTypeCode", typeof(string));
    
            var strTypeNameParameter = strTypeName != null ?
                new ObjectParameter("strTypeName", strTypeName) :
                new ObjectParameter("strTypeName", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_ITEM_TYPE_UPD", strTypeCodeParameter, strTypeNameParameter, strAccessEntryParameter, intIDParameter, intRetval);
        }
    
        public virtual int SP_CAT_DIC_LANGUAGE_DEL(Nullable<int> intLanguageID, ObjectParameter intRetVal)
        {
            var intLanguageIDParameter = intLanguageID.HasValue ?
                new ObjectParameter("intLanguageID", intLanguageID) :
                new ObjectParameter("intLanguageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_LANGUAGE_DEL", intLanguageIDParameter, intRetVal);
        }
    
        public virtual int SP_CAT_DIC_LIST_SEL(string strIDs, Nullable<int> intIsClassification, Nullable<int> intIsAuthority, Nullable<int> intSytemDic, Nullable<int> intIsDic)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intIsClassificationParameter = intIsClassification.HasValue ?
                new ObjectParameter("intIsClassification", intIsClassification) :
                new ObjectParameter("intIsClassification", typeof(int));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var intSytemDicParameter = intSytemDic.HasValue ?
                new ObjectParameter("intSytemDic", intSytemDic) :
                new ObjectParameter("intSytemDic", typeof(int));
    
            var intIsDicParameter = intIsDic.HasValue ?
                new ObjectParameter("intIsDic", intIsDic) :
                new ObjectParameter("intIsDic", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_LIST_SEL", strIDsParameter, intIsClassificationParameter, intIsAuthorityParameter, intSytemDicParameter, intIsDicParameter);
        }
    
        public virtual ObjectResult<SP_CAT_DIC_MEDIUM_INDEX_SEL_Result> SP_CAT_DIC_MEDIUM_INDEX_SEL(string strAccessEntry)
        {
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_DIC_MEDIUM_INDEX_SEL_Result>("SP_CAT_DIC_MEDIUM_INDEX_SEL", strAccessEntryParameter);
        }
    
        public virtual int SP_CAT_DIC_MEDIUM_INS(string strCode, string strAccessEntry, string strDescription)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_MEDIUM_INS", strCodeParameter, strAccessEntryParameter, strDescriptionParameter);
        }
    
        public virtual int SP_CAT_DIC_MEDIUM_MER(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_MEDIUM_MER", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_CAT_DIC_MEDIUM_SEL(string strMediumID)
        {
            var strMediumIDParameter = strMediumID != null ?
                new ObjectParameter("strMediumID", strMediumID) :
                new ObjectParameter("strMediumID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_MEDIUM_SEL", strMediumIDParameter);
        }
    
        public virtual int SP_CAT_DIC_MEDIUM_UPD(string strCode, string strAccessEntry, string strDescription, Nullable<int> intID)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_DIC_MEDIUM_UPD", strCodeParameter, strAccessEntryParameter, strDescriptionParameter, intIDParameter);
        }
    
        public virtual ObjectResult<SP_CAT_DIC_PUBLISHER_SEL_Result> SP_CAT_DIC_PUBLISHER_SEL(string strPublisher)
        {
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_DIC_PUBLISHER_SEL_Result>("SP_CAT_DIC_PUBLISHER_SEL", strPublisherParameter);
        }
    
        public virtual ObjectResult<SP_CAT_DIC_RECORDTYPE_SEL_Result> SP_CAT_DIC_RECORDTYPE_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_DIC_RECORDTYPE_SEL_Result>("SP_CAT_DIC_RECORDTYPE_SEL");
        }
    
        public virtual int SP_CAT_EDATA_PARAMETER_DEL(string strFieldCode)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_EDATA_PARAMETER_DEL", strFieldCodeParameter);
        }
    
        public virtual int SP_CAT_EDATA_PARAMETER_INS(string strPhysicalPath, string strFieldCode, Nullable<int> lngMaxSize, string strAllowedFileExt, string strDeniedFileExt, string strLogo, string strPrefix, string strURL, ObjectParameter strSQL)
        {
            var strPhysicalPathParameter = strPhysicalPath != null ?
                new ObjectParameter("strPhysicalPath", strPhysicalPath) :
                new ObjectParameter("strPhysicalPath", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var lngMaxSizeParameter = lngMaxSize.HasValue ?
                new ObjectParameter("lngMaxSize", lngMaxSize) :
                new ObjectParameter("lngMaxSize", typeof(int));
    
            var strAllowedFileExtParameter = strAllowedFileExt != null ?
                new ObjectParameter("strAllowedFileExt", strAllowedFileExt) :
                new ObjectParameter("strAllowedFileExt", typeof(string));
    
            var strDeniedFileExtParameter = strDeniedFileExt != null ?
                new ObjectParameter("strDeniedFileExt", strDeniedFileExt) :
                new ObjectParameter("strDeniedFileExt", typeof(string));
    
            var strLogoParameter = strLogo != null ?
                new ObjectParameter("strLogo", strLogo) :
                new ObjectParameter("strLogo", typeof(string));
    
            var strPrefixParameter = strPrefix != null ?
                new ObjectParameter("strPrefix", strPrefix) :
                new ObjectParameter("strPrefix", typeof(string));
    
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_EDATA_PARAMETER_INS", strPhysicalPathParameter, strFieldCodeParameter, lngMaxSizeParameter, strAllowedFileExtParameter, strDeniedFileExtParameter, strLogoParameter, strPrefixParameter, strURLParameter, strSQL);
        }
    
        public virtual ObjectResult<SP_CAT_EDATA_PARAMETER_SEL_Result> SP_CAT_EDATA_PARAMETER_SEL(string strFieldCode)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_EDATA_PARAMETER_SEL_Result>("SP_CAT_EDATA_PARAMETER_SEL", strFieldCodeParameter);
        }
    
        public virtual int SP_CAT_EDATA_PARAMETER_UPD(string strFieldCode, string strPhysicalPath, Nullable<int> lngMaxSize, string strAllowedFileExt, string strDeniedFileExt, string strLogo, string strPrefix, string strURL)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var strPhysicalPathParameter = strPhysicalPath != null ?
                new ObjectParameter("strPhysicalPath", strPhysicalPath) :
                new ObjectParameter("strPhysicalPath", typeof(string));
    
            var lngMaxSizeParameter = lngMaxSize.HasValue ?
                new ObjectParameter("lngMaxSize", lngMaxSize) :
                new ObjectParameter("lngMaxSize", typeof(int));
    
            var strAllowedFileExtParameter = strAllowedFileExt != null ?
                new ObjectParameter("strAllowedFileExt", strAllowedFileExt) :
                new ObjectParameter("strAllowedFileExt", typeof(string));
    
            var strDeniedFileExtParameter = strDeniedFileExt != null ?
                new ObjectParameter("strDeniedFileExt", strDeniedFileExt) :
                new ObjectParameter("strDeniedFileExt", typeof(string));
    
            var strLogoParameter = strLogo != null ?
                new ObjectParameter("strLogo", strLogo) :
                new ObjectParameter("strLogo", typeof(string));
    
            var strPrefixParameter = strPrefix != null ?
                new ObjectParameter("strPrefix", strPrefix) :
                new ObjectParameter("strPrefix", typeof(string));
    
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_EDATA_PARAMETER_UPD", strFieldCodeParameter, strPhysicalPathParameter, lngMaxSizeParameter, strAllowedFileExtParameter, strDeniedFileExtParameter, strLogoParameter, strPrefixParameter, strURLParameter);
        }
    
        public virtual ObjectResult<SP_CAT_HOLDING_LIBRARY_Result> SP_CAT_HOLDING_LIBRARY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CAT_HOLDING_LIBRARY_Result>("SP_CAT_HOLDING_LIBRARY");
        }
    
        public virtual int SP_CAT_QUEUE_SEL_INDATE_SORT(string inputDate, Nullable<int> intModeSort, Nullable<int> intReviewed)
        {
            var inputDateParameter = inputDate != null ?
                new ObjectParameter("InputDate", inputDate) :
                new ObjectParameter("InputDate", typeof(string));
    
            var intModeSortParameter = intModeSort.HasValue ?
                new ObjectParameter("intModeSort", intModeSort) :
                new ObjectParameter("intModeSort", typeof(int));
    
            var intReviewedParameter = intReviewed.HasValue ?
                new ObjectParameter("intReviewed", intReviewed) :
                new ObjectParameter("intReviewed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_QUEUE_SEL_INDATE_SORT", inputDateParameter, intModeSortParameter, intReviewedParameter);
        }
    
        public virtual int SP_CAT_QUEUE_SEL_INPUTDATE(string inputDate, Nullable<int> intModeSort, Nullable<int> intReviewed)
        {
            var inputDateParameter = inputDate != null ?
                new ObjectParameter("InputDate", inputDate) :
                new ObjectParameter("InputDate", typeof(string));
    
            var intModeSortParameter = intModeSort.HasValue ?
                new ObjectParameter("intModeSort", intModeSort) :
                new ObjectParameter("intModeSort", typeof(int));
    
            var intReviewedParameter = intReviewed.HasValue ?
                new ObjectParameter("intReviewed", intReviewed) :
                new ObjectParameter("intReviewed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAT_QUEUE_SEL_INPUTDATE", inputDateParameter, intModeSortParameter, intReviewedParameter);
        }
    
        public virtual int SP_CATA_BOOKCODE_RES_CREATE(string strCode, string strSessionID)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strSessionIDParameter = strSessionID != null ?
                new ObjectParameter("strSessionID", strSessionID) :
                new ObjectParameter("strSessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_BOOKCODE_RES_CREATE", strCodeParameter, strSessionIDParameter);
        }
    
        public virtual int SP_CATA_BOOKCODE_RES_DEL(string strCode)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_BOOKCODE_RES_DEL", strCodeParameter);
        }
    
        public virtual int SP_CATA_BOOKCODE_RES_GET(Nullable<int> intIsUnion, string strCode, string strSessionID)
        {
            var intIsUnionParameter = intIsUnion.HasValue ?
                new ObjectParameter("intIsUnion", intIsUnion) :
                new ObjectParameter("intIsUnion", typeof(int));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strSessionIDParameter = strSessionID != null ?
                new ObjectParameter("strSessionID", strSessionID) :
                new ObjectParameter("strSessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_BOOKCODE_RES_GET", intIsUnionParameter, strCodeParameter, strSessionIDParameter);
        }
    
        public virtual int SP_CATA_CHECK_EXIST_ITEMNUMBER(string strFieldValue, string strFieldCode, ObjectParameter lngItemID)
        {
            var strFieldValueParameter = strFieldValue != null ?
                new ObjectParameter("strFieldValue", strFieldValue) :
                new ObjectParameter("strFieldValue", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_CHECK_EXIST_ITEMNUMBER", strFieldValueParameter, strFieldCodeParameter, lngItemID);
        }
    
        public virtual int SP_CATA_CHECK_EXIST_TITLE(string strTitle, string strItemType)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strItemTypeParameter = strItemType != null ?
                new ObjectParameter("strItemType", strItemType) :
                new ObjectParameter("strItemType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_CHECK_EXIST_TITLE", strTitleParameter, strItemTypeParameter);
        }
    
        public virtual int SP_CATA_CREATE_DICTIONARY(string strName, Nullable<int> intFieldSize, Nullable<int> intForPatron, Nullable<int> intForStaff, ObjectParameter intRET)
        {
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var intFieldSizeParameter = intFieldSize.HasValue ?
                new ObjectParameter("intFieldSize", intFieldSize) :
                new ObjectParameter("intFieldSize", typeof(int));
    
            var intForPatronParameter = intForPatron.HasValue ?
                new ObjectParameter("intForPatron", intForPatron) :
                new ObjectParameter("intForPatron", typeof(int));
    
            var intForStaffParameter = intForStaff.HasValue ?
                new ObjectParameter("intForStaff", intForStaff) :
                new ObjectParameter("intForStaff", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_CREATE_DICTIONARY", strNameParameter, intFieldSizeParameter, intForPatronParameter, intForStaffParameter, intRET);
        }
    
        public virtual int SP_CATA_CREATE_ENTRY(ObjectParameter intIDOutPut, string strTableName, string strDictionary, string strAccessEntry)
        {
            var strTableNameParameter = strTableName != null ?
                new ObjectParameter("strTableName", strTableName) :
                new ObjectParameter("strTableName", typeof(string));
    
            var strDictionaryParameter = strDictionary != null ?
                new ObjectParameter("strDictionary", strDictionary) :
                new ObjectParameter("strDictionary", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_CREATE_ENTRY", intIDOutPut, strTableNameParameter, strDictionaryParameter, strAccessEntryParameter);
        }
    
        public virtual int SP_CATA_CREATE_MARC_BIB_FIELD(string strFieldCode, string strFieldName, string strVietFieldName, string strIndicators, string strVietIndicators, Nullable<int> intRepeatable, Nullable<int> intMandatory, Nullable<int> intLength, string strDescription, Nullable<int> intLinkTypeID, Nullable<int> intFunctionID, Nullable<int> intFieldTypeID, Nullable<int> intDicID, Nullable<int> intBlockID, ObjectParameter intFieldID)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var strFieldNameParameter = strFieldName != null ?
                new ObjectParameter("strFieldName", strFieldName) :
                new ObjectParameter("strFieldName", typeof(string));
    
            var strVietFieldNameParameter = strVietFieldName != null ?
                new ObjectParameter("strVietFieldName", strVietFieldName) :
                new ObjectParameter("strVietFieldName", typeof(string));
    
            var strIndicatorsParameter = strIndicators != null ?
                new ObjectParameter("strIndicators", strIndicators) :
                new ObjectParameter("strIndicators", typeof(string));
    
            var strVietIndicatorsParameter = strVietIndicators != null ?
                new ObjectParameter("strVietIndicators", strVietIndicators) :
                new ObjectParameter("strVietIndicators", typeof(string));
    
            var intRepeatableParameter = intRepeatable.HasValue ?
                new ObjectParameter("intRepeatable", intRepeatable) :
                new ObjectParameter("intRepeatable", typeof(int));
    
            var intMandatoryParameter = intMandatory.HasValue ?
                new ObjectParameter("intMandatory", intMandatory) :
                new ObjectParameter("intMandatory", typeof(int));
    
            var intLengthParameter = intLength.HasValue ?
                new ObjectParameter("intLength", intLength) :
                new ObjectParameter("intLength", typeof(int));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            var intLinkTypeIDParameter = intLinkTypeID.HasValue ?
                new ObjectParameter("intLinkTypeID", intLinkTypeID) :
                new ObjectParameter("intLinkTypeID", typeof(int));
    
            var intFunctionIDParameter = intFunctionID.HasValue ?
                new ObjectParameter("intFunctionID", intFunctionID) :
                new ObjectParameter("intFunctionID", typeof(int));
    
            var intFieldTypeIDParameter = intFieldTypeID.HasValue ?
                new ObjectParameter("intFieldTypeID", intFieldTypeID) :
                new ObjectParameter("intFieldTypeID", typeof(int));
    
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var intBlockIDParameter = intBlockID.HasValue ?
                new ObjectParameter("intBlockID", intBlockID) :
                new ObjectParameter("intBlockID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_CREATE_MARC_BIB_FIELD", strFieldCodeParameter, strFieldNameParameter, strVietFieldNameParameter, strIndicatorsParameter, strVietIndicatorsParameter, intRepeatableParameter, intMandatoryParameter, intLengthParameter, strDescriptionParameter, intLinkTypeIDParameter, intFunctionIDParameter, intFieldTypeIDParameter, intDicIDParameter, intBlockIDParameter, intFieldID);
        }
    
        public virtual int SP_CATA_CREATE_MARC_FORM(Nullable<int> intIsAuthority, string strFormName, string strCreator, string strNote, string strFieldCodes, string strMandatoryFieldCodes, string strFieldDefaultValues, string strFieldIndicatorValues, string strTextBoxFields)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFormNameParameter = strFormName != null ?
                new ObjectParameter("strFormName", strFormName) :
                new ObjectParameter("strFormName", typeof(string));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strFieldCodesParameter = strFieldCodes != null ?
                new ObjectParameter("strFieldCodes", strFieldCodes) :
                new ObjectParameter("strFieldCodes", typeof(string));
    
            var strMandatoryFieldCodesParameter = strMandatoryFieldCodes != null ?
                new ObjectParameter("strMandatoryFieldCodes", strMandatoryFieldCodes) :
                new ObjectParameter("strMandatoryFieldCodes", typeof(string));
    
            var strFieldDefaultValuesParameter = strFieldDefaultValues != null ?
                new ObjectParameter("strFieldDefaultValues", strFieldDefaultValues) :
                new ObjectParameter("strFieldDefaultValues", typeof(string));
    
            var strFieldIndicatorValuesParameter = strFieldIndicatorValues != null ?
                new ObjectParameter("strFieldIndicatorValues", strFieldIndicatorValues) :
                new ObjectParameter("strFieldIndicatorValues", typeof(string));
    
            var strTextBoxFieldsParameter = strTextBoxFields != null ?
                new ObjectParameter("strTextBoxFields", strTextBoxFields) :
                new ObjectParameter("strTextBoxFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_CREATE_MARC_FORM", intIsAuthorityParameter, strFormNameParameter, strCreatorParameter, strNoteParameter, strFieldCodesParameter, strMandatoryFieldCodesParameter, strFieldDefaultValuesParameter, strFieldIndicatorValuesParameter, strTextBoxFieldsParameter);
        }
    
        public virtual int SP_CATA_DEL_CLASSIFICATION(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_DEL_CLASSIFICATION", strIDsParameter);
        }
    
        public virtual int SP_CATA_DELETE_ITEMS(Nullable<int> intIsAuthority, string strIDs)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_DELETE_ITEMS", intIsAuthorityParameter, strIDsParameter);
        }
    
        public virtual int SP_CATA_DICSELFMADE_SEL(Nullable<int> intDicID, string strAccessEntry)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_DICSELFMADE_SEL", intDicIDParameter, strAccessEntryParameter);
        }
    
        public virtual int SP_CATA_DROP_DICTIONARY(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_DROP_DICTIONARY", intIDParameter);
        }
    
        public virtual ObjectResult<SP_CATA_FIELDCODE_SEL_Result> SP_CATA_FIELDCODE_SEL(string strFielsCode)
        {
            var strFielsCodeParameter = strFielsCode != null ?
                new ObjectParameter("strFielsCode", strFielsCode) :
                new ObjectParameter("strFielsCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_FIELDCODE_SEL_Result>("SP_CATA_FIELDCODE_SEL", strFielsCodeParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_AUTHORITY_Result> SP_CATA_GET_AUTHORITY(Nullable<int> lngAuthorityID)
        {
            var lngAuthorityIDParameter = lngAuthorityID.HasValue ?
                new ObjectParameter("lngAuthorityID", lngAuthorityID) :
                new ObjectParameter("lngAuthorityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_AUTHORITY_Result>("SP_CATA_GET_AUTHORITY", lngAuthorityIDParameter);
        }
    
        public virtual int SP_CATA_GET_AUTHORITY_DETAILINFOR(string strTerm, Nullable<int> intReferenceID, Nullable<int> intSourceID, string strCataFrom, string strCataTo, Nullable<int> intFromID, Nullable<int> intToID)
        {
            var strTermParameter = strTerm != null ?
                new ObjectParameter("strTerm", strTerm) :
                new ObjectParameter("strTerm", typeof(string));
    
            var intReferenceIDParameter = intReferenceID.HasValue ?
                new ObjectParameter("intReferenceID", intReferenceID) :
                new ObjectParameter("intReferenceID", typeof(int));
    
            var intSourceIDParameter = intSourceID.HasValue ?
                new ObjectParameter("intSourceID", intSourceID) :
                new ObjectParameter("intSourceID", typeof(int));
    
            var strCataFromParameter = strCataFrom != null ?
                new ObjectParameter("strCataFrom", strCataFrom) :
                new ObjectParameter("strCataFrom", typeof(string));
    
            var strCataToParameter = strCataTo != null ?
                new ObjectParameter("strCataTo", strCataTo) :
                new ObjectParameter("strCataTo", typeof(string));
    
            var intFromIDParameter = intFromID.HasValue ?
                new ObjectParameter("intFromID", intFromID) :
                new ObjectParameter("intFromID", typeof(int));
    
            var intToIDParameter = intToID.HasValue ?
                new ObjectParameter("intToID", intToID) :
                new ObjectParameter("intToID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_AUTHORITY_DETAILINFOR", strTermParameter, intReferenceIDParameter, intSourceIDParameter, strCataFromParameter, strCataToParameter, intFromIDParameter, intToIDParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_AUTHORITY_ID_Result> SP_CATA_GET_AUTHORITY_ID(string strAccessEntry, Nullable<int> intReferenceID, Nullable<int> intFormID, Nullable<byte> intIsCode)
        {
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var intReferenceIDParameter = intReferenceID.HasValue ?
                new ObjectParameter("intReferenceID", intReferenceID) :
                new ObjectParameter("intReferenceID", typeof(int));
    
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var intIsCodeParameter = intIsCode.HasValue ?
                new ObjectParameter("intIsCode", intIsCode) :
                new ObjectParameter("intIsCode", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_AUTHORITY_ID_Result>("SP_CATA_GET_AUTHORITY_ID", strAccessEntryParameter, intReferenceIDParameter, intFormIDParameter, intIsCodeParameter);
        }
    
        public virtual int SP_CATA_GET_AUTHORITY_MAININFOR(string strTerm, Nullable<int> intReferenceID, Nullable<int> intSourceID, string strCataFrom, string strCataTo, Nullable<int> intFromID, Nullable<int> intToID)
        {
            var strTermParameter = strTerm != null ?
                new ObjectParameter("strTerm", strTerm) :
                new ObjectParameter("strTerm", typeof(string));
    
            var intReferenceIDParameter = intReferenceID.HasValue ?
                new ObjectParameter("intReferenceID", intReferenceID) :
                new ObjectParameter("intReferenceID", typeof(int));
    
            var intSourceIDParameter = intSourceID.HasValue ?
                new ObjectParameter("intSourceID", intSourceID) :
                new ObjectParameter("intSourceID", typeof(int));
    
            var strCataFromParameter = strCataFrom != null ?
                new ObjectParameter("strCataFrom", strCataFrom) :
                new ObjectParameter("strCataFrom", typeof(string));
    
            var strCataToParameter = strCataTo != null ?
                new ObjectParameter("strCataTo", strCataTo) :
                new ObjectParameter("strCataTo", typeof(string));
    
            var intFromIDParameter = intFromID.HasValue ?
                new ObjectParameter("intFromID", intFromID) :
                new ObjectParameter("intFromID", typeof(int));
    
            var intToIDParameter = intToID.HasValue ?
                new ObjectParameter("intToID", intToID) :
                new ObjectParameter("intToID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_AUTHORITY_MAININFOR", strTermParameter, intReferenceIDParameter, intSourceIDParameter, strCataFromParameter, strCataToParameter, intFromIDParameter, intToIDParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_AUTHORITYSOURCE_Result> SP_CATA_GET_AUTHORITYSOURCE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_AUTHORITYSOURCE_Result>("SP_CATA_GET_AUTHORITYSOURCE");
        }
    
        public virtual ObjectResult<SP_CATA_GET_BLOCKFIELDS_Result> SP_CATA_GET_BLOCKFIELDS(Nullable<int> intIsAuthority)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_BLOCKFIELDS_Result>("SP_CATA_GET_BLOCKFIELDS", intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GET_CATALOGUE_FIELDS(Nullable<int> intIsAuthority, Nullable<int> intFormID, string strFieldCodes, string strAddedFieldCodes, Nullable<int> intGroupBy)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var strFieldCodesParameter = strFieldCodes != null ?
                new ObjectParameter("strFieldCodes", strFieldCodes) :
                new ObjectParameter("strFieldCodes", typeof(string));
    
            var strAddedFieldCodesParameter = strAddedFieldCodes != null ?
                new ObjectParameter("strAddedFieldCodes", strAddedFieldCodes) :
                new ObjectParameter("strAddedFieldCodes", typeof(string));
    
            var intGroupByParameter = intGroupBy.HasValue ?
                new ObjectParameter("intGroupBy", intGroupBy) :
                new ObjectParameter("intGroupBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_CATALOGUE_FIELDS", intIsAuthorityParameter, intFormIDParameter, strFieldCodesParameter, strAddedFieldCodesParameter, intGroupByParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_CLASSIFICATION_Result> SP_CATA_GET_CLASSIFICATION(string strType)
        {
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_CLASSIFICATION_Result>("SP_CATA_GET_CLASSIFICATION", strTypeParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_CLASSIFICATION_DATA_Result> SP_CATA_GET_CLASSIFICATION_DATA(string strAccessEntry, Nullable<int> intTypeID)
        {
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_CLASSIFICATION_DATA_Result>("SP_CATA_GET_CLASSIFICATION_DATA", strAccessEntryParameter, intTypeIDParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_CLASSIFICATION_ITEMS_Result> SP_CATA_GET_CLASSIFICATION_ITEMS(string strAccessEntry, Nullable<int> intFromID, Nullable<int> intToID)
        {
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var intFromIDParameter = intFromID.HasValue ?
                new ObjectParameter("intFromID", intFromID) :
                new ObjectParameter("intFromID", typeof(int));
    
            var intToIDParameter = intToID.HasValue ?
                new ObjectParameter("intToID", intToID) :
                new ObjectParameter("intToID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_CLASSIFICATION_ITEMS_Result>("SP_CATA_GET_CLASSIFICATION_ITEMS", strAccessEntryParameter, intFromIDParameter, intToIDParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_CONTENTS_OF_ITEMS_Result> SP_CATA_GET_CONTENTS_OF_ITEMS(string strItemIDs, Nullable<int> intIsAuthority)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_CONTENTS_OF_ITEMS_Result>("SP_CATA_GET_CONTENTS_OF_ITEMS", strItemIDsParameter, intIsAuthorityParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_CONTENTS_OF_ITEMS1_Result> SP_CATA_GET_CONTENTS_OF_ITEMS1(string strItemIDs, Nullable<int> intIsAuthority)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_CONTENTS_OF_ITEMS1_Result>("SP_CATA_GET_CONTENTS_OF_ITEMS1", strItemIDsParameter, intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GET_DETAILINFOR_OF_ITEM(string strItemIDs, Nullable<int> intIsAuthority)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_DETAILINFOR_OF_ITEM", strItemIDsParameter, intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GET_DETAILINFOR_OF_ITEM1(string strItemIDs, Nullable<int> intIsAuthority)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_DETAILINFOR_OF_ITEM1", strItemIDsParameter, intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GET_DIC_INDEX(Nullable<int> intTopNumber, string strAccessEntry, string strTableDicName, string strSearchFields)
        {
            var intTopNumberParameter = intTopNumber.HasValue ?
                new ObjectParameter("intTopNumber", intTopNumber) :
                new ObjectParameter("intTopNumber", typeof(int));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var strTableDicNameParameter = strTableDicName != null ?
                new ObjectParameter("strTableDicName", strTableDicName) :
                new ObjectParameter("strTableDicName", typeof(string));
    
            var strSearchFieldsParameter = strSearchFields != null ?
                new ObjectParameter("strSearchFields", strSearchFields) :
                new ObjectParameter("strSearchFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_DIC_INDEX", intTopNumberParameter, strAccessEntryParameter, strTableDicNameParameter, strSearchFieldsParameter);
        }
    
        public virtual int SP_CATA_GET_DICAUTHOR(string strDicName, string strAccessEntry, string strSearchFields)
        {
            var strDicNameParameter = strDicName != null ?
                new ObjectParameter("strDicName", strDicName) :
                new ObjectParameter("strDicName", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var strSearchFieldsParameter = strSearchFields != null ?
                new ObjectParameter("strSearchFields", strSearchFields) :
                new ObjectParameter("strSearchFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_DICAUTHOR", strDicNameParameter, strAccessEntryParameter, strSearchFieldsParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_FIELD_PROPERTIES_Result> SP_CATA_GET_FIELD_PROPERTIES(Nullable<int> intIsAuthority, string strFieldCode)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_FIELD_PROPERTIES_Result>("SP_CATA_GET_FIELD_PROPERTIES", intIsAuthorityParameter, strFieldCodeParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_FIELDFUNCTIONS_Result> SP_CATA_GET_FIELDFUNCTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_FIELDFUNCTIONS_Result>("SP_CATA_GET_FIELDFUNCTIONS");
        }
    
        public virtual int SP_CATA_GET_FIELDS_OF_BLOCK(Nullable<int> intIsAuthority, string strFCURL1, string strFCURL2, Nullable<int> intBlockID)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFCURL1Parameter = strFCURL1 != null ?
                new ObjectParameter("strFCURL1", strFCURL1) :
                new ObjectParameter("strFCURL1", typeof(string));
    
            var strFCURL2Parameter = strFCURL2 != null ?
                new ObjectParameter("strFCURL2", strFCURL2) :
                new ObjectParameter("strFCURL2", typeof(string));
    
            var intBlockIDParameter = intBlockID.HasValue ?
                new ObjectParameter("intBlockID", intBlockID) :
                new ObjectParameter("intBlockID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_FIELDS_OF_BLOCK", intIsAuthorityParameter, strFCURL1Parameter, strFCURL2Parameter, intBlockIDParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_FIELDTYPES_Result> SP_CATA_GET_FIELDTYPES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_FIELDTYPES_Result>("SP_CATA_GET_FIELDTYPES");
        }
    
        public virtual ObjectResult<SP_CATA_GET_INDICATORS_Result> SP_CATA_GET_INDICATORS(string strFieldCode, Nullable<int> intIsAuthority)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_INDICATORS_Result>("SP_CATA_GET_INDICATORS", strFieldCodeParameter, intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GET_ISSUES(string strTitle, string strFromDate, string strToDate, string strIssueNo, string strVolume)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var strIssueNoParameter = strIssueNo != null ?
                new ObjectParameter("strIssueNo", strIssueNo) :
                new ObjectParameter("strIssueNo", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_ISSUES", strTitleParameter, strFromDateParameter, strToDateParameter, strIssueNoParameter, strVolumeParameter);
        }
    
        public virtual int SP_CATA_GET_ITEMID_BY_TOPNUM(Nullable<int> intTopNum, string strSQLFilter, Nullable<int> intIsAuthority)
        {
            var intTopNumParameter = intTopNum.HasValue ?
                new ObjectParameter("intTopNum", intTopNum) :
                new ObjectParameter("intTopNum", typeof(int));
    
            var strSQLFilterParameter = strSQLFilter != null ?
                new ObjectParameter("strSQLFilter", strSQLFilter) :
                new ObjectParameter("strSQLFilter", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_ITEMID_BY_TOPNUM", intTopNumParameter, strSQLFilterParameter, intIsAuthorityParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_LINKTYPES_Result> SP_CATA_GET_LINKTYPES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_LINKTYPES_Result>("SP_CATA_GET_LINKTYPES");
        }
    
        public virtual int SP_CATA_GET_MAININFOR_OF_ITEM(string strItemIDs, Nullable<int> intIsAuthority)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_MAININFOR_OF_ITEM", strItemIDsParameter, intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GET_MARC_FORM(Nullable<int> intFormID, Nullable<int> intIsAuthority)
        {
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_MARC_FORM", intFormIDParameter, intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GET_MODIFIED_FIELDS(Nullable<int> intIsAuthority, Nullable<int> intFormID, string strFieldCodes, string strAddedFieldCodes, string strUsedFieldCodes, Nullable<int> intGroupBy)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var strFieldCodesParameter = strFieldCodes != null ?
                new ObjectParameter("strFieldCodes", strFieldCodes) :
                new ObjectParameter("strFieldCodes", typeof(string));
    
            var strAddedFieldCodesParameter = strAddedFieldCodes != null ?
                new ObjectParameter("strAddedFieldCodes", strAddedFieldCodes) :
                new ObjectParameter("strAddedFieldCodes", typeof(string));
    
            var strUsedFieldCodesParameter = strUsedFieldCodes != null ?
                new ObjectParameter("strUsedFieldCodes", strUsedFieldCodes) :
                new ObjectParameter("strUsedFieldCodes", typeof(string));
    
            var intGroupByParameter = intGroupBy.HasValue ?
                new ObjectParameter("intGroupBy", intGroupBy) :
                new ObjectParameter("intGroupBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_MODIFIED_FIELDS", intIsAuthorityParameter, intFormIDParameter, strFieldCodesParameter, strAddedFieldCodesParameter, strUsedFieldCodesParameter, intGroupByParameter);
        }
    
        public virtual int SP_CATA_GET_PERIODICALS(string strTitle, string strFromDate, string strToDate, string strIssueNo, string strVolume)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var strIssueNoParameter = strIssueNo != null ?
                new ObjectParameter("strIssueNo", strIssueNo) :
                new ObjectParameter("strIssueNo", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_PERIODICALS", strTitleParameter, strFromDateParameter, strToDateParameter, strIssueNoParameter, strVolumeParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_PICKED_FIELDVIEW_Result> SP_CATA_GET_PICKED_FIELDVIEW(Nullable<int> intIsAuthority, string strPickedField, Nullable<int> intFormID)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strPickedFieldParameter = strPickedField != null ?
                new ObjectParameter("strPickedField", strPickedField) :
                new ObjectParameter("strPickedField", typeof(string));
    
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_PICKED_FIELDVIEW_Result>("SP_CATA_GET_PICKED_FIELDVIEW", intIsAuthorityParameter, strPickedFieldParameter, intFormIDParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_RANGE_OF_ITEMID_Result> SP_CATA_GET_RANGE_OF_ITEMID(Nullable<int> intIsAuthority, Nullable<int> intTypeItem)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var intTypeItemParameter = intTypeItem.HasValue ?
                new ObjectParameter("intTypeItem", intTypeItem) :
                new ObjectParameter("intTypeItem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_RANGE_OF_ITEMID_Result>("SP_CATA_GET_RANGE_OF_ITEMID", intIsAuthorityParameter, intTypeItemParameter);
        }
    
        public virtual int SP_CATA_GET_SUBFIELDS(Nullable<int> intIsAuthority, string strFCURL1, string strFCURL2, string strFieldCode)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFCURL1Parameter = strFCURL1 != null ?
                new ObjectParameter("strFCURL1", strFCURL1) :
                new ObjectParameter("strFCURL1", typeof(string));
    
            var strFCURL2Parameter = strFCURL2 != null ?
                new ObjectParameter("strFCURL2", strFCURL2) :
                new ObjectParameter("strFCURL2", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GET_SUBFIELDS", intIsAuthorityParameter, strFCURL1Parameter, strFCURL2Parameter, strFieldCodeParameter);
        }
    
        public virtual ObjectResult<string> SP_CATA_GET_TEXTAREAFIELDS(Nullable<int> intFormID, Nullable<int> intIsAuthority)
        {
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CATA_GET_TEXTAREAFIELDS", intFormIDParameter, intIsAuthorityParameter);
        }
    
        public virtual ObjectResult<SP_CATA_GET_USERFIELDS_Result> SP_CATA_GET_USERFIELDS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_GET_USERFIELDS_Result>("SP_CATA_GET_USERFIELDS");
        }
    
        public virtual int SP_CATA_GETFIELDS_OF_FORM(Nullable<int> intFormID, string strCreator, Nullable<int> intIsAuthority)
        {
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GETFIELDS_OF_FORM", intFormIDParameter, strCreatorParameter, intIsAuthorityParameter);
        }
    
        public virtual int SP_CATA_GETFIELDSTOVIEW(Nullable<int> intIsAuthority, string strFCURL1, string strFCURL2, string strFCURL3, string strFCURL4, string strFCURL5, string strFCURL6, string strPickedFieldCodes, string strMandatoryFieldCodes, Nullable<int> intFormID)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFCURL1Parameter = strFCURL1 != null ?
                new ObjectParameter("strFCURL1", strFCURL1) :
                new ObjectParameter("strFCURL1", typeof(string));
    
            var strFCURL2Parameter = strFCURL2 != null ?
                new ObjectParameter("strFCURL2", strFCURL2) :
                new ObjectParameter("strFCURL2", typeof(string));
    
            var strFCURL3Parameter = strFCURL3 != null ?
                new ObjectParameter("strFCURL3", strFCURL3) :
                new ObjectParameter("strFCURL3", typeof(string));
    
            var strFCURL4Parameter = strFCURL4 != null ?
                new ObjectParameter("strFCURL4", strFCURL4) :
                new ObjectParameter("strFCURL4", typeof(string));
    
            var strFCURL5Parameter = strFCURL5 != null ?
                new ObjectParameter("strFCURL5", strFCURL5) :
                new ObjectParameter("strFCURL5", typeof(string));
    
            var strFCURL6Parameter = strFCURL6 != null ?
                new ObjectParameter("strFCURL6", strFCURL6) :
                new ObjectParameter("strFCURL6", typeof(string));
    
            var strPickedFieldCodesParameter = strPickedFieldCodes != null ?
                new ObjectParameter("strPickedFieldCodes", strPickedFieldCodes) :
                new ObjectParameter("strPickedFieldCodes", typeof(string));
    
            var strMandatoryFieldCodesParameter = strMandatoryFieldCodes != null ?
                new ObjectParameter("strMandatoryFieldCodes", strMandatoryFieldCodes) :
                new ObjectParameter("strMandatoryFieldCodes", typeof(string));
    
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_GETFIELDSTOVIEW", intIsAuthorityParameter, strFCURL1Parameter, strFCURL2Parameter, strFCURL3Parameter, strFCURL4Parameter, strFCURL5Parameter, strFCURL6Parameter, strPickedFieldCodesParameter, strMandatoryFieldCodesParameter, intFormIDParameter);
        }
    
        public virtual int SP_CATA_INS_CLASSIFICATION(string strItemLeader, string strItemCode, string strDisplayEntry, string strAccessEntry, string strType, string strVietCaption, string strCaption, string strDescription, string strVersion, ObjectParameter intRetval)
        {
            var strItemLeaderParameter = strItemLeader != null ?
                new ObjectParameter("strItemLeader", strItemLeader) :
                new ObjectParameter("strItemLeader", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strDisplayEntryParameter = strDisplayEntry != null ?
                new ObjectParameter("strDisplayEntry", strDisplayEntry) :
                new ObjectParameter("strDisplayEntry", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            var strVietCaptionParameter = strVietCaption != null ?
                new ObjectParameter("strVietCaption", strVietCaption) :
                new ObjectParameter("strVietCaption", typeof(string));
    
            var strCaptionParameter = strCaption != null ?
                new ObjectParameter("strCaption", strCaption) :
                new ObjectParameter("strCaption", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            var strVersionParameter = strVersion != null ?
                new ObjectParameter("strVersion", strVersion) :
                new ObjectParameter("strVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_INS_CLASSIFICATION", strItemLeaderParameter, strItemCodeParameter, strDisplayEntryParameter, strAccessEntryParameter, strTypeParameter, strVietCaptionParameter, strCaptionParameter, strDescriptionParameter, strVersionParameter, intRetval);
        }
    
        public virtual int SP_CATA_KIEM_TRA_TRUNG_020(string strValue020, ObjectParameter intCount)
        {
            var strValue020Parameter = strValue020 != null ?
                new ObjectParameter("strValue020", strValue020) :
                new ObjectParameter("strValue020", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_KIEM_TRA_TRUNG_020", strValue020Parameter, intCount);
        }
    
        public virtual int SP_CATA_KIEM_TRA_TRUNG_245(string strValue245, ObjectParameter intCount)
        {
            var strValue245Parameter = strValue245 != null ?
                new ObjectParameter("strValue245", strValue245) :
                new ObjectParameter("strValue245", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_KIEM_TRA_TRUNG_245", strValue245Parameter, intCount);
        }
    
        public virtual int SP_CATA_MARC_AUTHORITY_FIELD_SEL(string strPattern)
        {
            var strPatternParameter = strPattern != null ?
                new ObjectParameter("strPattern", strPattern) :
                new ObjectParameter("strPattern", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_MARC_AUTHORITY_FIELD_SEL", strPatternParameter);
        }
    
        public virtual int SP_CATA_MARC_AUTHORITY_FIELD_SELECT(string strFieldCode)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_MARC_AUTHORITY_FIELD_SELECT", strFieldCodeParameter);
        }
    
        public virtual int SP_CATA_MERGE_DIC_INDEX(string strIDNew, Nullable<int> intIDTableDic, string strID)
        {
            var strIDNewParameter = strIDNew != null ?
                new ObjectParameter("strIDNew", strIDNew) :
                new ObjectParameter("strIDNew", typeof(string));
    
            var intIDTableDicParameter = intIDTableDic.HasValue ?
                new ObjectParameter("intIDTableDic", intIDTableDic) :
                new ObjectParameter("intIDTableDic", typeof(int));
    
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_MERGE_DIC_INDEX", strIDNewParameter, intIDTableDicParameter, strIDParameter);
        }
    
        public virtual int SP_CATA_MERGE_ENTRIES(Nullable<int> intDicID, string strIDMerge, Nullable<int> intIDNew)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var strIDMergeParameter = strIDMerge != null ?
                new ObjectParameter("strIDMerge", strIDMerge) :
                new ObjectParameter("strIDMerge", typeof(string));
    
            var intIDNewParameter = intIDNew.HasValue ?
                new ObjectParameter("intIDNew", intIDNew) :
                new ObjectParameter("intIDNew", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_MERGE_ENTRIES", intDicIDParameter, strIDMergeParameter, intIDNewParameter);
        }
    
        public virtual int SP_CATA_MERGER_MARC_FORM(Nullable<int> intIsAuthority, Nullable<int> intSouFormID, Nullable<int> intDesFormID)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var intSouFormIDParameter = intSouFormID.HasValue ?
                new ObjectParameter("intSouFormID", intSouFormID) :
                new ObjectParameter("intSouFormID", typeof(int));
    
            var intDesFormIDParameter = intDesFormID.HasValue ?
                new ObjectParameter("intDesFormID", intDesFormID) :
                new ObjectParameter("intDesFormID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_MERGER_MARC_FORM", intIsAuthorityParameter, intSouFormIDParameter, intDesFormIDParameter);
        }
    
        public virtual int SP_CATA_QUEUE_DEL(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_QUEUE_DEL", strIDsParameter);
        }
    
        public virtual ObjectResult<SP_CATA_QUEUE_DURATION_SEL_Result> SP_CATA_QUEUE_DURATION_SEL(Nullable<int> intReviewed)
        {
            var intReviewedParameter = intReviewed.HasValue ?
                new ObjectParameter("intReviewed", intReviewed) :
                new ObjectParameter("intReviewed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_QUEUE_DURATION_SEL_Result>("SP_CATA_QUEUE_DURATION_SEL", intReviewedParameter);
        }
    
        public virtual ObjectResult<SP_CATA_QUICK_VIEW_Result> SP_CATA_QUICK_VIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATA_QUICK_VIEW_Result>("SP_CATA_QUICK_VIEW");
        }
    
        public virtual int SP_CATA_REMOVEALL_ENTRIES(string strTableName, string strFieldCode)
        {
            var strTableNameParameter = strTableName != null ?
                new ObjectParameter("strTableName", strTableName) :
                new ObjectParameter("strTableName", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_REMOVEALL_ENTRIES", strTableNameParameter, strFieldCodeParameter);
        }
    
        public virtual int SP_CATA_RENAME_DICTIONARY(Nullable<int> intID, string strNewName, Nullable<int> intNewForPatron, Nullable<int> intNewForStaff, Nullable<int> intNewFieldSize, ObjectParameter intRET)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strNewNameParameter = strNewName != null ?
                new ObjectParameter("strNewName", strNewName) :
                new ObjectParameter("strNewName", typeof(string));
    
            var intNewForPatronParameter = intNewForPatron.HasValue ?
                new ObjectParameter("intNewForPatron", intNewForPatron) :
                new ObjectParameter("intNewForPatron", typeof(int));
    
            var intNewForStaffParameter = intNewForStaff.HasValue ?
                new ObjectParameter("intNewForStaff", intNewForStaff) :
                new ObjectParameter("intNewForStaff", typeof(int));
    
            var intNewFieldSizeParameter = intNewFieldSize.HasValue ?
                new ObjectParameter("intNewFieldSize", intNewFieldSize) :
                new ObjectParameter("intNewFieldSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_RENAME_DICTIONARY", intIDParameter, strNewNameParameter, intNewForPatronParameter, intNewForStaffParameter, intNewFieldSizeParameter, intRET);
        }
    
        public virtual int SP_CATA_SEARCH_HOLDING_DEL(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_SEARCH_HOLDING_DEL", strIDsParameter);
        }
    
        public virtual int SP_CATA_SEARCH_MARC_FIELDS(string strPattern, Nullable<int> intHaveParentFieldCode, Nullable<int> intIsAuthority, string strFCURL1, string strFCURL2)
        {
            var strPatternParameter = strPattern != null ?
                new ObjectParameter("strPattern", strPattern) :
                new ObjectParameter("strPattern", typeof(string));
    
            var intHaveParentFieldCodeParameter = intHaveParentFieldCode.HasValue ?
                new ObjectParameter("intHaveParentFieldCode", intHaveParentFieldCode) :
                new ObjectParameter("intHaveParentFieldCode", typeof(int));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFCURL1Parameter = strFCURL1 != null ?
                new ObjectParameter("strFCURL1", strFCURL1) :
                new ObjectParameter("strFCURL1", typeof(string));
    
            var strFCURL2Parameter = strFCURL2 != null ?
                new ObjectParameter("strFCURL2", strFCURL2) :
                new ObjectParameter("strFCURL2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_SEARCH_MARC_FIELDS", strPatternParameter, intHaveParentFieldCodeParameter, intIsAuthorityParameter, strFCURL1Parameter, strFCURL2Parameter);
        }
    
        public virtual int SP_CATA_SET_DICID_FOR_FIELD(Nullable<int> intDicID, string strFieldCode)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_SET_DICID_FOR_FIELD", intDicIDParameter, strFieldCodeParameter);
        }
    
        public virtual int SP_CATA_UPDATE_CLASSIFICATION(Nullable<int> lngID, string strItemLeader, string strDisplayEntry, string strAccessEntry, string strType, string strCaption, string strVietCaption, string strDescription, string strVersion, ObjectParameter intRetval)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            var strItemLeaderParameter = strItemLeader != null ?
                new ObjectParameter("strItemLeader", strItemLeader) :
                new ObjectParameter("strItemLeader", typeof(string));
    
            var strDisplayEntryParameter = strDisplayEntry != null ?
                new ObjectParameter("strDisplayEntry", strDisplayEntry) :
                new ObjectParameter("strDisplayEntry", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            var strCaptionParameter = strCaption != null ?
                new ObjectParameter("strCaption", strCaption) :
                new ObjectParameter("strCaption", typeof(string));
    
            var strVietCaptionParameter = strVietCaption != null ?
                new ObjectParameter("strVietCaption", strVietCaption) :
                new ObjectParameter("strVietCaption", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            var strVersionParameter = strVersion != null ?
                new ObjectParameter("strVersion", strVersion) :
                new ObjectParameter("strVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_UPDATE_CLASSIFICATION", lngIDParameter, strItemLeaderParameter, strDisplayEntryParameter, strAccessEntryParameter, strTypeParameter, strCaptionParameter, strVietCaptionParameter, strDescriptionParameter, strVersionParameter, intRetval);
        }
    
        public virtual int SP_CATA_UPDATE_DIC_INDEX(string strDisplayEntry, string strAccessEntry, string strISOCode, string strName, string strNameViet, string strNote, Nullable<int> intParentID, string strTableDic, string strID)
        {
            var strDisplayEntryParameter = strDisplayEntry != null ?
                new ObjectParameter("strDisplayEntry", strDisplayEntry) :
                new ObjectParameter("strDisplayEntry", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            var strISOCodeParameter = strISOCode != null ?
                new ObjectParameter("strISOCode", strISOCode) :
                new ObjectParameter("strISOCode", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strNameVietParameter = strNameViet != null ?
                new ObjectParameter("strNameViet", strNameViet) :
                new ObjectParameter("strNameViet", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            var strTableDicParameter = strTableDic != null ?
                new ObjectParameter("strTableDic", strTableDic) :
                new ObjectParameter("strTableDic", typeof(string));
    
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_UPDATE_DIC_INDEX", strDisplayEntryParameter, strAccessEntryParameter, strISOCodeParameter, strNameParameter, strNameVietParameter, strNoteParameter, intParentIDParameter, strTableDicParameter, strIDParameter);
        }
    
        public virtual int SP_CATA_UPDATE_ENTRY(Nullable<int> intDicID, Nullable<int> intID, string strDictionary, string strAccessEntry)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strDictionaryParameter = strDictionary != null ?
                new ObjectParameter("strDictionary", strDictionary) :
                new ObjectParameter("strDictionary", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_UPDATE_ENTRY", intDicIDParameter, intIDParameter, strDictionaryParameter, strAccessEntryParameter);
        }
    
        public virtual int SP_CATA_UPDATE_MARC_BIB_FIELD(string strFieldCode, string strFieldName, string strVietFieldName, string strIndicators, string strVietIndicators, Nullable<int> intRepeatable, Nullable<int> intMandatory, Nullable<int> intLength, string strDescription, Nullable<int> intLinkTypeID, Nullable<int> intFunctionID, Nullable<int> intFieldTypeID, Nullable<int> intDicID, Nullable<int> intBlockID)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var strFieldNameParameter = strFieldName != null ?
                new ObjectParameter("strFieldName", strFieldName) :
                new ObjectParameter("strFieldName", typeof(string));
    
            var strVietFieldNameParameter = strVietFieldName != null ?
                new ObjectParameter("strVietFieldName", strVietFieldName) :
                new ObjectParameter("strVietFieldName", typeof(string));
    
            var strIndicatorsParameter = strIndicators != null ?
                new ObjectParameter("strIndicators", strIndicators) :
                new ObjectParameter("strIndicators", typeof(string));
    
            var strVietIndicatorsParameter = strVietIndicators != null ?
                new ObjectParameter("strVietIndicators", strVietIndicators) :
                new ObjectParameter("strVietIndicators", typeof(string));
    
            var intRepeatableParameter = intRepeatable.HasValue ?
                new ObjectParameter("intRepeatable", intRepeatable) :
                new ObjectParameter("intRepeatable", typeof(int));
    
            var intMandatoryParameter = intMandatory.HasValue ?
                new ObjectParameter("intMandatory", intMandatory) :
                new ObjectParameter("intMandatory", typeof(int));
    
            var intLengthParameter = intLength.HasValue ?
                new ObjectParameter("intLength", intLength) :
                new ObjectParameter("intLength", typeof(int));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            var intLinkTypeIDParameter = intLinkTypeID.HasValue ?
                new ObjectParameter("intLinkTypeID", intLinkTypeID) :
                new ObjectParameter("intLinkTypeID", typeof(int));
    
            var intFunctionIDParameter = intFunctionID.HasValue ?
                new ObjectParameter("intFunctionID", intFunctionID) :
                new ObjectParameter("intFunctionID", typeof(int));
    
            var intFieldTypeIDParameter = intFieldTypeID.HasValue ?
                new ObjectParameter("intFieldTypeID", intFieldTypeID) :
                new ObjectParameter("intFieldTypeID", typeof(int));
    
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var intBlockIDParameter = intBlockID.HasValue ?
                new ObjectParameter("intBlockID", intBlockID) :
                new ObjectParameter("intBlockID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_UPDATE_MARC_BIB_FIELD", strFieldCodeParameter, strFieldNameParameter, strVietFieldNameParameter, strIndicatorsParameter, strVietIndicatorsParameter, intRepeatableParameter, intMandatoryParameter, intLengthParameter, strDescriptionParameter, intLinkTypeIDParameter, intFunctionIDParameter, intFieldTypeIDParameter, intDicIDParameter, intBlockIDParameter);
        }
    
        public virtual int SP_CATA_UPDATE_MARC_FORM(Nullable<int> intIsAuthority, string strFormName, Nullable<int> intFormID, string strNote, string strFieldCodes, string strMandatoryFieldCodes, string strFieldDefaultValues, string strFieldIndicatorValues, string strTextBoxFields)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFormNameParameter = strFormName != null ?
                new ObjectParameter("strFormName", strFormName) :
                new ObjectParameter("strFormName", typeof(string));
    
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strFieldCodesParameter = strFieldCodes != null ?
                new ObjectParameter("strFieldCodes", strFieldCodes) :
                new ObjectParameter("strFieldCodes", typeof(string));
    
            var strMandatoryFieldCodesParameter = strMandatoryFieldCodes != null ?
                new ObjectParameter("strMandatoryFieldCodes", strMandatoryFieldCodes) :
                new ObjectParameter("strMandatoryFieldCodes", typeof(string));
    
            var strFieldDefaultValuesParameter = strFieldDefaultValues != null ?
                new ObjectParameter("strFieldDefaultValues", strFieldDefaultValues) :
                new ObjectParameter("strFieldDefaultValues", typeof(string));
    
            var strFieldIndicatorValuesParameter = strFieldIndicatorValues != null ?
                new ObjectParameter("strFieldIndicatorValues", strFieldIndicatorValues) :
                new ObjectParameter("strFieldIndicatorValues", typeof(string));
    
            var strTextBoxFieldsParameter = strTextBoxFields != null ?
                new ObjectParameter("strTextBoxFields", strTextBoxFields) :
                new ObjectParameter("strTextBoxFields", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_UPDATE_MARC_FORM", intIsAuthorityParameter, strFormNameParameter, intFormIDParameter, strNoteParameter, strFieldCodesParameter, strMandatoryFieldCodesParameter, strFieldDefaultValuesParameter, strFieldIndicatorValuesParameter, strTextBoxFieldsParameter);
        }
    
        public virtual int SP_CATA_UPDATE_OPAC_ITEM(Nullable<int> lngItemID, Nullable<int> intType, Nullable<int> intField912Value)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intField912ValueParameter = intField912Value.HasValue ?
                new ObjectParameter("intField912Value", intField912Value) :
                new ObjectParameter("intField912Value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CATA_UPDATE_OPAC_ITEM", lngItemIDParameter, intTypeParameter, intField912ValueParameter);
        }
    
        public virtual ObjectResult<SP_CATALOG_MARCBF_GET_Result> SP_CATALOG_MARCBF_GET(string strFieldCode)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATALOG_MARCBF_GET_Result>("SP_CATALOG_MARCBF_GET", strFieldCodeParameter);
        }
    
        public virtual ObjectResult<SP_CATALOGUE_STAT_OVERVIEW_Result> SP_CATALOGUE_STAT_OVERVIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CATALOGUE_STAT_OVERVIEW_Result>("SP_CATALOGUE_STAT_OVERVIEW");
        }
    
        public virtual ObjectResult<string> SP_CHECK_COPYNUMBER(string strCopyNumber, Nullable<int> intCopyID, Nullable<int> intLocID)
        {
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intCopyIDParameter = intCopyID.HasValue ?
                new ObjectParameter("intCopyID", intCopyID) :
                new ObjectParameter("intCopyID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CHECK_COPYNUMBER", strCopyNumberParameter, intCopyIDParameter, intLocIDParameter);
        }
    
        public virtual int SP_CHECK_EXIST_ISSUE(Nullable<int> lngItemID, string strIssueNo, string strMonth, ObjectParameter intOutValue)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var strIssueNoParameter = strIssueNo != null ?
                new ObjectParameter("strIssueNo", strIssueNo) :
                new ObjectParameter("strIssueNo", typeof(string));
    
            var strMonthParameter = strMonth != null ?
                new ObjectParameter("strMonth", strMonth) :
                new ObjectParameter("strMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHECK_EXIST_ISSUE", lngItemIDParameter, strIssueNoParameter, strMonthParameter, intOutValue);
        }
    
        public virtual ObjectResult<SP_CHECK_HOLD_REQUEST_Result> SP_CHECK_HOLD_REQUEST(Nullable<int> lngTransactionID)
        {
            var lngTransactionIDParameter = lngTransactionID.HasValue ?
                new ObjectParameter("lngTransactionID", lngTransactionID) :
                new ObjectParameter("lngTransactionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CHECK_HOLD_REQUEST_Result>("SP_CHECK_HOLD_REQUEST", lngTransactionIDParameter);
        }
    
        public virtual ObjectResult<SP_CHECK_RENEWDATE_Result> SP_CHECK_RENEWDATE(Nullable<int> intPatronID, string strNewExpiredDate)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var strNewExpiredDateParameter = strNewExpiredDate != null ?
                new ObjectParameter("strNewExpiredDate", strNewExpiredDate) :
                new ObjectParameter("strNewExpiredDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CHECK_RENEWDATE_Result>("SP_CHECK_RENEWDATE", intPatronIDParameter, strNewExpiredDateParameter);
        }
    
        public virtual int SP_CHECKCOPYNUMBER(Nullable<int> intUserID, string strPatronCode, string strCopyNumber, ObjectParameter intOutPut)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHECKCOPYNUMBER", intUserIDParameter, strPatronCodeParameter, strCopyNumberParameter, intOutPut);
        }
    
        public virtual int SP_CHECKIN(Nullable<int> intUserID, Nullable<int> intType, Nullable<int> intAutoPaid, string strCopyNumbers, string strCheckInDate, ObjectParameter strTransIDs, ObjectParameter strPatronCode, ObjectParameter intError)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intAutoPaidParameter = intAutoPaid.HasValue ?
                new ObjectParameter("intAutoPaid", intAutoPaid) :
                new ObjectParameter("intAutoPaid", typeof(int));
    
            var strCopyNumbersParameter = strCopyNumbers != null ?
                new ObjectParameter("strCopyNumbers", strCopyNumbers) :
                new ObjectParameter("strCopyNumbers", typeof(string));
    
            var strCheckInDateParameter = strCheckInDate != null ?
                new ObjectParameter("strCheckInDate", strCheckInDate) :
                new ObjectParameter("strCheckInDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHECKIN", intUserIDParameter, intTypeParameter, intAutoPaidParameter, strCopyNumbersParameter, strCheckInDateParameter, strTransIDs, strPatronCode, intError);
        }
    
        public virtual int SP_CHECKOUT(string strPatronCode, Nullable<int> intUserID, Nullable<int> intLoanMode, string strCopyNumber, string strDueDate, string strCheckOutDate, Nullable<int> intHoldIgnore, ObjectParameter intOutValue, ObjectParameter intOutID)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intLoanModeParameter = intLoanMode.HasValue ?
                new ObjectParameter("intLoanMode", intLoanMode) :
                new ObjectParameter("intLoanMode", typeof(int));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            var strCheckOutDateParameter = strCheckOutDate != null ?
                new ObjectParameter("strCheckOutDate", strCheckOutDate) :
                new ObjectParameter("strCheckOutDate", typeof(string));
    
            var intHoldIgnoreParameter = intHoldIgnore.HasValue ?
                new ObjectParameter("intHoldIgnore", intHoldIgnore) :
                new ObjectParameter("intHoldIgnore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHECKOUT", strPatronCodeParameter, intUserIDParameter, intLoanModeParameter, strCopyNumberParameter, strDueDateParameter, strCheckOutDateParameter, intHoldIgnoreParameter, intOutValue, intOutID);
        }
    
        public virtual int SP_CHECKPATRONCODE(Nullable<int> intUserID, string strPatronCode, Nullable<int> intLoanMode, ObjectParameter intOutPut)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intLoanModeParameter = intLoanMode.HasValue ?
                new ObjectParameter("intLoanMode", intLoanMode) :
                new ObjectParameter("intLoanMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CHECKPATRONCODE", intUserIDParameter, strPatronCodeParameter, intLoanModeParameter, intOutPut);
        }
    
        public virtual int SP_CIR_CARD_FORM_DELETE(Nullable<int> intId)
        {
            var intIdParameter = intId.HasValue ?
                new ObjectParameter("intId", intId) :
                new ObjectParameter("intId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_CARD_FORM_DELETE", intIdParameter);
        }
    
        public virtual int SP_CIR_CARD_FORM_INSERT(string strTemplateName, string strCreatName, string strContent)
        {
            var strTemplateNameParameter = strTemplateName != null ?
                new ObjectParameter("strTemplateName", strTemplateName) :
                new ObjectParameter("strTemplateName", typeof(string));
    
            var strCreatNameParameter = strCreatName != null ?
                new ObjectParameter("strCreatName", strCreatName) :
                new ObjectParameter("strCreatName", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_CARD_FORM_INSERT", strTemplateNameParameter, strCreatNameParameter, strContentParameter);
        }
    
        public virtual int SP_CIR_CARD_FORM_UPDATE(Nullable<int> intId, string strTemplateName, string strModifyName, string strContent)
        {
            var intIdParameter = intId.HasValue ?
                new ObjectParameter("intId", intId) :
                new ObjectParameter("intId", typeof(int));
    
            var strTemplateNameParameter = strTemplateName != null ?
                new ObjectParameter("strTemplateName", strTemplateName) :
                new ObjectParameter("strTemplateName", typeof(string));
    
            var strModifyNameParameter = strModifyName != null ?
                new ObjectParameter("strModifyName", strModifyName) :
                new ObjectParameter("strModifyName", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_CARD_FORM_UPDATE", intIdParameter, strTemplateNameParameter, strModifyNameParameter, strContentParameter);
        }
    
        public virtual ObjectResult<SP_CIR_CHECK_DUEDATE_Result> SP_CIR_CHECK_DUEDATE(Nullable<int> intLocationID, string strDueDate)
        {
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_CHECK_DUEDATE_Result>("SP_CIR_CHECK_DUEDATE", intLocationIDParameter, strDueDateParameter);
        }
    
        public virtual int SP_CIR_DIC_COLLEGE_DELETE(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_COLLEGE_DELETE", intIDParameter);
        }
    
        public virtual int SP_CIR_DIC_COLLEGE_IMPORT(string strCollege, ObjectParameter intCollegeID)
        {
            var strCollegeParameter = strCollege != null ?
                new ObjectParameter("strCollege", strCollege) :
                new ObjectParameter("strCollege", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_COLLEGE_IMPORT", strCollegeParameter, intCollegeID);
        }
    
        public virtual int SP_CIR_DIC_COUNTRY_INSERT(string strCountry, ObjectParameter intCountryID, ObjectParameter intRetval)
        {
            var strCountryParameter = strCountry != null ?
                new ObjectParameter("strCountry", strCountry) :
                new ObjectParameter("strCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_COUNTRY_INSERT", strCountryParameter, intCountryID, intRetval);
        }
    
        public virtual int SP_CIR_DIC_EDUCATION_IMPORT(string strEducationLevel, ObjectParameter intEducationID)
        {
            var strEducationLevelParameter = strEducationLevel != null ?
                new ObjectParameter("strEducationLevel", strEducationLevel) :
                new ObjectParameter("strEducationLevel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_EDUCATION_IMPORT", strEducationLevelParameter, intEducationID);
        }
    
        public virtual int SP_CIR_DIC_ETHNIC_DELETE(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_ETHNIC_DELETE", intIDParameter);
        }
    
        public virtual int SP_CIR_DIC_ETHNIC_IMPORT(string strEthnic, ObjectParameter intEthnicID)
        {
            var strEthnicParameter = strEthnic != null ?
                new ObjectParameter("strEthnic", strEthnic) :
                new ObjectParameter("strEthnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_ETHNIC_IMPORT", strEthnicParameter, intEthnicID);
        }
    
        public virtual int SP_CIR_DIC_FACULTY_DELETE(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_FACULTY_DELETE", intIDParameter);
        }
    
        public virtual ObjectResult<SP_CIR_DIC_FACULTY_SELECTCOLID_Result> SP_CIR_DIC_FACULTY_SELECTCOLID(Nullable<int> intCollegeID)
        {
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_DIC_FACULTY_SELECTCOLID_Result>("SP_CIR_DIC_FACULTY_SELECTCOLID", intCollegeIDParameter);
        }
    
        public virtual int SP_CIR_DIC_OCCUPATION_DELETE(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_OCCUPATION_DELETE", intIDParameter);
        }
    
        public virtual int SP_CIR_DIC_OCCUPATION_IMPORT(string strOccupation, ObjectParameter intOccupationID)
        {
            var strOccupationParameter = strOccupation != null ?
                new ObjectParameter("strOccupation", strOccupation) :
                new ObjectParameter("strOccupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_OCCUPATION_IMPORT", strOccupationParameter, intOccupationID);
        }
    
        public virtual int SP_CIR_DIC_PROVINCE_DELETE(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_PROVINCE_DELETE", intIDParameter);
        }
    
        public virtual int SP_CIR_DIC_PROVINCE_IMPORT(string strProvince, ObjectParameter intProvinceID)
        {
            var strProvinceParameter = strProvince != null ?
                new ObjectParameter("strProvince", strProvince) :
                new ObjectParameter("strProvince", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_PROVINCE_IMPORT", strProvinceParameter, intProvinceID);
        }
    
        public virtual int SP_CIR_DIC_PROVINCE_INSERT_GETID(string strProvince, ObjectParameter intProvinceID)
        {
            var strProvinceParameter = strProvince != null ?
                new ObjectParameter("strProvince", strProvince) :
                new ObjectParameter("strProvince", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_DIC_PROVINCE_INSERT_GETID", strProvinceParameter, intProvinceID);
        }
    
        public virtual ObjectResult<SP_CIR_FACULTY_SELECT_BYCID_Result> SP_CIR_FACULTY_SELECT_BYCID(Nullable<int> intVal)
        {
            var intValParameter = intVal.HasValue ?
                new ObjectParameter("intVal", intVal) :
                new ObjectParameter("intVal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_FACULTY_SELECT_BYCID_Result>("SP_CIR_FACULTY_SELECT_BYCID", intValParameter);
        }
    
        public virtual int SP_CIR_FINE_DEL(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_FINE_DEL", intIDParameter);
        }
    
        public virtual int SP_CIR_FINE_INS(Nullable<int> intType, string strPatronCode, Nullable<decimal> mnyAmount, string strCurrency, Nullable<double> fltRate, string strCreatedDate, string strReason, Nullable<int> intCheckPatronDept, ObjectParameter intOutPut)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var fltRateParameter = fltRate.HasValue ?
                new ObjectParameter("fltRate", fltRate) :
                new ObjectParameter("fltRate", typeof(double));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var intCheckPatronDeptParameter = intCheckPatronDept.HasValue ?
                new ObjectParameter("intCheckPatronDept", intCheckPatronDept) :
                new ObjectParameter("intCheckPatronDept", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_FINE_INS", intTypeParameter, strPatronCodeParameter, mnyAmountParameter, strCurrencyParameter, fltRateParameter, strCreatedDateParameter, strReasonParameter, intCheckPatronDeptParameter, intOutPut);
        }
    
        public virtual int SP_CIR_FINE_SEL(string strPatronCode, Nullable<byte> intMonth, Nullable<int> intYear, Nullable<int> intType, ObjectParameter mnySettled, ObjectParameter mnyUnSettled, ObjectParameter mnyRemain)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(byte));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_FINE_SEL", strPatronCodeParameter, intMonthParameter, intYearParameter, intTypeParameter, mnySettled, mnyUnSettled, mnyRemain);
        }
    
        public virtual int SP_CIR_FINE_UPD(Nullable<int> intType, Nullable<int> intID, string strPatronCode, Nullable<decimal> mnyAmount, string strCurrency, Nullable<double> fltRate, string strCreatedDate, string strReason, ObjectParameter intOutPut)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var fltRateParameter = fltRate.HasValue ?
                new ObjectParameter("fltRate", fltRate) :
                new ObjectParameter("fltRate", typeof(double));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_FINE_UPD", intTypeParameter, intIDParameter, strPatronCodeParameter, mnyAmountParameter, strCurrencyParameter, fltRateParameter, strCreatedDateParameter, strReasonParameter, intOutPut);
        }
    
        public virtual int SP_CIR_GET_RENEW(Nullable<int> intUserID, Nullable<short> intType, string strCodeVal)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(short));
    
            var strCodeValParameter = strCodeVal != null ?
                new ObjectParameter("strCodeVal", strCodeVal) :
                new ObjectParameter("strCodeVal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_GET_RENEW", intUserIDParameter, intTypeParameter, strCodeValParameter);
        }
    
        public virtual int SP_CIR_GET_RESERVATION_INFOR(string strTitle, string strPatron, string strCreatedDateFrom, string strCreatedDateTo, string strTimeOutDateFrom, string strTimeOutDateTo, Nullable<int> intUserID, Nullable<int> intReserv)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strPatronParameter = strPatron != null ?
                new ObjectParameter("strPatron", strPatron) :
                new ObjectParameter("strPatron", typeof(string));
    
            var strCreatedDateFromParameter = strCreatedDateFrom != null ?
                new ObjectParameter("strCreatedDateFrom", strCreatedDateFrom) :
                new ObjectParameter("strCreatedDateFrom", typeof(string));
    
            var strCreatedDateToParameter = strCreatedDateTo != null ?
                new ObjectParameter("strCreatedDateTo", strCreatedDateTo) :
                new ObjectParameter("strCreatedDateTo", typeof(string));
    
            var strTimeOutDateFromParameter = strTimeOutDateFrom != null ?
                new ObjectParameter("strTimeOutDateFrom", strTimeOutDateFrom) :
                new ObjectParameter("strTimeOutDateFrom", typeof(string));
    
            var strTimeOutDateToParameter = strTimeOutDateTo != null ?
                new ObjectParameter("strTimeOutDateTo", strTimeOutDateTo) :
                new ObjectParameter("strTimeOutDateTo", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intReservParameter = intReserv.HasValue ?
                new ObjectParameter("intReserv", intReserv) :
                new ObjectParameter("intReserv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_GET_RESERVATION_INFOR", strTitleParameter, strPatronParameter, strCreatedDateFromParameter, strCreatedDateToParameter, strTimeOutDateFromParameter, strTimeOutDateToParameter, intUserIDParameter, intReservParameter);
        }
    
        public virtual int SP_CIR_HOLDING_CREATE(string strCardNo, string strPassWord, string strValidDate, string strCopyNumber, ObjectParameter intRET)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            var strPassWordParameter = strPassWord != null ?
                new ObjectParameter("strPassWord", strPassWord) :
                new ObjectParameter("strPassWord", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_HOLDING_CREATE", strCardNoParameter, strPassWordParameter, strValidDateParameter, strCopyNumberParameter, intRET);
        }
    
        public virtual int SP_CIR_HOLDING_DELETE(string strCardNo, string strPassWord, string strCopyNumber, ObjectParameter intRET)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            var strPassWordParameter = strPassWord != null ?
                new ObjectParameter("strPassWord", strPassWord) :
                new ObjectParameter("strPassWord", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_HOLDING_DELETE", strCardNoParameter, strPassWordParameter, strCopyNumberParameter, intRET);
        }
    
        public virtual ObjectResult<SP_CIR_HOLDING_SEL_Result> SP_CIR_HOLDING_SEL(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_HOLDING_SEL_Result>("SP_CIR_HOLDING_SEL", intItemIDParameter);
        }
    
        public virtual int SP_CIR_HOLDING_UPDATE(string strCardNo, string strPassWord, string strValidDate, string strCopyNumber, ObjectParameter intRET)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            var strPassWordParameter = strPassWord != null ?
                new ObjectParameter("strPassWord", strPassWord) :
                new ObjectParameter("strPassWord", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_HOLDING_UPDATE", strCardNoParameter, strPassWordParameter, strValidDateParameter, strCopyNumberParameter, intRET);
        }
    
        public virtual int SP_CIR_LOAN_HISTORY_SEL(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_LOAN_HISTORY_SEL", strItemIDsParameter);
        }
    
        public virtual int SP_CIR_LOAN_TYPE_SEL(string strID, ObjectParameter strSQL)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_LOAN_TYPE_SEL", strIDParameter, strSQL);
        }
    
        public virtual int SP_CIR_OVERDUELIST_GETINFOR(Nullable<int> intUserID, string strPatronIDs, string whereCondition)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            var whereConditionParameter = whereCondition != null ?
                new ObjectParameter("whereCondition", whereCondition) :
                new ObjectParameter("whereCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_OVERDUELIST_GETINFOR", intUserIDParameter, strPatronIDsParameter, whereConditionParameter);
        }
    
        public virtual int SP_CIR_OVERDUELIST_SEL(string strPatronIDs)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_OVERDUELIST_SEL", strPatronIDsParameter);
        }
    
        public virtual int SP_CIR_OVERDUELIST_SEL_AUTHORITY(Nullable<int> intUserID, string strPatronIDs)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_OVERDUELIST_SEL_AUTHORITY", intUserIDParameter, strPatronIDsParameter);
        }
    
        public virtual int SP_CIR_OVERDUEPATRON_SEL_AUTHORITY(Nullable<int> intUserID, string strModeSelect, string strLogic, Nullable<int> intDueTime, string strPatronIDs)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strModeSelectParameter = strModeSelect != null ?
                new ObjectParameter("strModeSelect", strModeSelect) :
                new ObjectParameter("strModeSelect", typeof(string));
    
            var strLogicParameter = strLogic != null ?
                new ObjectParameter("strLogic", strLogic) :
                new ObjectParameter("strLogic", typeof(string));
    
            var intDueTimeParameter = intDueTime.HasValue ?
                new ObjectParameter("intDueTime", intDueTime) :
                new ObjectParameter("intDueTime", typeof(int));
    
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_OVERDUEPATRON_SEL_AUTHORITY", intUserIDParameter, strModeSelectParameter, strLogicParameter, intDueTimeParameter, strPatronIDsParameter);
        }
    
        public virtual int SP_CIR_OVERDUEPATRON_SELECT(string strModeSelect, string strLogic, Nullable<int> intDueTime, string strPatronIDs)
        {
            var strModeSelectParameter = strModeSelect != null ?
                new ObjectParameter("strModeSelect", strModeSelect) :
                new ObjectParameter("strModeSelect", typeof(string));
    
            var strLogicParameter = strLogic != null ?
                new ObjectParameter("strLogic", strLogic) :
                new ObjectParameter("strLogic", typeof(string));
    
            var intDueTimeParameter = intDueTime.HasValue ?
                new ObjectParameter("intDueTime", intDueTime) :
                new ObjectParameter("intDueTime", typeof(int));
    
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_OVERDUEPATRON_SELECT", strModeSelectParameter, strLogicParameter, intDueTimeParameter, strPatronIDsParameter);
        }
    
        public virtual int SP_CIR_PATRON_BARCODE(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_BARCODE", strIDsParameter);
        }
    
        public virtual int SP_CIR_PATRON_BLOCK_DELETE(string strIDSource)
        {
            var strIDSourceParameter = strIDSource != null ?
                new ObjectParameter("strIDSource", strIDSource) :
                new ObjectParameter("strIDSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_BLOCK_DELETE", strIDSourceParameter);
        }
    
        public virtual int SP_CIR_PATRON_BLOCK_INSERT(string strCodePatron, string strFromDate, Nullable<int> intNumberOfDays)
        {
            var strCodePatronParameter = strCodePatron != null ?
                new ObjectParameter("strCodePatron", strCodePatron) :
                new ObjectParameter("strCodePatron", typeof(string));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var intNumberOfDaysParameter = intNumberOfDays.HasValue ?
                new ObjectParameter("intNumberOfDays", intNumberOfDays) :
                new ObjectParameter("intNumberOfDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_BLOCK_INSERT", strCodePatronParameter, strFromDateParameter, intNumberOfDaysParameter);
        }
    
        public virtual int SP_CIR_PATRON_BLOCK_UPDATE(string strIDSource, Nullable<int> intPatronID, string strFromDate, Nullable<int> intNumberOfDays)
        {
            var strIDSourceParameter = strIDSource != null ?
                new ObjectParameter("strIDSource", strIDSource) :
                new ObjectParameter("strIDSource", typeof(string));
    
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var intNumberOfDaysParameter = intNumberOfDays.HasValue ?
                new ObjectParameter("intNumberOfDays", intNumberOfDays) :
                new ObjectParameter("intNumberOfDays", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_BLOCK_UPDATE", strIDSourceParameter, intPatronIDParameter, strFromDateParameter, intNumberOfDaysParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_GET_FACULTY_Result> SP_CIR_PATRON_GET_FACULTY(Nullable<int> intCollegeID, Nullable<int> intFacultyID)
        {
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            var intFacultyIDParameter = intFacultyID.HasValue ?
                new ObjectParameter("intFacultyID", intFacultyID) :
                new ObjectParameter("intFacultyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_GET_FACULTY_Result>("SP_CIR_PATRON_GET_FACULTY", intCollegeIDParameter, intFacultyIDParameter);
        }
    
        public virtual int SP_CIR_PATRON_GROUP_IMPORT(string strName, Nullable<int> intInLibraryQuota, Nullable<int> intLoanQuota, Nullable<int> intHoldQuota, Nullable<int> intHoldTurnTimeOut, Nullable<int> intPriority, Nullable<int> intILLQuota, Nullable<int> intAccessLevel, string strStoreIDs, ObjectParameter intPatronGroupID)
        {
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var intInLibraryQuotaParameter = intInLibraryQuota.HasValue ?
                new ObjectParameter("intInLibraryQuota", intInLibraryQuota) :
                new ObjectParameter("intInLibraryQuota", typeof(int));
    
            var intLoanQuotaParameter = intLoanQuota.HasValue ?
                new ObjectParameter("intLoanQuota", intLoanQuota) :
                new ObjectParameter("intLoanQuota", typeof(int));
    
            var intHoldQuotaParameter = intHoldQuota.HasValue ?
                new ObjectParameter("intHoldQuota", intHoldQuota) :
                new ObjectParameter("intHoldQuota", typeof(int));
    
            var intHoldTurnTimeOutParameter = intHoldTurnTimeOut.HasValue ?
                new ObjectParameter("intHoldTurnTimeOut", intHoldTurnTimeOut) :
                new ObjectParameter("intHoldTurnTimeOut", typeof(int));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(int));
    
            var intILLQuotaParameter = intILLQuota.HasValue ?
                new ObjectParameter("intILLQuota", intILLQuota) :
                new ObjectParameter("intILLQuota", typeof(int));
    
            var intAccessLevelParameter = intAccessLevel.HasValue ?
                new ObjectParameter("intAccessLevel", intAccessLevel) :
                new ObjectParameter("intAccessLevel", typeof(int));
    
            var strStoreIDsParameter = strStoreIDs != null ?
                new ObjectParameter("strStoreIDs", strStoreIDs) :
                new ObjectParameter("strStoreIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_GROUP_IMPORT", strNameParameter, intInLibraryQuotaParameter, intLoanQuotaParameter, intHoldQuotaParameter, intHoldTurnTimeOutParameter, intPriorityParameter, intILLQuotaParameter, intAccessLevelParameter, strStoreIDsParameter, intPatronGroupID);
        }
    
        public virtual int SP_CIR_PATRON_OA_DELETE(Nullable<int> intPatronID)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_OA_DELETE", intPatronIDParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_OA_SELECT_Result> SP_CIR_PATRON_OA_SELECT(string strPatronIDs)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_OA_SELECT_Result>("SP_CIR_PATRON_OA_SELECT", strPatronIDsParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_SELECT_QUEUE_Result> SP_CIR_PATRON_SELECT_QUEUE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_SELECT_QUEUE_Result>("SP_CIR_PATRON_SELECT_QUEUE");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CIR_PATRON_STARTAGE(Nullable<int> intFromAge, Nullable<int> intToAge)
        {
            var intFromAgeParameter = intFromAge.HasValue ?
                new ObjectParameter("intFromAge", intFromAge) :
                new ObjectParameter("intFromAge", typeof(int));
    
            var intToAgeParameter = intToAge.HasValue ?
                new ObjectParameter("intToAge", intToAge) :
                new ObjectParameter("intToAge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CIR_PATRON_STARTAGE", intFromAgeParameter, intToAgeParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STARTGRP_Result> SP_CIR_PATRON_STARTGRP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STARTGRP_Result>("SP_CIR_PATRON_STARTGRP");
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATCLASS_Result> SP_CIR_PATRON_STATCLASS(Nullable<int> intFacultyID)
        {
            var intFacultyIDParameter = intFacultyID.HasValue ?
                new ObjectParameter("intFacultyID", intFacultyID) :
                new ObjectParameter("intFacultyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATCLASS_Result>("SP_CIR_PATRON_STATCLASS", intFacultyIDParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATCOLLEGE_Result> SP_CIR_PATRON_STATCOLLEGE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATCOLLEGE_Result>("SP_CIR_PATRON_STATCOLLEGE");
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATCREATEDDATE_Result> SP_CIR_PATRON_STATCREATEDDATE(Nullable<int> intCreatedDate)
        {
            var intCreatedDateParameter = intCreatedDate.HasValue ?
                new ObjectParameter("intCreatedDate", intCreatedDate) :
                new ObjectParameter("intCreatedDate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATCREATEDDATE_Result>("SP_CIR_PATRON_STATCREATEDDATE", intCreatedDateParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATEXPIREDDATE_Result> SP_CIR_PATRON_STATEXPIREDDATE(Nullable<int> intExpiredDate)
        {
            var intExpiredDateParameter = intExpiredDate.HasValue ?
                new ObjectParameter("intExpiredDate", intExpiredDate) :
                new ObjectParameter("intExpiredDate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATEXPIREDDATE_Result>("SP_CIR_PATRON_STATEXPIREDDATE", intExpiredDateParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATFACULTY_Result> SP_CIR_PATRON_STATFACULTY(Nullable<int> intCollegeID)
        {
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATFACULTY_Result>("SP_CIR_PATRON_STATFACULTY", intCollegeIDParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATGRADE_Result> SP_CIR_PATRON_STATGRADE(Nullable<int> intCollegeID)
        {
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATGRADE_Result>("SP_CIR_PATRON_STATGRADE", intCollegeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CIR_PATRON_STATISTIC(string strTypeStatistic, Nullable<int> intStartVal, Nullable<int> intEndVal, string strOccupationID)
        {
            var strTypeStatisticParameter = strTypeStatistic != null ?
                new ObjectParameter("strTypeStatistic", strTypeStatistic) :
                new ObjectParameter("strTypeStatistic", typeof(string));
    
            var intStartValParameter = intStartVal.HasValue ?
                new ObjectParameter("intStartVal", intStartVal) :
                new ObjectParameter("intStartVal", typeof(int));
    
            var intEndValParameter = intEndVal.HasValue ?
                new ObjectParameter("intEndVal", intEndVal) :
                new ObjectParameter("intEndVal", typeof(int));
    
            var strOccupationIDParameter = strOccupationID != null ?
                new ObjectParameter("strOccupationID", strOccupationID) :
                new ObjectParameter("strOccupationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CIR_PATRON_STATISTIC", strTypeStatisticParameter, intStartValParameter, intEndValParameter, strOccupationIDParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATISTIC_TOP20_Result> SP_CIR_PATRON_STATISTIC_TOP20(string strTypeStatistic)
        {
            var strTypeStatisticParameter = strTypeStatistic != null ?
                new ObjectParameter("strTypeStatistic", strTypeStatistic) :
                new ObjectParameter("strTypeStatistic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATISTIC_TOP20_Result>("SP_CIR_PATRON_STATISTIC_TOP20", strTypeStatisticParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_STATOCCUPATION_Result> SP_CIR_PATRON_STATOCCUPATION(string strOccupationIDs)
        {
            var strOccupationIDsParameter = strOccupationIDs != null ?
                new ObjectParameter("strOccupationIDs", strOccupationIDs) :
                new ObjectParameter("strOccupationIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_STATOCCUPATION_Result>("SP_CIR_PATRON_STATOCCUPATION", strOccupationIDsParameter);
        }
    
        public virtual int SP_CIR_PATRON_UNI_DELETE(Nullable<int> intPatronID)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_UNI_DELETE", intPatronIDParameter);
        }
    
        public virtual ObjectResult<SP_CIR_PATRON_UNI_SELECT_Result> SP_CIR_PATRON_UNI_SELECT(string strPatronIDs)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIR_PATRON_UNI_SELECT_Result>("SP_CIR_PATRON_UNI_SELECT", strPatronIDsParameter);
        }
    
        public virtual int SP_CIR_PATRON_UPDATE_QUEUE(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PATRON_UPDATE_QUEUE", strIDsParameter);
        }
    
        public virtual int SP_CIR_PHOTO_PRICE_DEL(string strTypeIDs)
        {
            var strTypeIDsParameter = strTypeIDs != null ?
                new ObjectParameter("strTypeIDs", strTypeIDs) :
                new ObjectParameter("strTypeIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PHOTO_PRICE_DEL", strTypeIDsParameter);
        }
    
        public virtual int SP_CIR_PHOTO_PRICE_INS(string strTypeName, Nullable<decimal> monPricePerPage, ObjectParameter intRetVal)
        {
            var strTypeNameParameter = strTypeName != null ?
                new ObjectParameter("strTypeName", strTypeName) :
                new ObjectParameter("strTypeName", typeof(string));
    
            var monPricePerPageParameter = monPricePerPage.HasValue ?
                new ObjectParameter("monPricePerPage", monPricePerPage) :
                new ObjectParameter("monPricePerPage", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PHOTO_PRICE_INS", strTypeNameParameter, monPricePerPageParameter, intRetVal);
        }
    
        public virtual int SP_CIR_PHOTO_PRICE_SEL(string strTypeIDs)
        {
            var strTypeIDsParameter = strTypeIDs != null ?
                new ObjectParameter("strTypeIDs", strTypeIDs) :
                new ObjectParameter("strTypeIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PHOTO_PRICE_SEL", strTypeIDsParameter);
        }
    
        public virtual int SP_CIR_PHOTO_PRICE_UPD(Nullable<int> intTypeID, string strTypeName, Nullable<decimal> monPricePerPage, ObjectParameter intRetVal)
        {
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            var strTypeNameParameter = strTypeName != null ?
                new ObjectParameter("strTypeName", strTypeName) :
                new ObjectParameter("strTypeName", typeof(string));
    
            var monPricePerPageParameter = monPricePerPage.HasValue ?
                new ObjectParameter("monPricePerPage", monPricePerPage) :
                new ObjectParameter("monPricePerPage", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PHOTO_PRICE_UPD", intTypeIDParameter, strTypeNameParameter, monPricePerPageParameter, intRetVal);
        }
    
        public virtual int SP_CIR_PHOTO_REQUEST_SEL(Nullable<int> intID, string strCopyNumber, Nullable<byte> intDone, string strFromDate, string strToDate, string strInputer, string strPatronCode, Nullable<int> intUserID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intDoneParameter = intDone.HasValue ?
                new ObjectParameter("intDone", intDone) :
                new ObjectParameter("intDone", typeof(byte));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PHOTO_REQUEST_SEL", intIDParameter, strCopyNumberParameter, intDoneParameter, strFromDateParameter, strToDateParameter, strInputerParameter, strPatronCodeParameter, intUserIDParameter);
        }
    
        public virtual int SP_CIR_PHOTOCOPY_REQUEST_INS(Nullable<int> intTypeID, Nullable<decimal> monAmount, Nullable<decimal> monPaidAmount, string strCopyNumber, string strInputer, Nullable<byte> intDone, Nullable<int> intPageCount, string strPageDetail, string strPatronCode, Nullable<int> intUserID, string strCreateDate)
        {
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            var monAmountParameter = monAmount.HasValue ?
                new ObjectParameter("monAmount", monAmount) :
                new ObjectParameter("monAmount", typeof(decimal));
    
            var monPaidAmountParameter = monPaidAmount.HasValue ?
                new ObjectParameter("monPaidAmount", monPaidAmount) :
                new ObjectParameter("monPaidAmount", typeof(decimal));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var intDoneParameter = intDone.HasValue ?
                new ObjectParameter("intDone", intDone) :
                new ObjectParameter("intDone", typeof(byte));
    
            var intPageCountParameter = intPageCount.HasValue ?
                new ObjectParameter("intPageCount", intPageCount) :
                new ObjectParameter("intPageCount", typeof(int));
    
            var strPageDetailParameter = strPageDetail != null ?
                new ObjectParameter("strPageDetail", strPageDetail) :
                new ObjectParameter("strPageDetail", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strCreateDateParameter = strCreateDate != null ?
                new ObjectParameter("strCreateDate", strCreateDate) :
                new ObjectParameter("strCreateDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PHOTOCOPY_REQUEST_INS", intTypeIDParameter, monAmountParameter, monPaidAmountParameter, strCopyNumberParameter, strInputerParameter, intDoneParameter, intPageCountParameter, strPageDetailParameter, strPatronCodeParameter, intUserIDParameter, strCreateDateParameter);
        }
    
        public virtual int SP_CIR_PHOTOCOPY_REQUEST_UPD(Nullable<int> intID, Nullable<int> intTypeID, Nullable<decimal> monAmount, Nullable<decimal> monPaidAmount, string strCopyNumber, string strInputer, Nullable<byte> intDone, Nullable<int> intPageCount, string strPageDetail, string strPatronCode, string strCreatedDate)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intTypeIDParameter = intTypeID.HasValue ?
                new ObjectParameter("intTypeID", intTypeID) :
                new ObjectParameter("intTypeID", typeof(int));
    
            var monAmountParameter = monAmount.HasValue ?
                new ObjectParameter("monAmount", monAmount) :
                new ObjectParameter("monAmount", typeof(decimal));
    
            var monPaidAmountParameter = monPaidAmount.HasValue ?
                new ObjectParameter("monPaidAmount", monPaidAmount) :
                new ObjectParameter("monPaidAmount", typeof(decimal));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var intDoneParameter = intDone.HasValue ?
                new ObjectParameter("intDone", intDone) :
                new ObjectParameter("intDone", typeof(byte));
    
            var intPageCountParameter = intPageCount.HasValue ?
                new ObjectParameter("intPageCount", intPageCount) :
                new ObjectParameter("intPageCount", typeof(int));
    
            var strPageDetailParameter = strPageDetail != null ?
                new ObjectParameter("strPageDetail", strPageDetail) :
                new ObjectParameter("strPageDetail", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PHOTOCOPY_REQUEST_UPD", intIDParameter, intTypeIDParameter, monAmountParameter, monPaidAmountParameter, strCopyNumberParameter, strInputerParameter, intDoneParameter, intPageCountParameter, strPageDetailParameter, strPatronCodeParameter, strCreatedDateParameter);
        }
    
        public virtual int SP_CIR_PRINTED_CARD_DELETE(string strID, ObjectParameter strSQL)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PRINTED_CARD_DELETE", strIDParameter, strSQL);
        }
    
        public virtual int SP_CIR_PRINTED_CARD_SELECT(string strID, ObjectParameter strSQL)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PRINTED_CARD_SELECT", strIDParameter, strSQL);
        }
    
        public virtual int SP_CIR_PRINTED_CARD_UPDATE(string strID, Nullable<int> intPatronID, Nullable<int> intTemplateID, Nullable<int> intIssueLibraryID, ObjectParameter strSQL)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var intIssueLibraryIDParameter = intIssueLibraryID.HasValue ?
                new ObjectParameter("intIssueLibraryID", intIssueLibraryID) :
                new ObjectParameter("intIssueLibraryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_PRINTED_CARD_UPDATE", strIDParameter, intPatronIDParameter, intTemplateIDParameter, intIssueLibraryIDParameter, strSQL);
        }
    
        public virtual int SP_CIR_RENEW_PATRONCARD(string strPatronCode, string strNewDate)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strNewDateParameter = strNewDate != null ?
                new ObjectParameter("strNewDate", strNewDate) :
                new ObjectParameter("strNewDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_RENEW_PATRONCARD", strPatronCodeParameter, strNewDateParameter);
        }
    
        public virtual int SP_CIR_RESERVATION_DEL(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_RESERVATION_DEL", intIDParameter);
        }
    
        public virtual int SP_CIR_STAT_QUICKVIEW(Nullable<int> intOption, Nullable<int> intUserID)
        {
            var intOptionParameter = intOption.HasValue ?
                new ObjectParameter("intOption", intOption) :
                new ObjectParameter("intOption", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_STAT_QUICKVIEW", intOptionParameter, intUserIDParameter);
        }
    
        public virtual int SP_CIR_SYS_TEMPLATE_DELETE(Nullable<int> intID, Nullable<int> intType)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_SYS_TEMPLATE_DELETE", intIDParameter, intTypeParameter);
        }
    
        public virtual int SP_CIR_SYS_TEMPLATE_INSERT(string strTitle, string strCreator, string strModifier, string strContent, Nullable<int> intType)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_SYS_TEMPLATE_INSERT", strTitleParameter, strCreatorParameter, strModifierParameter, strContentParameter, intTypeParameter);
        }
    
        public virtual int SP_CIR_SYS_TEMPLATE_SELECT(Nullable<int> intTemplateID, Nullable<int> intTemplateType)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_SYS_TEMPLATE_SELECT", intTemplateIDParameter, intTemplateTypeParameter);
        }
    
        public virtual int SP_CIR_SYS_TEMPLATE_UPDATE(Nullable<int> intID, string strTitle, string strModifier, string strContent, Nullable<int> intType)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIR_SYS_TEMPLATE_UPDATE", intIDParameter, strTitleParameter, strModifierParameter, strContentParameter, intTypeParameter);
        }
    
        public virtual int SP_CIRCULATION_CIRLOAN_UPDATE(string dueDate, Nullable<int> intIDCirLoan, Nullable<int> itemIDCirHold, ObjectParameter strMsg)
        {
            var dueDateParameter = dueDate != null ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(string));
    
            var intIDCirLoanParameter = intIDCirLoan.HasValue ?
                new ObjectParameter("intIDCirLoan", intIDCirLoan) :
                new ObjectParameter("intIDCirLoan", typeof(int));
    
            var itemIDCirHoldParameter = itemIDCirHold.HasValue ?
                new ObjectParameter("itemIDCirHold", itemIDCirHold) :
                new ObjectParameter("itemIDCirHold", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIRCULATION_CIRLOAN_UPDATE", dueDateParameter, intIDCirLoanParameter, itemIDCirHoldParameter, strMsg);
        }
    
        public virtual int SP_CIRCULATION_GETALLINFOFORRENEW(Nullable<int> intUser, Nullable<int> intType, string strCode, Nullable<int> intCirloanID)
        {
            var intUserParameter = intUser.HasValue ?
                new ObjectParameter("intUser", intUser) :
                new ObjectParameter("intUser", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var intCirloanIDParameter = intCirloanID.HasValue ?
                new ObjectParameter("intCirloanID", intCirloanID) :
                new ObjectParameter("intCirloanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIRCULATION_GETALLINFOFORRENEW", intUserParameter, intTypeParameter, strCodeParameter, intCirloanIDParameter);
        }
    
        public virtual ObjectResult<SP_CIRCULATION_GETCALENDERSERVATION_Result> SP_CIRCULATION_GETCALENDERSERVATION(Nullable<int> intType, string dueDate, Nullable<int> intLocationID)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var dueDateParameter = dueDate != null ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIRCULATION_GETCALENDERSERVATION_Result>("SP_CIRCULATION_GETCALENDERSERVATION", intTypeParameter, dueDateParameter, intLocationIDParameter);
        }
    
        public virtual int SP_CIRCULATION_OVERDUEPATRON_SELECT(string strModeSelect, string strLogic, Nullable<int> intDueTime, string strPatronIDs)
        {
            var strModeSelectParameter = strModeSelect != null ?
                new ObjectParameter("strModeSelect", strModeSelect) :
                new ObjectParameter("strModeSelect", typeof(string));
    
            var strLogicParameter = strLogic != null ?
                new ObjectParameter("strLogic", strLogic) :
                new ObjectParameter("strLogic", typeof(string));
    
            var intDueTimeParameter = intDueTime.HasValue ?
                new ObjectParameter("intDueTime", intDueTime) :
                new ObjectParameter("intDueTime", typeof(int));
    
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIRCULATION_OVERDUEPATRON_SELECT", strModeSelectParameter, strLogicParameter, intDueTimeParameter, strPatronIDsParameter);
        }
    
        public virtual ObjectResult<SP_CIRCULATION_THONGKE_Result> SP_CIRCULATION_THONGKE(string intType)
        {
            var intTypeParameter = intType != null ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CIRCULATION_THONGKE_Result>("SP_CIRCULATION_THONGKE", intTypeParameter);
        }
    
        public virtual int SP_CIRCULATION_TIME_STATISTIC(string strStatisticType, Nullable<int> intStatus, string strYear, string strMonth)
        {
            var strStatisticTypeParameter = strStatisticType != null ?
                new ObjectParameter("strStatisticType", strStatisticType) :
                new ObjectParameter("strStatisticType", typeof(string));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var strYearParameter = strYear != null ?
                new ObjectParameter("strYear", strYear) :
                new ObjectParameter("strYear", typeof(string));
    
            var strMonthParameter = strMonth != null ?
                new ObjectParameter("strMonth", strMonth) :
                new ObjectParameter("strMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CIRCULATION_TIME_STATISTIC", strStatisticTypeParameter, intStatusParameter, strYearParameter, strMonthParameter);
        }
    
        public virtual int SP_COMMON_CREATE_REFERENCE(Nullable<int> intUserID, Nullable<int> intModuleID, string strRefIDs)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intModuleIDParameter = intModuleID.HasValue ?
                new ObjectParameter("intModuleID", intModuleID) :
                new ObjectParameter("intModuleID", typeof(int));
    
            var strRefIDsParameter = strRefIDs != null ?
                new ObjectParameter("strRefIDs", strRefIDs) :
                new ObjectParameter("strRefIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COMMON_CREATE_REFERENCE", intUserIDParameter, intModuleIDParameter, strRefIDsParameter);
        }
    
        public virtual ObjectResult<SP_COMMON_GET_PROVINCE_Result> SP_COMMON_GET_PROVINCE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_COMMON_GET_PROVINCE_Result>("SP_COMMON_GET_PROVINCE");
        }
    
        public virtual ObjectResult<SP_COMMON_GET_REFERENCE_Result> SP_COMMON_GET_REFERENCE(Nullable<int> intUserID, Nullable<int> intModuleID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intModuleIDParameter = intModuleID.HasValue ?
                new ObjectParameter("intModuleID", intModuleID) :
                new ObjectParameter("intModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_COMMON_GET_REFERENCE_Result>("SP_COMMON_GET_REFERENCE", intUserIDParameter, intModuleIDParameter);
        }
    
        public virtual int SP_COMPLETE_HOLDING_CHECKING(Nullable<int> lngTransactionID, Nullable<int> ingHoldID, string strTimeOutDate)
        {
            var lngTransactionIDParameter = lngTransactionID.HasValue ?
                new ObjectParameter("lngTransactionID", lngTransactionID) :
                new ObjectParameter("lngTransactionID", typeof(int));
    
            var ingHoldIDParameter = ingHoldID.HasValue ?
                new ObjectParameter("ingHoldID", ingHoldID) :
                new ObjectParameter("ingHoldID", typeof(int));
    
            var strTimeOutDateParameter = strTimeOutDate != null ?
                new ObjectParameter("strTimeOutDate", strTimeOutDate) :
                new ObjectParameter("strTimeOutDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COMPLETE_HOLDING_CHECKING", lngTransactionIDParameter, ingHoldIDParameter, strTimeOutDateParameter);
        }
    
        public virtual ObjectResult<string> SP_CONTENT_IN_FIELD200S(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CONTENT_IN_FIELD200S", intItemIDParameter);
        }
    
        public virtual int SP_COPYNUMBER_INS(string strItemCode, Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strCallNumber, string strCopyNumber, Nullable<double> dblPrice, string strCur, Nullable<int> intItemType, Nullable<int> intUserID, Nullable<int> intLoanTypeID, ObjectParameter intOutPut)
        {
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(double));
    
            var strCurParameter = strCur != null ?
                new ObjectParameter("strCur", strCur) :
                new ObjectParameter("strCur", typeof(string));
    
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COPYNUMBER_INS", strItemCodeParameter, intLibIDParameter, intLocIDParameter, strShelfParameter, strCallNumberParameter, strCopyNumberParameter, dblPriceParameter, strCurParameter, intItemTypeParameter, intUserIDParameter, intLoanTypeIDParameter, intOutPut);
        }
    
        public virtual int SP_CREATE_ARTICLE(Nullable<int> intIssueID, string strName, string strAuthor, string strPage, string strNote, string strSubject, string strCreatedDate, string strFileAttack)
        {
            var intIssueIDParameter = intIssueID.HasValue ?
                new ObjectParameter("intIssueID", intIssueID) :
                new ObjectParameter("intIssueID", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPageParameter = strPage != null ?
                new ObjectParameter("strPage", strPage) :
                new ObjectParameter("strPage", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strSubjectParameter = strSubject != null ?
                new ObjectParameter("strSubject", strSubject) :
                new ObjectParameter("strSubject", typeof(string));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var strFileAttackParameter = strFileAttack != null ?
                new ObjectParameter("strFileAttack", strFileAttack) :
                new ObjectParameter("strFileAttack", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_ARTICLE", intIssueIDParameter, strNameParameter, strAuthorParameter, strPageParameter, strNoteParameter, strSubjectParameter, strCreatedDateParameter, strFileAttackParameter);
        }
    
        public virtual int SP_CREATE_EDELIV_ACCOUNT(string strUserName, string strName, string strDelivName, string strDelivXAddr, string strDelivStreet, string strDelivBox, string strDelivCity, string strDelivRegion, Nullable<byte> intDelivCountry, string strDelivCode, string strTelephone, string strEmailAddress, string strNote, string strPassword, string strFax, string strContactPerson, Nullable<byte> intApproved, Nullable<int> intSecretLevel, ObjectParameter intOutPut)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strDelivNameParameter = strDelivName != null ?
                new ObjectParameter("strDelivName", strDelivName) :
                new ObjectParameter("strDelivName", typeof(string));
    
            var strDelivXAddrParameter = strDelivXAddr != null ?
                new ObjectParameter("strDelivXAddr", strDelivXAddr) :
                new ObjectParameter("strDelivXAddr", typeof(string));
    
            var strDelivStreetParameter = strDelivStreet != null ?
                new ObjectParameter("strDelivStreet", strDelivStreet) :
                new ObjectParameter("strDelivStreet", typeof(string));
    
            var strDelivBoxParameter = strDelivBox != null ?
                new ObjectParameter("strDelivBox", strDelivBox) :
                new ObjectParameter("strDelivBox", typeof(string));
    
            var strDelivCityParameter = strDelivCity != null ?
                new ObjectParameter("strDelivCity", strDelivCity) :
                new ObjectParameter("strDelivCity", typeof(string));
    
            var strDelivRegionParameter = strDelivRegion != null ?
                new ObjectParameter("strDelivRegion", strDelivRegion) :
                new ObjectParameter("strDelivRegion", typeof(string));
    
            var intDelivCountryParameter = intDelivCountry.HasValue ?
                new ObjectParameter("intDelivCountry", intDelivCountry) :
                new ObjectParameter("intDelivCountry", typeof(byte));
    
            var strDelivCodeParameter = strDelivCode != null ?
                new ObjectParameter("strDelivCode", strDelivCode) :
                new ObjectParameter("strDelivCode", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strEmailAddressParameter = strEmailAddress != null ?
                new ObjectParameter("strEmailAddress", strEmailAddress) :
                new ObjectParameter("strEmailAddress", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var strFaxParameter = strFax != null ?
                new ObjectParameter("strFax", strFax) :
                new ObjectParameter("strFax", typeof(string));
    
            var strContactPersonParameter = strContactPerson != null ?
                new ObjectParameter("strContactPerson", strContactPerson) :
                new ObjectParameter("strContactPerson", typeof(string));
    
            var intApprovedParameter = intApproved.HasValue ?
                new ObjectParameter("intApproved", intApproved) :
                new ObjectParameter("intApproved", typeof(byte));
    
            var intSecretLevelParameter = intSecretLevel.HasValue ?
                new ObjectParameter("intSecretLevel", intSecretLevel) :
                new ObjectParameter("intSecretLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_EDELIV_ACCOUNT", strUserNameParameter, strNameParameter, strDelivNameParameter, strDelivXAddrParameter, strDelivStreetParameter, strDelivBoxParameter, strDelivCityParameter, strDelivRegionParameter, intDelivCountryParameter, strDelivCodeParameter, strTelephoneParameter, strEmailAddressParameter, strNoteParameter, strPasswordParameter, strFaxParameter, strContactPersonParameter, intApprovedParameter, intSecretLevelParameter, intOutPut);
        }
    
        public virtual int SP_CREATE_EDELIV_ACCTRAN(string strCustomerCode, Nullable<decimal> mnyAmount, string strCurrency, Nullable<double> fltRate, string strCreatedDate, string strReason, string strPaymentIDs, ObjectParameter intOutPut)
        {
            var strCustomerCodeParameter = strCustomerCode != null ?
                new ObjectParameter("strCustomerCode", strCustomerCode) :
                new ObjectParameter("strCustomerCode", typeof(string));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var fltRateParameter = fltRate.HasValue ?
                new ObjectParameter("fltRate", fltRate) :
                new ObjectParameter("fltRate", typeof(double));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var strPaymentIDsParameter = strPaymentIDs != null ?
                new ObjectParameter("strPaymentIDs", strPaymentIDs) :
                new ObjectParameter("strPaymentIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_EDELIV_ACCTRAN", strCustomerCodeParameter, mnyAmountParameter, strCurrencyParameter, fltRateParameter, strCreatedDateParameter, strReasonParameter, strPaymentIDsParameter, intOutPut);
        }
    
        public virtual int SP_CREATE_EDELIV_REQUESTMODE(string strNote, ObjectParameter intOutput)
        {
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_EDELIV_REQUESTMODE", strNoteParameter, intOutput);
        }
    
        public virtual int SP_CREATE_OAI_URL(string strURL, string strName)
        {
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_OAI_URL", strURLParameter, strNameParameter);
        }
    
        public virtual int SP_CREATE_QUEUE(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_QUEUE", intItemIDParameter);
        }
    
        public virtual int SP_CREATE_ROUTING(Nullable<int> lngItemID, Nullable<int> intLocationID, Nullable<int> intPOID, string strAppliedDate, Nullable<int> intCopies)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            var strAppliedDateParameter = strAppliedDate != null ?
                new ObjectParameter("strAppliedDate", strAppliedDate) :
                new ObjectParameter("strAppliedDate", typeof(string));
    
            var intCopiesParameter = intCopies.HasValue ?
                new ObjectParameter("intCopies", intCopies) :
                new ObjectParameter("intCopies", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_ROUTING", lngItemIDParameter, intLocationIDParameter, intPOIDParameter, strAppliedDateParameter, intCopiesParameter);
        }
    
        public virtual int SP_CREATE_SUBJECT(string strSubject)
        {
            var strSubjectParameter = strSubject != null ?
                new ObjectParameter("strSubject", strSubject) :
                new ObjectParameter("strSubject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_SUBJECT", strSubjectParameter);
        }
    
        public virtual int SP_CREATE_SYS_TEMPLATE(string strTitle, string strCreator, string strModifier, string strContent, Nullable<int> intTemplateType)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_SYS_TEMPLATE", strTitleParameter, strCreatorParameter, strModifierParameter, strContentParameter, intTemplateTypeParameter);
        }
    
        public virtual int SP_CREATE_VOLUME(Nullable<int> lngItemID, Nullable<int> intLocationID, string strCopyNumber, string strShelf, Nullable<int> intLoanTypeID, Nullable<int> intAcqSourceID, Nullable<decimal> dblPrice, string strVolumeByLibrary, string strCopyIDs, ObjectParameter intOutvalue)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            var intAcqSourceIDParameter = intAcqSourceID.HasValue ?
                new ObjectParameter("intAcqSourceID", intAcqSourceID) :
                new ObjectParameter("intAcqSourceID", typeof(int));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strVolumeByLibraryParameter = strVolumeByLibrary != null ?
                new ObjectParameter("strVolumeByLibrary", strVolumeByLibrary) :
                new ObjectParameter("strVolumeByLibrary", typeof(string));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATE_VOLUME", lngItemIDParameter, intLocationIDParameter, strCopyNumberParameter, strShelfParameter, intLoanTypeIDParameter, intAcqSourceIDParameter, dblPriceParameter, strVolumeByLibraryParameter, strCopyIDsParameter, intOutvalue);
        }
    
        public virtual int SP_CREATED_ID(string strTableName, string strFieldID)
        {
            var strTableNameParameter = strTableName != null ?
                new ObjectParameter("strTableName", strTableName) :
                new ObjectParameter("strTableName", typeof(string));
    
            var strFieldIDParameter = strFieldID != null ?
                new ObjectParameter("strFieldID", strFieldID) :
                new ObjectParameter("strFieldID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATED_ID", strTableNameParameter, strFieldIDParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_CREATELOANTYPE(Nullable<decimal> monFee, Nullable<byte> intFixedFee, Nullable<int> intLoanPeriod, string strLoanType, Nullable<decimal> monOverdueFine, Nullable<int> intRenewalPeriod, Nullable<int> intRenewals, Nullable<int> intTimeUnit, ObjectParameter intOUT)
        {
            var monFeeParameter = monFee.HasValue ?
                new ObjectParameter("monFee", monFee) :
                new ObjectParameter("monFee", typeof(decimal));
    
            var intFixedFeeParameter = intFixedFee.HasValue ?
                new ObjectParameter("intFixedFee", intFixedFee) :
                new ObjectParameter("intFixedFee", typeof(byte));
    
            var intLoanPeriodParameter = intLoanPeriod.HasValue ?
                new ObjectParameter("intLoanPeriod", intLoanPeriod) :
                new ObjectParameter("intLoanPeriod", typeof(int));
    
            var strLoanTypeParameter = strLoanType != null ?
                new ObjectParameter("strLoanType", strLoanType) :
                new ObjectParameter("strLoanType", typeof(string));
    
            var monOverdueFineParameter = monOverdueFine.HasValue ?
                new ObjectParameter("monOverdueFine", monOverdueFine) :
                new ObjectParameter("monOverdueFine", typeof(decimal));
    
            var intRenewalPeriodParameter = intRenewalPeriod.HasValue ?
                new ObjectParameter("intRenewalPeriod", intRenewalPeriod) :
                new ObjectParameter("intRenewalPeriod", typeof(int));
    
            var intRenewalsParameter = intRenewals.HasValue ?
                new ObjectParameter("intRenewals", intRenewals) :
                new ObjectParameter("intRenewals", typeof(int));
    
            var intTimeUnitParameter = intTimeUnit.HasValue ?
                new ObjectParameter("intTimeUnit", intTimeUnit) :
                new ObjectParameter("intTimeUnit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CREATELOANTYPE", monFeeParameter, intFixedFeeParameter, intLoanPeriodParameter, strLoanTypeParameter, monOverdueFineParameter, intRenewalPeriodParameter, intRenewalsParameter, intTimeUnitParameter, intOUT);
        }
    
        public virtual ObjectResult<SP_CURRENT_RECEIVE_COPIES_Result> SP_CURRENT_RECEIVE_COPIES(Nullable<int> lngIssueID, Nullable<int> intLocationID)
        {
            var lngIssueIDParameter = lngIssueID.HasValue ?
                new ObjectParameter("lngIssueID", lngIssueID) :
                new ObjectParameter("lngIssueID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CURRENT_RECEIVE_COPIES_Result>("SP_CURRENT_RECEIVE_COPIES", lngIssueIDParameter, intLocationIDParameter);
        }
    
        public virtual ObjectResult<SP_DAYLY_RECEIVE_Result> SP_DAYLY_RECEIVE(string strIssuedDate, string strReceivedDate, Nullable<int> intLocationID)
        {
            var strIssuedDateParameter = strIssuedDate != null ?
                new ObjectParameter("strIssuedDate", strIssuedDate) :
                new ObjectParameter("strIssuedDate", typeof(string));
    
            var strReceivedDateParameter = strReceivedDate != null ?
                new ObjectParameter("strReceivedDate", strReceivedDate) :
                new ObjectParameter("strReceivedDate", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DAYLY_RECEIVE_Result>("SP_DAYLY_RECEIVE", strIssuedDateParameter, strReceivedDateParameter, intLocationIDParameter);
        }
    
        public virtual int SP_DAYLY_REGISTER(string strIssuedDate, string strPubCountry, string strPubLanguage, string chrRegularityCode, string strViewCode)
        {
            var strIssuedDateParameter = strIssuedDate != null ?
                new ObjectParameter("strIssuedDate", strIssuedDate) :
                new ObjectParameter("strIssuedDate", typeof(string));
    
            var strPubCountryParameter = strPubCountry != null ?
                new ObjectParameter("strPubCountry", strPubCountry) :
                new ObjectParameter("strPubCountry", typeof(string));
    
            var strPubLanguageParameter = strPubLanguage != null ?
                new ObjectParameter("strPubLanguage", strPubLanguage) :
                new ObjectParameter("strPubLanguage", typeof(string));
    
            var chrRegularityCodeParameter = chrRegularityCode != null ?
                new ObjectParameter("chrRegularityCode", chrRegularityCode) :
                new ObjectParameter("chrRegularityCode", typeof(string));
    
            var strViewCodeParameter = strViewCode != null ?
                new ObjectParameter("strViewCode", strViewCode) :
                new ObjectParameter("strViewCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DAYLY_REGISTER", strIssuedDateParameter, strPubCountryParameter, strPubLanguageParameter, chrRegularityCodeParameter, strViewCodeParameter);
        }
    
        public virtual int SP_DELETE_ARTICLE(string strID)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_ARTICLE", strIDParameter);
        }
    
        public virtual int SP_DELETE_EDELIV_ACCTRAN(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_EDELIV_ACCTRAN", intIDParameter);
        }
    
        public virtual int SP_DELETE_EDELIV_CUSTOMER(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_EDELIV_CUSTOMER", intUserIDParameter);
        }
    
        public virtual int SP_DELETE_EDELIV_REQUEST(Nullable<int> lngRequestID)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_EDELIV_REQUEST", lngRequestIDParameter);
        }
    
        public virtual int SP_DELETE_EDELIV_REQUESTMODE(Nullable<int> intModeID)
        {
            var intModeIDParameter = intModeID.HasValue ?
                new ObjectParameter("intModeID", intModeID) :
                new ObjectParameter("intModeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_EDELIV_REQUESTMODE", intModeIDParameter);
        }
    
        public virtual int SP_DELETE_SCHEDULE(Nullable<int> intLocationID, string strOffYear)
        {
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strOffYearParameter = strOffYear != null ?
                new ObjectParameter("strOffYear", strOffYear) :
                new ObjectParameter("strOffYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_SCHEDULE", intLocationIDParameter, strOffYearParameter);
        }
    
        public virtual int SP_DELETE_SYS_TEMPLATE(Nullable<int> intTemplateID)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_SYS_TEMPLATE", intTemplateIDParameter);
        }
    
        public virtual int SP_DICINFOR_SEL(string strSQL)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DICINFOR_SEL", strSQLParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_EDATA_CHANGE_ITEM_TYPE(Nullable<int> intType, string strID)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_CHANGE_ITEM_TYPE", intTypeParameter, strIDParameter);
        }
    
        public virtual int SP_EDATA_COLLECTION_CREATE(string strCollection, string strDescription)
        {
            var strCollectionParameter = strCollection != null ?
                new ObjectParameter("strCollection", strCollection) :
                new ObjectParameter("strCollection", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_COLLECTION_CREATE", strCollectionParameter, strDescriptionParameter);
        }
    
        public virtual int SP_EDATA_COLLECTION_DELETE(Nullable<int> intCollectionID)
        {
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_COLLECTION_DELETE", intCollectionIDParameter);
        }
    
        public virtual ObjectResult<SP_EDATA_COLLECTION_GET_Result> SP_EDATA_COLLECTION_GET()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_COLLECTION_GET_Result>("SP_EDATA_COLLECTION_GET");
        }
    
        public virtual int SP_EDATA_COLLECTION_UPDATE(Nullable<int> intCollectionID, string strCollection, string strDescription)
        {
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            var strCollectionParameter = strCollection != null ?
                new ObjectParameter("strCollection", strCollection) :
                new ObjectParameter("strCollection", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_COLLECTION_UPDATE", intCollectionIDParameter, strCollectionParameter, strDescriptionParameter);
        }
    
        public virtual int SP_EDATA_COLLECTION_UPDATE_MER(Nullable<int> intCollectionID, string strCollectionIDs)
        {
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            var strCollectionIDsParameter = strCollectionIDs != null ?
                new ObjectParameter("strCollectionIDs", strCollectionIDs) :
                new ObjectParameter("strCollectionIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_COLLECTION_UPDATE_MER", intCollectionIDParameter, strCollectionIDsParameter);
        }
    
        public virtual int SP_EDATA_CREATE(string strFieldCode, Nullable<int> intDataTypeID, string strURL, string strFileName, Nullable<int> lngFileSize, string strInputer, Nullable<int> intBitmapType, string strColorModel, Nullable<int> intImgWidth, Nullable<int> intImgHeight, Nullable<int> intXdpi, Nullable<int> intYdpi, Nullable<int> intNoColorUsed, ObjectParameter intFileID, ObjectParameter strSQL)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var intDataTypeIDParameter = intDataTypeID.HasValue ?
                new ObjectParameter("intDataTypeID", intDataTypeID) :
                new ObjectParameter("intDataTypeID", typeof(int));
    
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            var strFileNameParameter = strFileName != null ?
                new ObjectParameter("strFileName", strFileName) :
                new ObjectParameter("strFileName", typeof(string));
    
            var lngFileSizeParameter = lngFileSize.HasValue ?
                new ObjectParameter("lngFileSize", lngFileSize) :
                new ObjectParameter("lngFileSize", typeof(int));
    
            var strInputerParameter = strInputer != null ?
                new ObjectParameter("strInputer", strInputer) :
                new ObjectParameter("strInputer", typeof(string));
    
            var intBitmapTypeParameter = intBitmapType.HasValue ?
                new ObjectParameter("intBitmapType", intBitmapType) :
                new ObjectParameter("intBitmapType", typeof(int));
    
            var strColorModelParameter = strColorModel != null ?
                new ObjectParameter("strColorModel", strColorModel) :
                new ObjectParameter("strColorModel", typeof(string));
    
            var intImgWidthParameter = intImgWidth.HasValue ?
                new ObjectParameter("intImgWidth", intImgWidth) :
                new ObjectParameter("intImgWidth", typeof(int));
    
            var intImgHeightParameter = intImgHeight.HasValue ?
                new ObjectParameter("intImgHeight", intImgHeight) :
                new ObjectParameter("intImgHeight", typeof(int));
    
            var intXdpiParameter = intXdpi.HasValue ?
                new ObjectParameter("intXdpi", intXdpi) :
                new ObjectParameter("intXdpi", typeof(int));
    
            var intYdpiParameter = intYdpi.HasValue ?
                new ObjectParameter("intYdpi", intYdpi) :
                new ObjectParameter("intYdpi", typeof(int));
    
            var intNoColorUsedParameter = intNoColorUsed.HasValue ?
                new ObjectParameter("intNoColorUsed", intNoColorUsed) :
                new ObjectParameter("intNoColorUsed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_CREATE", strFieldCodeParameter, intDataTypeIDParameter, strURLParameter, strFileNameParameter, lngFileSizeParameter, strInputerParameter, intBitmapTypeParameter, strColorModelParameter, intImgWidthParameter, intImgHeightParameter, intXdpiParameter, intYdpiParameter, intNoColorUsedParameter, intFileID, strSQL);
        }
    
        public virtual int SP_EDATA_DELETE_METADATA(Nullable<int> lngobjID)
        {
            var lngobjIDParameter = lngobjID.HasValue ?
                new ObjectParameter("lngobjID", lngobjID) :
                new ObjectParameter("lngobjID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_DELETE_METADATA", lngobjIDParameter);
        }
    
        public virtual int SP_EDATA_DETACH(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_DETACH", strIDsParameter);
        }
    
        public virtual int SP_EDATA_FILE_GET(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_FILE_GET", strIDsParameter);
        }
    
        public virtual int SP_EDATA_GENERAL_DELETE(Nullable<int> intMode, Nullable<int> intHaveFieldCode, Nullable<int> lngFileID, Nullable<int> lngItemID, string strURL, string strFieldName, string strFieldCode, string str856Content, string str956Content)
        {
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var intHaveFieldCodeParameter = intHaveFieldCode.HasValue ?
                new ObjectParameter("intHaveFieldCode", intHaveFieldCode) :
                new ObjectParameter("intHaveFieldCode", typeof(int));
    
            var lngFileIDParameter = lngFileID.HasValue ?
                new ObjectParameter("lngFileID", lngFileID) :
                new ObjectParameter("lngFileID", typeof(int));
    
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            var strFieldNameParameter = strFieldName != null ?
                new ObjectParameter("strFieldName", strFieldName) :
                new ObjectParameter("strFieldName", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var str856ContentParameter = str856Content != null ?
                new ObjectParameter("str856Content", str856Content) :
                new ObjectParameter("str856Content", typeof(string));
    
            var str956ContentParameter = str956Content != null ?
                new ObjectParameter("str956Content", str956Content) :
                new ObjectParameter("str956Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_GENERAL_DELETE", intModeParameter, intHaveFieldCodeParameter, lngFileIDParameter, lngItemIDParameter, strURLParameter, strFieldNameParameter, strFieldCodeParameter, str856ContentParameter, str956ContentParameter);
        }
    
        public virtual ObjectResult<SP_EDATA_GET_DATAFILE_Result> SP_EDATA_GET_DATAFILE(Nullable<int> intStartID)
        {
            var intStartIDParameter = intStartID.HasValue ?
                new ObjectParameter("intStartID", intStartID) :
                new ObjectParameter("intStartID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_GET_DATAFILE_Result>("SP_EDATA_GET_DATAFILE", intStartIDParameter);
        }
    
        public virtual ObjectResult<string> SP_EDATA_GET_DISPLAY_TYPE(Nullable<int> intType, Nullable<int> intFree)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intFreeParameter = intFree.HasValue ?
                new ObjectParameter("intFree", intFree) :
                new ObjectParameter("intFree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_EDATA_GET_DISPLAY_TYPE", intTypeParameter, intFreeParameter);
        }
    
        public virtual ObjectResult<string> SP_EDATA_GET_DUB_TITLE(Nullable<int> lngID)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_EDATA_GET_DUB_TITLE", lngIDParameter);
        }
    
        public virtual ObjectResult<SP_EDATA_GET_EDATAFILE_Result> SP_EDATA_GET_EDATAFILE(string strUserName, Nullable<int> intID)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_GET_EDATAFILE_Result>("SP_EDATA_GET_EDATAFILE", strUserNameParameter, intIDParameter);
        }
    
        public virtual ObjectResult<SP_EDATA_GET_GENERAL_INFOR_Result> SP_EDATA_GET_GENERAL_INFOR(Nullable<int> intType, Nullable<int> intMode, Nullable<int> intListType, Nullable<int> intViewMode, string strIDs, Nullable<int> lngStartID, Nullable<int> intPageSize, string strParam, Nullable<int> intCollectionID, ObjectParameter lngTotalRec)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var intListTypeParameter = intListType.HasValue ?
                new ObjectParameter("intListType", intListType) :
                new ObjectParameter("intListType", typeof(int));
    
            var intViewModeParameter = intViewMode.HasValue ?
                new ObjectParameter("intViewMode", intViewMode) :
                new ObjectParameter("intViewMode", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var lngStartIDParameter = lngStartID.HasValue ?
                new ObjectParameter("lngStartID", lngStartID) :
                new ObjectParameter("lngStartID", typeof(int));
    
            var intPageSizeParameter = intPageSize.HasValue ?
                new ObjectParameter("intPageSize", intPageSize) :
                new ObjectParameter("intPageSize", typeof(int));
    
            var strParamParameter = strParam != null ?
                new ObjectParameter("strParam", strParam) :
                new ObjectParameter("strParam", typeof(string));
    
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_GET_GENERAL_INFOR_Result>("SP_EDATA_GET_GENERAL_INFOR", intTypeParameter, intModeParameter, intListTypeParameter, intViewModeParameter, strIDsParameter, lngStartIDParameter, intPageSizeParameter, strParamParameter, intCollectionIDParameter, lngTotalRec);
        }
    
        public virtual ObjectResult<SP_EDATA_GET_ITEM_Result> SP_EDATA_GET_ITEM(string strItemCode)
        {
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_GET_ITEM_Result>("SP_EDATA_GET_ITEM", strItemCodeParameter);
        }
    
        public virtual int SP_EDATA_GET_ITEM_DETAILINFOR(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_GET_ITEM_DETAILINFOR", strItemIDsParameter);
        }
    
        public virtual int SP_EDATA_GET_MAXID_BY_TOPNUM(Nullable<int> intListType, Nullable<int> lngTopNum, Nullable<int> intCollectionID, string strParam, Nullable<int> intFree)
        {
            var intListTypeParameter = intListType.HasValue ?
                new ObjectParameter("intListType", intListType) :
                new ObjectParameter("intListType", typeof(int));
    
            var lngTopNumParameter = lngTopNum.HasValue ?
                new ObjectParameter("lngTopNum", lngTopNum) :
                new ObjectParameter("lngTopNum", typeof(int));
    
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            var strParamParameter = strParam != null ?
                new ObjectParameter("strParam", strParam) :
                new ObjectParameter("strParam", typeof(string));
    
            var intFreeParameter = intFree.HasValue ?
                new ObjectParameter("intFree", intFree) :
                new ObjectParameter("intFree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_GET_MAXID_BY_TOPNUM", intListTypeParameter, lngTopNumParameter, intCollectionIDParameter, strParamParameter, intFreeParameter);
        }
    
        public virtual ObjectResult<SP_EDATA_GET_METADATA_Result> SP_EDATA_GET_METADATA(Nullable<int> lngobjID)
        {
            var lngobjIDParameter = lngobjID.HasValue ?
                new ObjectParameter("lngobjID", lngobjID) :
                new ObjectParameter("lngobjID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_GET_METADATA_Result>("SP_EDATA_GET_METADATA", lngobjIDParameter);
        }
    
        public virtual ObjectResult<SP_EDATA_GET_METADATA_DEFIN_Result> SP_EDATA_GET_METADATA_DEFIN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_GET_METADATA_DEFIN_Result>("SP_EDATA_GET_METADATA_DEFIN");
        }
    
        public virtual int SP_EDATA_INSERT_FILE(Nullable<int> intFileSize, string strUploadedDate, string strUploadedBy, string strFieldCode, Nullable<int> intItemID, string strURL, string strPhysicalPath, Nullable<int> intExisted, string strFileLocation, Nullable<int> intSecretLevel, Nullable<int> intDownloadTimes, Nullable<int> intMediaType, Nullable<int> intLocked, string strLockedDate, string strLockedBy, string strLastModifiedBy, Nullable<int> intModifiedTimes, Nullable<int> intStatus, string strNote, Nullable<int> intCollectionID, Nullable<int> intFree, string strFileName, Nullable<decimal> dblPrice, string strCurrency, string strPagination, string strFileFormat, ObjectParameter intFileID, ObjectParameter intOutVal)
        {
            var intFileSizeParameter = intFileSize.HasValue ?
                new ObjectParameter("intFileSize", intFileSize) :
                new ObjectParameter("intFileSize", typeof(int));
    
            var strUploadedDateParameter = strUploadedDate != null ?
                new ObjectParameter("strUploadedDate", strUploadedDate) :
                new ObjectParameter("strUploadedDate", typeof(string));
    
            var strUploadedByParameter = strUploadedBy != null ?
                new ObjectParameter("strUploadedBy", strUploadedBy) :
                new ObjectParameter("strUploadedBy", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            var strPhysicalPathParameter = strPhysicalPath != null ?
                new ObjectParameter("strPhysicalPath", strPhysicalPath) :
                new ObjectParameter("strPhysicalPath", typeof(string));
    
            var intExistedParameter = intExisted.HasValue ?
                new ObjectParameter("intExisted", intExisted) :
                new ObjectParameter("intExisted", typeof(int));
    
            var strFileLocationParameter = strFileLocation != null ?
                new ObjectParameter("strFileLocation", strFileLocation) :
                new ObjectParameter("strFileLocation", typeof(string));
    
            var intSecretLevelParameter = intSecretLevel.HasValue ?
                new ObjectParameter("intSecretLevel", intSecretLevel) :
                new ObjectParameter("intSecretLevel", typeof(int));
    
            var intDownloadTimesParameter = intDownloadTimes.HasValue ?
                new ObjectParameter("intDownloadTimes", intDownloadTimes) :
                new ObjectParameter("intDownloadTimes", typeof(int));
    
            var intMediaTypeParameter = intMediaType.HasValue ?
                new ObjectParameter("intMediaType", intMediaType) :
                new ObjectParameter("intMediaType", typeof(int));
    
            var intLockedParameter = intLocked.HasValue ?
                new ObjectParameter("intLocked", intLocked) :
                new ObjectParameter("intLocked", typeof(int));
    
            var strLockedDateParameter = strLockedDate != null ?
                new ObjectParameter("strLockedDate", strLockedDate) :
                new ObjectParameter("strLockedDate", typeof(string));
    
            var strLockedByParameter = strLockedBy != null ?
                new ObjectParameter("strLockedBy", strLockedBy) :
                new ObjectParameter("strLockedBy", typeof(string));
    
            var strLastModifiedByParameter = strLastModifiedBy != null ?
                new ObjectParameter("strLastModifiedBy", strLastModifiedBy) :
                new ObjectParameter("strLastModifiedBy", typeof(string));
    
            var intModifiedTimesParameter = intModifiedTimes.HasValue ?
                new ObjectParameter("intModifiedTimes", intModifiedTimes) :
                new ObjectParameter("intModifiedTimes", typeof(int));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            var intFreeParameter = intFree.HasValue ?
                new ObjectParameter("intFree", intFree) :
                new ObjectParameter("intFree", typeof(int));
    
            var strFileNameParameter = strFileName != null ?
                new ObjectParameter("strFileName", strFileName) :
                new ObjectParameter("strFileName", typeof(string));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strPaginationParameter = strPagination != null ?
                new ObjectParameter("strPagination", strPagination) :
                new ObjectParameter("strPagination", typeof(string));
    
            var strFileFormatParameter = strFileFormat != null ?
                new ObjectParameter("strFileFormat", strFileFormat) :
                new ObjectParameter("strFileFormat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_INSERT_FILE", intFileSizeParameter, strUploadedDateParameter, strUploadedByParameter, strFieldCodeParameter, intItemIDParameter, strURLParameter, strPhysicalPathParameter, intExistedParameter, strFileLocationParameter, intSecretLevelParameter, intDownloadTimesParameter, intMediaTypeParameter, intLockedParameter, strLockedDateParameter, strLockedByParameter, strLastModifiedByParameter, intModifiedTimesParameter, intStatusParameter, strNoteParameter, intCollectionIDParameter, intFreeParameter, strFileNameParameter, dblPriceParameter, strCurrencyParameter, strPaginationParameter, strFileFormatParameter, intFileID, intOutVal);
        }
    
        public virtual int SP_EDATA_INSERT_MULTIMEDIA(Nullable<int> lngID, Nullable<int> intBitmapType, string strColorModel, Nullable<int> intImgWidth, Nullable<int> intImgHeight, Nullable<int> intXdpi, Nullable<int> intYdpi, Nullable<int> intNoColorUsed, string strAlbum, string strArtist, Nullable<int> intBitRate, Nullable<double> dbDuration, string strGenre, Nullable<int> intPageCount)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            var intBitmapTypeParameter = intBitmapType.HasValue ?
                new ObjectParameter("intBitmapType", intBitmapType) :
                new ObjectParameter("intBitmapType", typeof(int));
    
            var strColorModelParameter = strColorModel != null ?
                new ObjectParameter("strColorModel", strColorModel) :
                new ObjectParameter("strColorModel", typeof(string));
    
            var intImgWidthParameter = intImgWidth.HasValue ?
                new ObjectParameter("intImgWidth", intImgWidth) :
                new ObjectParameter("intImgWidth", typeof(int));
    
            var intImgHeightParameter = intImgHeight.HasValue ?
                new ObjectParameter("intImgHeight", intImgHeight) :
                new ObjectParameter("intImgHeight", typeof(int));
    
            var intXdpiParameter = intXdpi.HasValue ?
                new ObjectParameter("intXdpi", intXdpi) :
                new ObjectParameter("intXdpi", typeof(int));
    
            var intYdpiParameter = intYdpi.HasValue ?
                new ObjectParameter("intYdpi", intYdpi) :
                new ObjectParameter("intYdpi", typeof(int));
    
            var intNoColorUsedParameter = intNoColorUsed.HasValue ?
                new ObjectParameter("intNoColorUsed", intNoColorUsed) :
                new ObjectParameter("intNoColorUsed", typeof(int));
    
            var strAlbumParameter = strAlbum != null ?
                new ObjectParameter("strAlbum", strAlbum) :
                new ObjectParameter("strAlbum", typeof(string));
    
            var strArtistParameter = strArtist != null ?
                new ObjectParameter("strArtist", strArtist) :
                new ObjectParameter("strArtist", typeof(string));
    
            var intBitRateParameter = intBitRate.HasValue ?
                new ObjectParameter("intBitRate", intBitRate) :
                new ObjectParameter("intBitRate", typeof(int));
    
            var dbDurationParameter = dbDuration.HasValue ?
                new ObjectParameter("dbDuration", dbDuration) :
                new ObjectParameter("dbDuration", typeof(double));
    
            var strGenreParameter = strGenre != null ?
                new ObjectParameter("strGenre", strGenre) :
                new ObjectParameter("strGenre", typeof(string));
    
            var intPageCountParameter = intPageCount.HasValue ?
                new ObjectParameter("intPageCount", intPageCount) :
                new ObjectParameter("intPageCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_INSERT_MULTIMEDIA", lngIDParameter, intBitmapTypeParameter, strColorModelParameter, intImgWidthParameter, intImgHeightParameter, intXdpiParameter, intYdpiParameter, intNoColorUsedParameter, strAlbumParameter, strArtistParameter, intBitRateParameter, dbDurationParameter, strGenreParameter, intPageCountParameter);
        }
    
        public virtual ObjectResult<SP_EDATA_ITEM_GET_Result> SP_EDATA_ITEM_GET(string strItemCode)
        {
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_EDATA_ITEM_GET_Result>("SP_EDATA_ITEM_GET", strItemCodeParameter);
        }
    
        public virtual int SP_EDATA_METADATA_INSERT(string strFieldInput, string strFieldValue, Nullable<int> intIDEdataFile, ObjectParameter intOutVal)
        {
            var strFieldInputParameter = strFieldInput != null ?
                new ObjectParameter("strFieldInput", strFieldInput) :
                new ObjectParameter("strFieldInput", typeof(string));
    
            var strFieldValueParameter = strFieldValue != null ?
                new ObjectParameter("strFieldValue", strFieldValue) :
                new ObjectParameter("strFieldValue", typeof(string));
    
            var intIDEdataFileParameter = intIDEdataFile.HasValue ?
                new ObjectParameter("intIDEdataFile", intIDEdataFile) :
                new ObjectParameter("intIDEdataFile", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_METADATA_INSERT", strFieldInputParameter, strFieldValueParameter, intIDEdataFileParameter, intOutVal);
        }
    
        public virtual int SP_EDATA_METADATA_UPDATE(string strFieldInput, string strFieldValue, Nullable<int> intIDEdataFile, ObjectParameter intOutVal)
        {
            var strFieldInputParameter = strFieldInput != null ?
                new ObjectParameter("strFieldInput", strFieldInput) :
                new ObjectParameter("strFieldInput", typeof(string));
    
            var strFieldValueParameter = strFieldValue != null ?
                new ObjectParameter("strFieldValue", strFieldValue) :
                new ObjectParameter("strFieldValue", typeof(string));
    
            var intIDEdataFileParameter = intIDEdataFile.HasValue ?
                new ObjectParameter("intIDEdataFile", intIDEdataFile) :
                new ObjectParameter("intIDEdataFile", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_METADATA_UPDATE", strFieldInputParameter, strFieldValueParameter, intIDEdataFileParameter, intOutVal);
        }
    
        public virtual int SP_EDATA_STATISTIC(ObjectParameter intFreeCount, ObjectParameter intChargeCount, ObjectParameter intNumReq, ObjectParameter intUserCount, ObjectParameter intDownloadTimes)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_STATISTIC", intFreeCount, intChargeCount, intNumReq, intUserCount, intDownloadTimes);
        }
    
        public virtual int SP_EDATA_UPDATE_FILE(string strID, Nullable<int> intFileSize, string strUploadedDate, string strUploadedBy, string strFieldCode, Nullable<int> intItemID, string strURL, string strPhysicalPath, Nullable<int> intExisted, string strFileLocation, Nullable<int> intSecretLevel, Nullable<int> intDownloadTimes, Nullable<int> intMediaType, Nullable<int> intLocked, string strLockedDate, string strLockedBy, string strLastModifiedBy, Nullable<int> intModifiedTimes, Nullable<int> intStatus, string strNote, Nullable<int> intCollectionID, Nullable<int> intFree, string strFileName, Nullable<decimal> dblPrice, string strCurrency, string strPagination, string strFileFormat, ObjectParameter intOutVal)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var intFileSizeParameter = intFileSize.HasValue ?
                new ObjectParameter("intFileSize", intFileSize) :
                new ObjectParameter("intFileSize", typeof(int));
    
            var strUploadedDateParameter = strUploadedDate != null ?
                new ObjectParameter("strUploadedDate", strUploadedDate) :
                new ObjectParameter("strUploadedDate", typeof(string));
    
            var strUploadedByParameter = strUploadedBy != null ?
                new ObjectParameter("strUploadedBy", strUploadedBy) :
                new ObjectParameter("strUploadedBy", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            var strPhysicalPathParameter = strPhysicalPath != null ?
                new ObjectParameter("strPhysicalPath", strPhysicalPath) :
                new ObjectParameter("strPhysicalPath", typeof(string));
    
            var intExistedParameter = intExisted.HasValue ?
                new ObjectParameter("intExisted", intExisted) :
                new ObjectParameter("intExisted", typeof(int));
    
            var strFileLocationParameter = strFileLocation != null ?
                new ObjectParameter("strFileLocation", strFileLocation) :
                new ObjectParameter("strFileLocation", typeof(string));
    
            var intSecretLevelParameter = intSecretLevel.HasValue ?
                new ObjectParameter("intSecretLevel", intSecretLevel) :
                new ObjectParameter("intSecretLevel", typeof(int));
    
            var intDownloadTimesParameter = intDownloadTimes.HasValue ?
                new ObjectParameter("intDownloadTimes", intDownloadTimes) :
                new ObjectParameter("intDownloadTimes", typeof(int));
    
            var intMediaTypeParameter = intMediaType.HasValue ?
                new ObjectParameter("intMediaType", intMediaType) :
                new ObjectParameter("intMediaType", typeof(int));
    
            var intLockedParameter = intLocked.HasValue ?
                new ObjectParameter("intLocked", intLocked) :
                new ObjectParameter("intLocked", typeof(int));
    
            var strLockedDateParameter = strLockedDate != null ?
                new ObjectParameter("strLockedDate", strLockedDate) :
                new ObjectParameter("strLockedDate", typeof(string));
    
            var strLockedByParameter = strLockedBy != null ?
                new ObjectParameter("strLockedBy", strLockedBy) :
                new ObjectParameter("strLockedBy", typeof(string));
    
            var strLastModifiedByParameter = strLastModifiedBy != null ?
                new ObjectParameter("strLastModifiedBy", strLastModifiedBy) :
                new ObjectParameter("strLastModifiedBy", typeof(string));
    
            var intModifiedTimesParameter = intModifiedTimes.HasValue ?
                new ObjectParameter("intModifiedTimes", intModifiedTimes) :
                new ObjectParameter("intModifiedTimes", typeof(int));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            var intFreeParameter = intFree.HasValue ?
                new ObjectParameter("intFree", intFree) :
                new ObjectParameter("intFree", typeof(int));
    
            var strFileNameParameter = strFileName != null ?
                new ObjectParameter("strFileName", strFileName) :
                new ObjectParameter("strFileName", typeof(string));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strPaginationParameter = strPagination != null ?
                new ObjectParameter("strPagination", strPagination) :
                new ObjectParameter("strPagination", typeof(string));
    
            var strFileFormatParameter = strFileFormat != null ?
                new ObjectParameter("strFileFormat", strFileFormat) :
                new ObjectParameter("strFileFormat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_UPDATE_FILE", strIDParameter, intFileSizeParameter, strUploadedDateParameter, strUploadedByParameter, strFieldCodeParameter, intItemIDParameter, strURLParameter, strPhysicalPathParameter, intExistedParameter, strFileLocationParameter, intSecretLevelParameter, intDownloadTimesParameter, intMediaTypeParameter, intLockedParameter, strLockedDateParameter, strLockedByParameter, strLastModifiedByParameter, intModifiedTimesParameter, intStatusParameter, strNoteParameter, intCollectionIDParameter, intFreeParameter, strFileNameParameter, dblPriceParameter, strCurrencyParameter, strPaginationParameter, strFileFormatParameter, intOutVal);
        }
    
        public virtual int SP_EDATA_UPDATE_FILE_COLL(string strID, Nullable<int> intCollectionID)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var intCollectionIDParameter = intCollectionID.HasValue ?
                new ObjectParameter("intCollectionID", intCollectionID) :
                new ObjectParameter("intCollectionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_UPDATE_FILE_COLL", strIDParameter, intCollectionIDParameter);
        }
    
        public virtual int SP_EDATA_UPDATE_FILE_DETACH(string strID, Nullable<int> intItemID, string strFieldCode)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_UPDATE_FILE_DETACH", strIDParameter, intItemIDParameter, strFieldCodeParameter);
        }
    
        public virtual int SP_EDATA_UPDATE_LOC(string strOldLoc, string strNewLoc, ObjectParameter intOutVal)
        {
            var strOldLocParameter = strOldLoc != null ?
                new ObjectParameter("strOldLoc", strOldLoc) :
                new ObjectParameter("strOldLoc", typeof(string));
    
            var strNewLocParameter = strNewLoc != null ?
                new ObjectParameter("strNewLoc", strNewLoc) :
                new ObjectParameter("strNewLoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_UPDATE_LOC", strOldLocParameter, strNewLocParameter, intOutVal);
        }
    
        public virtual int SP_EDATA_UPDATE_METADATA(Nullable<int> lngobjID, string strFieldIDs, string strDisplayEntry, string strAccessEntry)
        {
            var lngobjIDParameter = lngobjID.HasValue ?
                new ObjectParameter("lngobjID", lngobjID) :
                new ObjectParameter("lngobjID", typeof(int));
    
            var strFieldIDsParameter = strFieldIDs != null ?
                new ObjectParameter("strFieldIDs", strFieldIDs) :
                new ObjectParameter("strFieldIDs", typeof(string));
    
            var strDisplayEntryParameter = strDisplayEntry != null ?
                new ObjectParameter("strDisplayEntry", strDisplayEntry) :
                new ObjectParameter("strDisplayEntry", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDATA_UPDATE_METADATA", lngobjIDParameter, strFieldIDsParameter, strDisplayEntryParameter, strAccessEntryParameter);
        }
    
        public virtual int SP_EDELIV_CHANGESTATUS(Nullable<int> lngRequestID, Nullable<int> intStatusID)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDELIV_CHANGESTATUS", lngRequestIDParameter, intStatusIDParameter);
        }
    
        public virtual int SP_FIELD200S_SEL(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FIELD200S_SEL", strItemIDsParameter);
        }
    
        public virtual int SP_FORMID_OF_ITEM_SEL(Nullable<int> intBookType)
        {
            var intBookTypeParameter = intBookType.HasValue ?
                new ObjectParameter("intBookType", intBookType) :
                new ObjectParameter("intBookType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FORMID_OF_ITEM_SEL", intBookTypeParameter);
        }
    
        public virtual ObjectResult<SP_GET_ACQITEM_INFOR_Result> SP_GET_ACQITEM_INFOR(Nullable<int> intACQITEMID)
        {
            var intACQITEMIDParameter = intACQITEMID.HasValue ?
                new ObjectParameter("intACQITEMID", intACQITEMID) :
                new ObjectParameter("intACQITEMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ACQITEM_INFOR_Result>("SP_GET_ACQITEM_INFOR", intACQITEMIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_ACQSOURCES_Result> SP_GET_ACQSOURCES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ACQSOURCES_Result>("SP_GET_ACQSOURCES");
        }
    
        public virtual ObjectResult<SP_GET_ACQSTATUS_Result> SP_GET_ACQSTATUS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ACQSTATUS_Result>("SP_GET_ACQSTATUS");
        }
    
        public virtual ObjectResult<SP_GET_ARTICLE_Result> SP_GET_ARTICLE(Nullable<int> intIssueID)
        {
            var intIssueIDParameter = intIssueID.HasValue ?
                new ObjectParameter("intIssueID", intIssueID) :
                new ObjectParameter("intIssueID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ARTICLE_Result>("SP_GET_ARTICLE", intIssueIDParameter);
        }
    
        public virtual int SP_GET_BINDING_RULE(Nullable<int> lngItemID, ObjectParameter intBindingMode, ObjectParameter intBindingRule)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_BINDING_RULE", lngItemIDParameter, intBindingMode, intBindingRule);
        }
    
        public virtual ObjectResult<SP_GET_BUDGETS_Result> SP_GET_BUDGETS(Nullable<int> intBudgetID)
        {
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_BUDGETS_Result>("SP_GET_BUDGETS", intBudgetIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_CATEGORY_Result> SP_GET_CATEGORY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CATEGORY_Result>("SP_GET_CATEGORY");
        }
    
        public virtual ObjectResult<string> SP_GET_CNs_FALSE_PATH(Nullable<int> intInventoryID, Nullable<int> intLocationID, Nullable<int> intLibID)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_CNs_FALSE_PATH", intInventoryIDParameter, intLocationIDParameter, intLibIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_CONTRACT_STATUS_Result> SP_GET_CONTRACT_STATUS(Nullable<int> intPoID)
        {
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CONTRACT_STATUS_Result>("SP_GET_CONTRACT_STATUS", intPoIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_COPIES_OF_BIND_Result> SP_GET_COPIES_OF_BIND(Nullable<int> lngItemID, Nullable<int> intIssuedYear, Nullable<int> intLocationID, Nullable<int> lngCopyNumberID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intIssuedYearParameter = intIssuedYear.HasValue ?
                new ObjectParameter("intIssuedYear", intIssuedYear) :
                new ObjectParameter("intIssuedYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var lngCopyNumberIDParameter = lngCopyNumberID.HasValue ?
                new ObjectParameter("lngCopyNumberID", lngCopyNumberID) :
                new ObjectParameter("lngCopyNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COPIES_OF_BIND_Result>("SP_GET_COPIES_OF_BIND", lngItemIDParameter, intIssuedYearParameter, intLocationIDParameter, lngCopyNumberIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_COPIES_TO_BIND_Result> SP_GET_COPIES_TO_BIND(Nullable<int> lngItemID, Nullable<int> intIssueID, Nullable<int> intIssuedYear, Nullable<int> intLocationID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intIssueIDParameter = intIssueID.HasValue ?
                new ObjectParameter("intIssueID", intIssueID) :
                new ObjectParameter("intIssueID", typeof(int));
    
            var intIssuedYearParameter = intIssuedYear.HasValue ?
                new ObjectParameter("intIssuedYear", intIssuedYear) :
                new ObjectParameter("intIssuedYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COPIES_TO_BIND_Result>("SP_GET_COPIES_TO_BIND", lngItemIDParameter, intIssueIDParameter, intIssuedYearParameter, intLocationIDParameter);
        }
    
        public virtual int SP_GET_COPYNUMBER(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_COPYNUMBER", intIDParameter);
        }
    
        public virtual int SP_GET_COPYNUMBERBYVOLUME(Nullable<int> intIssue, Nullable<int> intLocationID)
        {
            var intIssueParameter = intIssue.HasValue ?
                new ObjectParameter("intIssue", intIssue) :
                new ObjectParameter("intIssue", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_COPYNUMBERBYVOLUME", intIssueParameter, intLocationIDParameter);
        }
    
        public virtual int SP_GET_COPYNUMBERITEMPO(Nullable<int> intCopyNumberID)
        {
            var intCopyNumberIDParameter = intCopyNumberID.HasValue ?
                new ObjectParameter("intCopyNumberID", intCopyNumberID) :
                new ObjectParameter("intCopyNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_COPYNUMBERITEMPO", intCopyNumberIDParameter);
        }
    
        public virtual int SP_GET_COPYNUMREM(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_COPYNUMREM", strIDsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_COUNT_HOLDING_ID(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, Nullable<int> intMode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_COUNT_HOLDING_ID", intLibIDParameter, intLocIDParameter, strShelfParameter, intModeParameter);
        }
    
        public virtual ObjectResult<SP_GET_COUNTRIES_Result> SP_GET_COUNTRIES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_COUNTRIES_Result>("SP_GET_COUNTRIES");
        }
    
        public virtual ObjectResult<SP_GET_CURRENCY_Result> SP_GET_CURRENCY(string strCurrencyCode)
        {
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CURRENCY_Result>("SP_GET_CURRENCY", strCurrencyCodeParameter);
        }
    
        public virtual int SP_GET_CURRENT_CHECKIN_INFOR(string strTransactionIDs, string strType)
        {
            var strTransactionIDsParameter = strTransactionIDs != null ?
                new ObjectParameter("strTransactionIDs", strTransactionIDs) :
                new ObjectParameter("strTransactionIDs", typeof(string));
    
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_CURRENT_CHECKIN_INFOR", strTransactionIDsParameter, strTypeParameter);
        }
    
        public virtual int SP_GET_CURRENT_LOANINFOR(string strTransactionIDs, string strType)
        {
            var strTransactionIDsParameter = strTransactionIDs != null ?
                new ObjectParameter("strTransactionIDs", strTransactionIDs) :
                new ObjectParameter("strTransactionIDs", typeof(string));
    
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_CURRENT_LOANINFOR", strTransactionIDsParameter, strTypeParameter);
        }
    
        public virtual ObjectResult<SP_GET_DIC_LIST_Result> SP_GET_DIC_LIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DIC_LIST_Result>("SP_GET_DIC_LIST");
        }
    
        public virtual ObjectResult<SP_GET_DIRLEVEL_Result> SP_GET_DIRLEVEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DIRLEVEL_Result>("SP_GET_DIRLEVEL");
        }
    
        public virtual int SP_GET_EDELIV_ACCINFOR(string strCustomerCode, Nullable<byte> intMonth, Nullable<int> intYear, Nullable<int> intType, ObjectParameter mnySettled, ObjectParameter mnyUnSettled, ObjectParameter mnyRemain)
        {
            var strCustomerCodeParameter = strCustomerCode != null ?
                new ObjectParameter("strCustomerCode", strCustomerCode) :
                new ObjectParameter("strCustomerCode", typeof(string));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(byte));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_EDELIV_ACCINFOR", strCustomerCodeParameter, intMonthParameter, intYearParameter, intTypeParameter, mnySettled, mnyUnSettled, mnyRemain);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_ANNUALSTAT_Result> SP_GET_EDELIV_ANNUALSTAT(Nullable<int> intType)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_ANNUALSTAT_Result>("SP_GET_EDELIV_ANNUALSTAT", intTypeParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_CHECKDEBT_Result> SP_GET_EDELIV_CHECKDEBT(string strCustomerCode, ObjectParameter mnyDebt, ObjectParameter intOutPut)
        {
            var strCustomerCodeParameter = strCustomerCode != null ?
                new ObjectParameter("strCustomerCode", strCustomerCode) :
                new ObjectParameter("strCustomerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_CHECKDEBT_Result>("SP_GET_EDELIV_CHECKDEBT", strCustomerCodeParameter, mnyDebt, intOutPut);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_CUSTOMER_Result> SP_GET_EDELIV_CUSTOMER(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_CUSTOMER_Result>("SP_GET_EDELIV_CUSTOMER", intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_CUSTOMER_BY_CODE_Result> SP_GET_EDELIV_CUSTOMER_BY_CODE(string strCustomerCode)
        {
            var strCustomerCodeParameter = strCustomerCode != null ?
                new ObjectParameter("strCustomerCode", strCustomerCode) :
                new ObjectParameter("strCustomerCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_CUSTOMER_BY_CODE_Result>("SP_GET_EDELIV_CUSTOMER_BY_CODE", strCustomerCodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_DAYSTAT_Result> SP_GET_EDELIV_DAYSTAT(Nullable<int> intType, Nullable<int> intYear, Nullable<int> intMonth, string strTemp)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var strTempParameter = strTemp != null ?
                new ObjectParameter("strTemp", strTemp) :
                new ObjectParameter("strTemp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_DAYSTAT_Result>("SP_GET_EDELIV_DAYSTAT", intTypeParameter, intYearParameter, intMonthParameter, strTempParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_MONTHSTAT_Result> SP_GET_EDELIV_MONTHSTAT(Nullable<int> intType, Nullable<int> intYear, string strTemp)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var strTempParameter = strTemp != null ?
                new ObjectParameter("strTemp", strTemp) :
                new ObjectParameter("strTemp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_MONTHSTAT_Result>("SP_GET_EDELIV_MONTHSTAT", intTypeParameter, intYearParameter, strTempParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_REQMONTH_Result> SP_GET_EDELIV_REQMONTH(Nullable<int> intYear)
        {
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_REQMONTH_Result>("SP_GET_EDELIV_REQMONTH", intYearParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_REQUEST_PROCESS_Result> SP_GET_EDELIV_REQUEST_PROCESS(ObjectParameter intNumOfReqProcessing)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_REQUEST_PROCESS_Result>("SP_GET_EDELIV_REQUEST_PROCESS", intNumOfReqProcessing);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_REQUESTINFFOR_Result> SP_GET_EDELIV_REQUESTINFFOR(Nullable<int> lngRequestID)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_REQUESTINFFOR_Result>("SP_GET_EDELIV_REQUESTINFFOR", lngRequestIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_REQUESTMODE_Result> SP_GET_EDELIV_REQUESTMODE(Nullable<int> intModeID)
        {
            var intModeIDParameter = intModeID.HasValue ?
                new ObjectParameter("intModeID", intModeID) :
                new ObjectParameter("intModeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_REQUESTMODE_Result>("SP_GET_EDELIV_REQUESTMODE", intModeIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_EDELIV_REQUESTS_Result> SP_GET_EDELIV_REQUESTS(Nullable<int> intStatusID, string strRequestIDs)
        {
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            var strRequestIDsParameter = strRequestIDs != null ?
                new ObjectParameter("strRequestIDs", strRequestIDs) :
                new ObjectParameter("strRequestIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EDELIV_REQUESTS_Result>("SP_GET_EDELIV_REQUESTS", intStatusIDParameter, strRequestIDsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_EDELIV_REQYEAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_EDELIV_REQYEAR");
        }
    
        public virtual int SP_GET_EDELIV_TOP20STAT(Nullable<int> intPropertyID)
        {
            var intPropertyIDParameter = intPropertyID.HasValue ?
                new ObjectParameter("intPropertyID", intPropertyID) :
                new ObjectParameter("intPropertyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_EDELIV_TOP20STAT", intPropertyIDParameter);
        }
    
        public virtual int SP_GET_EDELIV_TOPCUSSTAT(string strTimeFrom, string strTimeTo, Nullable<int> intTopItems, Nullable<int> intMinTurn)
        {
            var strTimeFromParameter = strTimeFrom != null ?
                new ObjectParameter("strTimeFrom", strTimeFrom) :
                new ObjectParameter("strTimeFrom", typeof(string));
    
            var strTimeToParameter = strTimeTo != null ?
                new ObjectParameter("strTimeTo", strTimeTo) :
                new ObjectParameter("strTimeTo", typeof(string));
    
            var intTopItemsParameter = intTopItems.HasValue ?
                new ObjectParameter("intTopItems", intTopItems) :
                new ObjectParameter("intTopItems", typeof(int));
    
            var intMinTurnParameter = intMinTurn.HasValue ?
                new ObjectParameter("intMinTurn", intMinTurn) :
                new ObjectParameter("intMinTurn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_EDELIV_TOPCUSSTAT", strTimeFromParameter, strTimeToParameter, intTopItemsParameter, intMinTurnParameter);
        }
    
        public virtual int SP_GET_EDELIV_TOPITEMSTAT(string strTimeFrom, string strTimeTo, Nullable<int> intTopItems, Nullable<int> intMinTurn)
        {
            var strTimeFromParameter = strTimeFrom != null ?
                new ObjectParameter("strTimeFrom", strTimeFrom) :
                new ObjectParameter("strTimeFrom", typeof(string));
    
            var strTimeToParameter = strTimeTo != null ?
                new ObjectParameter("strTimeTo", strTimeTo) :
                new ObjectParameter("strTimeTo", typeof(string));
    
            var intTopItemsParameter = intTopItems.HasValue ?
                new ObjectParameter("intTopItems", intTopItems) :
                new ObjectParameter("intTopItems", typeof(int));
    
            var intMinTurnParameter = intMinTurn.HasValue ?
                new ObjectParameter("intMinTurn", intMinTurn) :
                new ObjectParameter("intMinTurn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_EDELIV_TOPITEMSTAT", strTimeFromParameter, strTimeToParameter, intTopItemsParameter, intMinTurnParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_EREQUEST_BY_TOPNUM(Nullable<int> lngRequestID, Nullable<int> lngTopNum, ObjectParameter lngTotalRec, ObjectParameter lngCurrentPos)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            var lngTopNumParameter = lngTopNum.HasValue ?
                new ObjectParameter("lngTopNum", lngTopNum) :
                new ObjectParameter("lngTopNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_EREQUEST_BY_TOPNUM", lngRequestIDParameter, lngTopNumParameter, lngTotalRec, lngCurrentPos);
        }
    
        public virtual ObjectResult<string> SP_GET_EXIT_TITLE(string strItemType, string strTitle)
        {
            var strItemTypeParameter = strItemType != null ?
                new ObjectParameter("strItemType", strItemType) :
                new ObjectParameter("strItemType", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_EXIT_TITLE", strItemTypeParameter, strTitleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_EXPIRED_SER_ITEM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_EXPIRED_SER_ITEM");
        }
    
        public virtual int SP_GET_FIELD200s(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_FIELD200s", strItemIDsParameter);
        }
    
        public virtual int SP_GET_FIELDS245(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_FIELDS245", strItemIDsParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_FILE_LOCATIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_FILE_LOCATIONS");
        }
    
        public virtual int SP_GET_FILTER_EREQUESTS(string strCustomerName, string strNameOfFile, string strSizeOfFileFrom, string strSizeOfFileTo, Nullable<double> dblPriceOfFileFrom, Nullable<double> dblPriceOfFileTo, Nullable<int> intTimeMode, string strTimeFrom, string strTimeTo)
        {
            var strCustomerNameParameter = strCustomerName != null ?
                new ObjectParameter("strCustomerName", strCustomerName) :
                new ObjectParameter("strCustomerName", typeof(string));
    
            var strNameOfFileParameter = strNameOfFile != null ?
                new ObjectParameter("strNameOfFile", strNameOfFile) :
                new ObjectParameter("strNameOfFile", typeof(string));
    
            var strSizeOfFileFromParameter = strSizeOfFileFrom != null ?
                new ObjectParameter("strSizeOfFileFrom", strSizeOfFileFrom) :
                new ObjectParameter("strSizeOfFileFrom", typeof(string));
    
            var strSizeOfFileToParameter = strSizeOfFileTo != null ?
                new ObjectParameter("strSizeOfFileTo", strSizeOfFileTo) :
                new ObjectParameter("strSizeOfFileTo", typeof(string));
    
            var dblPriceOfFileFromParameter = dblPriceOfFileFrom.HasValue ?
                new ObjectParameter("dblPriceOfFileFrom", dblPriceOfFileFrom) :
                new ObjectParameter("dblPriceOfFileFrom", typeof(double));
    
            var dblPriceOfFileToParameter = dblPriceOfFileTo.HasValue ?
                new ObjectParameter("dblPriceOfFileTo", dblPriceOfFileTo) :
                new ObjectParameter("dblPriceOfFileTo", typeof(double));
    
            var intTimeModeParameter = intTimeMode.HasValue ?
                new ObjectParameter("intTimeMode", intTimeMode) :
                new ObjectParameter("intTimeMode", typeof(int));
    
            var strTimeFromParameter = strTimeFrom != null ?
                new ObjectParameter("strTimeFrom", strTimeFrom) :
                new ObjectParameter("strTimeFrom", typeof(string));
    
            var strTimeToParameter = strTimeTo != null ?
                new ObjectParameter("strTimeTo", strTimeTo) :
                new ObjectParameter("strTimeTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_FILTER_EREQUESTS", strCustomerNameParameter, strNameOfFileParameter, strSizeOfFileFromParameter, strSizeOfFileToParameter, dblPriceOfFileFromParameter, dblPriceOfFileToParameter, intTimeModeParameter, strTimeFromParameter, strTimeToParameter);
        }
    
        public virtual int SP_GET_FILTER_ILLINREQUESTS(string strLibIDs, Nullable<int> intTimeMode, string strTimeFrom, string strTimeTo, string strTitle, string strAuthor, string strPatronName, string strPatronCode, Nullable<int> intDocType)
        {
            var strLibIDsParameter = strLibIDs != null ?
                new ObjectParameter("strLibIDs", strLibIDs) :
                new ObjectParameter("strLibIDs", typeof(string));
    
            var intTimeModeParameter = intTimeMode.HasValue ?
                new ObjectParameter("intTimeMode", intTimeMode) :
                new ObjectParameter("intTimeMode", typeof(int));
    
            var strTimeFromParameter = strTimeFrom != null ?
                new ObjectParameter("strTimeFrom", strTimeFrom) :
                new ObjectParameter("strTimeFrom", typeof(string));
    
            var strTimeToParameter = strTimeTo != null ?
                new ObjectParameter("strTimeTo", strTimeTo) :
                new ObjectParameter("strTimeTo", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intDocTypeParameter = intDocType.HasValue ?
                new ObjectParameter("intDocType", intDocType) :
                new ObjectParameter("intDocType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_FILTER_ILLINREQUESTS", strLibIDsParameter, intTimeModeParameter, strTimeFromParameter, strTimeToParameter, strTitleParameter, strAuthorParameter, strPatronNameParameter, strPatronCodeParameter, intDocTypeParameter);
        }
    
        public virtual int SP_GET_FILTER_ILLOUTREQUESTS(string strLibIDs, Nullable<int> intTimeMode, string strTimeFrom, string strTimeTo, string strTitle, string strAuthor, string strPatronName, string strPatronCode, Nullable<int> intDocType)
        {
            var strLibIDsParameter = strLibIDs != null ?
                new ObjectParameter("strLibIDs", strLibIDs) :
                new ObjectParameter("strLibIDs", typeof(string));
    
            var intTimeModeParameter = intTimeMode.HasValue ?
                new ObjectParameter("intTimeMode", intTimeMode) :
                new ObjectParameter("intTimeMode", typeof(int));
    
            var strTimeFromParameter = strTimeFrom != null ?
                new ObjectParameter("strTimeFrom", strTimeFrom) :
                new ObjectParameter("strTimeFrom", typeof(string));
    
            var strTimeToParameter = strTimeTo != null ?
                new ObjectParameter("strTimeTo", strTimeTo) :
                new ObjectParameter("strTimeTo", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intDocTypeParameter = intDocType.HasValue ?
                new ObjectParameter("intDocType", intDocType) :
                new ObjectParameter("intDocType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_FILTER_ILLOUTREQUESTS", strLibIDsParameter, intTimeModeParameter, strTimeFromParameter, strTimeToParameter, strTitleParameter, strAuthorParameter, strPatronNameParameter, strPatronCodeParameter, intDocTypeParameter);
        }
    
        public virtual int SP_GET_FINE_FEES(string strTransactionIDs)
        {
            var strTransactionIDsParameter = strTransactionIDs != null ?
                new ObjectParameter("strTransactionIDs", strTransactionIDs) :
                new ObjectParameter("strTransactionIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_FINE_FEES", strTransactionIDsParameter);
        }
    
        public virtual int SP_GET_FORMID(Nullable<int> intTyeID, ObjectParameter intFormID)
        {
            var intTyeIDParameter = intTyeID.HasValue ?
                new ObjectParameter("intTyeID", intTyeID) :
                new ObjectParameter("intTyeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_FORMID", intTyeIDParameter, intFormID);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_FREE_ITEM_NUM(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_FREE_ITEM_NUM", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_GEN_CALSSIFICATION_Result> SP_GET_GEN_CALSSIFICATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_GEN_CALSSIFICATION_Result>("SP_GET_GEN_CALSSIFICATION");
        }
    
        public virtual ObjectResult<SP_GET_GEN_EXPIRED_Result> SP_GET_GEN_EXPIRED()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_GEN_EXPIRED_Result>("SP_GET_GEN_EXPIRED");
        }
    
        public virtual ObjectResult<SP_GET_GEN_ISSUE_ITEM_Result> SP_GET_GEN_ISSUE_ITEM(Nullable<int> intAcqSourceID, Nullable<int> intOnSubscription)
        {
            var intAcqSourceIDParameter = intAcqSourceID.HasValue ?
                new ObjectParameter("intAcqSourceID", intAcqSourceID) :
                new ObjectParameter("intAcqSourceID", typeof(int));
    
            var intOnSubscriptionParameter = intOnSubscription.HasValue ?
                new ObjectParameter("intOnSubscription", intOnSubscription) :
                new ObjectParameter("intOnSubscription", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_GEN_ISSUE_ITEM_Result>("SP_GET_GEN_ISSUE_ITEM", intAcqSourceIDParameter, intOnSubscriptionParameter);
        }
    
        public virtual int SP_GET_GENARATEITEMPO(Nullable<int> intItemID, Nullable<int> intYear, Nullable<int> intMonth, string strIssueNo, string strML, ObjectParameter strTitle)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var strIssueNoParameter = strIssueNo != null ?
                new ObjectParameter("strIssueNo", strIssueNo) :
                new ObjectParameter("strIssueNo", typeof(string));
    
            var strMLParameter = strML != null ?
                new ObjectParameter("strML", strML) :
                new ObjectParameter("strML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_GENARATEITEMPO", intItemIDParameter, intYearParameter, intMonthParameter, strIssueNoParameter, strMLParameter, strTitle);
        }
    
        public virtual ObjectResult<SP_GET_GENERAL_LOC_INFOR_Result> SP_GET_GENERAL_LOC_INFOR(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, Nullable<int> intMode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_GENERAL_LOC_INFOR_Result>("SP_GET_GENERAL_LOC_INFOR", intLibIDParameter, intLocIDParameter, strShelfParameter, intModeParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOLDING_HOL_INFOR_Result> SP_GET_HOLDING_HOL_INFOR(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strCopyNumber, string strCallNumber, string strVolume, string strTitle, Nullable<int> intNextID, Nullable<int> intMode, ObjectParameter intSaveID)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intNextIDParameter = intNextID.HasValue ?
                new ObjectParameter("intNextID", intNextID) :
                new ObjectParameter("intNextID", typeof(int));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOLDING_HOL_INFOR_Result>("SP_GET_HOLDING_HOL_INFOR", intLibIDParameter, intLocIDParameter, strShelfParameter, strCopyNumberParameter, strCallNumberParameter, strVolumeParameter, strTitleParameter, intNextIDParameter, intModeParameter, intSaveID);
        }
    
        public virtual ObjectResult<SP_GET_HOLDING_HOL_INFOR1_Result> SP_GET_HOLDING_HOL_INFOR1(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strCopyNumber, string strCallNumber, string strVolume, string strTitle, Nullable<int> intNextID, Nullable<int> intMode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intNextIDParameter = intNextID.HasValue ?
                new ObjectParameter("intNextID", intNextID) :
                new ObjectParameter("intNextID", typeof(int));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOLDING_HOL_INFOR1_Result>("SP_GET_HOLDING_HOL_INFOR1", intLibIDParameter, intLocIDParameter, strShelfParameter, strCopyNumberParameter, strCallNumberParameter, strVolumeParameter, strTitleParameter, intNextIDParameter, intModeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_HOLDING_IDs(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, Nullable<int> intMode, Nullable<int> intCountOnly)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var intCountOnlyParameter = intCountOnly.HasValue ?
                new ObjectParameter("intCountOnly", intCountOnly) :
                new ObjectParameter("intCountOnly", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_HOLDING_IDs", intLibIDParameter, intLocIDParameter, strShelfParameter, intModeParameter, intCountOnlyParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOLDING_INFO_Result> SP_GET_HOLDING_INFO(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOLDING_INFO_Result>("SP_GET_HOLDING_INFO", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOLDING_INFOR_Result> SP_GET_HOLDING_INFOR(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strCopyNumber, string strCallNumber, string strVolume, string strTitle, string strIDs, Nullable<int> intMode, string strItemCode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOLDING_INFOR_Result>("SP_GET_HOLDING_INFOR", intLibIDParameter, intLocIDParameter, strShelfParameter, strCopyNumberParameter, strCallNumberParameter, strVolumeParameter, strTitleParameter, strIDsParameter, intModeParameter, strItemCodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOLDING_LIBLOC_INFOR_Result> SP_GET_HOLDING_LIBLOC_INFOR(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strCopyNumber, string strCallNumber, string strVolume, string strTitle, string strIDs, Nullable<int> intMode, string strItemCode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOLDING_LIBLOC_INFOR_Result>("SP_GET_HOLDING_LIBLOC_INFOR", intLibIDParameter, intLocIDParameter, strShelfParameter, strCopyNumberParameter, strCallNumberParameter, strVolumeParameter, strTitleParameter, strIDsParameter, intModeParameter, strItemCodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOLDING_REMOVED_Result> SP_GET_HOLDING_REMOVED(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strCopyNumber, string strCallNumber, string strVolume, string strTitle)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOLDING_REMOVED_Result>("SP_GET_HOLDING_REMOVED", intLibIDParameter, intLocIDParameter, strShelfParameter, strCopyNumberParameter, strCallNumberParameter, strVolumeParameter, strTitleParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_HOLDING_REMOVED_IDs(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strCopyNumber, string strCallNumber, string strVolume, string strTitle, string strItemCode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_HOLDING_REMOVED_IDs", intLibIDParameter, intLocIDParameter, strShelfParameter, strCopyNumberParameter, strCallNumberParameter, strVolumeParameter, strTitleParameter, strItemCodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOLDING_REMOVED_ONIDs_Result> SP_GET_HOLDING_REMOVED_ONIDs(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOLDING_REMOVED_ONIDs_Result>("SP_GET_HOLDING_REMOVED_ONIDs", strIDsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_HOLDING_SUMMARY_INFOR(Nullable<int> intLibID, Nullable<int> intLocID, Nullable<int> intMode)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_HOLDING_SUMMARY_INFOR", intLibIDParameter, intLocIDParameter, intModeParameter);
        }
    
        public virtual ObjectResult<SP_GET_ILL_ID_INCOMING_Result> SP_GET_ILL_ID_INCOMING()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_ID_INCOMING_Result>("SP_GET_ILL_ID_INCOMING");
        }
    
        public virtual ObjectResult<SP_GET_ILL_ID_OUTGOING_Result> SP_GET_ILL_ID_OUTGOING()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_ID_OUTGOING_Result>("SP_GET_ILL_ID_OUTGOING");
        }
    
        public virtual ObjectResult<SP_GET_ILL_IN_HISTORY_Result> SP_GET_ILL_IN_HISTORY(Nullable<int> lngRequestID, Nullable<int> bitAlert)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            var bitAlertParameter = bitAlert.HasValue ?
                new ObjectParameter("bitAlert", bitAlert) :
                new ObjectParameter("bitAlert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_IN_HISTORY_Result>("SP_GET_ILL_IN_HISTORY", lngRequestIDParameter, bitAlertParameter);
        }
    
        public virtual ObjectResult<SP_GET_ILL_IN_REQUEST_PROCESS_Result> SP_GET_ILL_IN_REQUEST_PROCESS(ObjectParameter intNumOfReqProcessing)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_IN_REQUEST_PROCESS_Result>("SP_GET_ILL_IN_REQUEST_PROCESS", intNumOfReqProcessing);
        }
    
        public virtual ObjectResult<SP_GET_ILL_IN_REQUESTS_Result> SP_GET_ILL_IN_REQUESTS(Nullable<int> intStatusID, string strRequestIDs)
        {
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            var strRequestIDsParameter = strRequestIDs != null ?
                new ObjectParameter("strRequestIDs", strRequestIDs) :
                new ObjectParameter("strRequestIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_IN_REQUESTS_Result>("SP_GET_ILL_IN_REQUESTS", intStatusIDParameter, strRequestIDsParameter);
        }
    
        public virtual ObjectResult<SP_GET_ILL_LIBSYMBOL_Result> SP_GET_ILL_LIBSYMBOL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_LIBSYMBOL_Result>("SP_GET_ILL_LIBSYMBOL");
        }
    
        public virtual ObjectResult<SP_GET_ILL_OUT_HISTORY_Result> SP_GET_ILL_OUT_HISTORY(Nullable<int> lngRequestID, Nullable<int> bitAlert)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            var bitAlertParameter = bitAlert.HasValue ?
                new ObjectParameter("bitAlert", bitAlert) :
                new ObjectParameter("bitAlert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_OUT_HISTORY_Result>("SP_GET_ILL_OUT_HISTORY", lngRequestIDParameter, bitAlertParameter);
        }
    
        public virtual ObjectResult<SP_GET_ILL_OUT_REQUEST_PROCESS_Result> SP_GET_ILL_OUT_REQUEST_PROCESS(ObjectParameter intNumOfReqProcessing)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_OUT_REQUEST_PROCESS_Result>("SP_GET_ILL_OUT_REQUEST_PROCESS", intNumOfReqProcessing);
        }
    
        public virtual ObjectResult<SP_GET_ILL_OUT_REQUESTS_Result> SP_GET_ILL_OUT_REQUESTS(Nullable<int> intStatusID, string strRequestIDs)
        {
            var intStatusIDParameter = intStatusID.HasValue ?
                new ObjectParameter("intStatusID", intStatusID) :
                new ObjectParameter("intStatusID", typeof(int));
    
            var strRequestIDsParameter = strRequestIDs != null ?
                new ObjectParameter("strRequestIDs", strRequestIDs) :
                new ObjectParameter("strRequestIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_OUT_REQUESTS_Result>("SP_GET_ILL_OUT_REQUESTS", intStatusIDParameter, strRequestIDsParameter);
        }
    
        public virtual ObjectResult<SP_GET_ILL_REASONCODE_Result> SP_GET_ILL_REASONCODE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ILL_REASONCODE_Result>("SP_GET_ILL_REASONCODE");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_ILLINREQUEST_BY_TOPNUM(Nullable<int> lngRequestID, Nullable<int> lngTopNum, ObjectParameter lngTotalRec, ObjectParameter lngCurrentPos)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            var lngTopNumParameter = lngTopNum.HasValue ?
                new ObjectParameter("lngTopNum", lngTopNum) :
                new ObjectParameter("lngTopNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_ILLINREQUEST_BY_TOPNUM", lngRequestIDParameter, lngTopNumParameter, lngTotalRec, lngCurrentPos);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_ILLOUTREQUEST_BY_TOPNUM(Nullable<int> lngRequestID, Nullable<int> lngTopNum, ObjectParameter lngTotalRec, ObjectParameter lngCurrentPos)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            var lngTopNumParameter = lngTopNum.HasValue ?
                new ObjectParameter("lngTopNum", lngTopNum) :
                new ObjectParameter("lngTopNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_ILLOUTREQUEST_BY_TOPNUM", lngRequestIDParameter, lngTopNumParameter, lngTotalRec, lngCurrentPos);
        }
    
        public virtual ObjectResult<SP_GET_ISSUE_INFOR_Result> SP_GET_ISSUE_INFOR(Nullable<int> lngIssueID)
        {
            var lngIssueIDParameter = lngIssueID.HasValue ?
                new ObjectParameter("lngIssueID", lngIssueID) :
                new ObjectParameter("lngIssueID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ISSUE_INFOR_Result>("SP_GET_ISSUE_INFOR", lngIssueIDParameter);
        }
    
        public virtual int SP_GET_ISSUEINYEARS(string strIDs, Nullable<int> intYears)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intYearsParameter = intYears.HasValue ?
                new ObjectParameter("intYears", intYears) :
                new ObjectParameter("intYears", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_ISSUEINYEARS", strIDsParameter, intYearsParameter);
        }
    
        public virtual int SP_GET_ITEM(string strFromDate, string strToDate, Nullable<int> intLocationID)
        {
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_ITEM", strFromDateParameter, strToDateParameter, intLocationIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_ITEM_INFOR_Result> SP_GET_ITEM_INFOR(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ITEM_INFOR_Result>("SP_GET_ITEM_INFOR", intItemIDParameter);
        }
    
        public virtual int SP_GET_ITEM_REVIEWER(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_ITEM_REVIEWER", strIDsParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_ITEMCODE_BYPO(string strPOCode)
        {
            var strPOCodeParameter = strPOCode != null ?
                new ObjectParameter("strPOCode", strPOCode) :
                new ObjectParameter("strPOCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_ITEMCODE_BYPO", strPOCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_ITEMID_BYCODE(string strItemCode)
        {
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_ITEMID_BYCODE", strItemCodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_ITEMS_Result> SP_GET_ITEMS(string strCode, Nullable<int> intItemID)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ITEMS_Result>("SP_GET_ITEMS", strCodeParameter, intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_ITEMTYPES_Result> SP_GET_ITEMTYPES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ITEMTYPES_Result>("SP_GET_ITEMTYPES");
        }
    
        public virtual ObjectResult<SP_GET_LANGUAGES_Result> SP_GET_LANGUAGES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LANGUAGES_Result>("SP_GET_LANGUAGES");
        }
    
        public virtual ObjectResult<SP_GET_LAST_ISSUE_INFOR_Result> SP_GET_LAST_ISSUE_INFOR(Nullable<int> lngItemID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LAST_ISSUE_INFOR_Result>("SP_GET_LAST_ISSUE_INFOR", lngItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_LIBRARY_Result> SP_GET_LIBRARY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LIBRARY_Result>("SP_GET_LIBRARY");
        }
    
        public virtual ObjectResult<SP_GET_LIST_POS_Result> SP_GET_LIST_POS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LIST_POS_Result>("SP_GET_LIST_POS");
        }
    
        public virtual ObjectResult<SP_GET_LOANNING_INFOR_Result> SP_GET_LOANNING_INFOR(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_LOANNING_INFOR_Result>("SP_GET_LOANNING_INFOR", intItemIDParameter);
        }
    
        public virtual int SP_GET_LOCATIONITEMPO(Nullable<int> intIssue)
        {
            var intIssueParameter = intIssue.HasValue ?
                new ObjectParameter("intIssue", intIssue) :
                new ObjectParameter("intIssue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_LOCATIONITEMPO", intIssueParameter);
        }
    
        public virtual int SP_GET_LOCKEDPATRONS(string strPatronCode, string strLockDateTo, string strLockDateFrom)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strLockDateToParameter = strLockDateTo != null ?
                new ObjectParameter("strLockDateTo", strLockDateTo) :
                new ObjectParameter("strLockDateTo", typeof(string));
    
            var strLockDateFromParameter = strLockDateFrom != null ?
                new ObjectParameter("strLockDateFrom", strLockDateFrom) :
                new ObjectParameter("strLockDateFrom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_LOCKEDPATRONS", strPatronCodeParameter, strLockDateToParameter, strLockDateFromParameter);
        }
    
        public virtual ObjectResult<SP_GET_MEDIUMS_Result> SP_GET_MEDIUMS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_MEDIUMS_Result>("SP_GET_MEDIUMS");
        }
    
        public virtual int SP_GET_NumBookNotAccept(string strCode, Nullable<int> intPOIDi, ObjectParameter intResult)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var intPOIDiParameter = intPOIDi.HasValue ?
                new ObjectParameter("intPOIDi", intPOIDi) :
                new ObjectParameter("intPOIDi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_NumBookNotAccept", strCodeParameter, intPOIDiParameter, intResult);
        }
    
        public virtual ObjectResult<SP_GET_OAI_URL_Result> SP_GET_OAI_URL(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_OAI_URL_Result>("SP_GET_OAI_URL", intIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_PATRON_COPYNUMBERS_Result> SP_GET_PATRON_COPYNUMBERS(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_COPYNUMBERS_Result>("SP_GET_PATRON_COPYNUMBERS", intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_PATRON_FORGOTPASSWORD_Result> SP_GET_PATRON_FORGOTPASSWORD(string strPatronCode)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_FORGOTPASSWORD_Result>("SP_GET_PATRON_FORGOTPASSWORD", strPatronCodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_PATRON_GROUP_Result> SP_GET_PATRON_GROUP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_GROUP_Result>("SP_GET_PATRON_GROUP");
        }
    
        public virtual ObjectResult<SP_GET_PATRON_INFOR_Result> SP_GET_PATRON_INFOR(string strFullName, string strPatronCode, string strFixDueDate)
        {
            var strFullNameParameter = strFullName != null ?
                new ObjectParameter("strFullName", strFullName) :
                new ObjectParameter("strFullName", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strFixDueDateParameter = strFixDueDate != null ?
                new ObjectParameter("strFixDueDate", strFixDueDate) :
                new ObjectParameter("strFixDueDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_INFOR_Result>("SP_GET_PATRON_INFOR", strFullNameParameter, strPatronCodeParameter, strFixDueDateParameter);
        }
    
        public virtual ObjectResult<SP_GET_PATRON_INLIB_Result> SP_GET_PATRON_INLIB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_INLIB_Result>("SP_GET_PATRON_INLIB");
        }
    
        public virtual ObjectResult<SP_GET_PATRON_LOAN_DETAILINFOR_Result> SP_GET_PATRON_LOAN_DETAILINFOR(string strPatronCode, Nullable<int> intLoanMode, Nullable<int> intMode)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intLoanModeParameter = intLoanMode.HasValue ?
                new ObjectParameter("intLoanMode", intLoanMode) :
                new ObjectParameter("intLoanMode", typeof(int));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_LOAN_DETAILINFOR_Result>("SP_GET_PATRON_LOAN_DETAILINFOR", strPatronCodeParameter, intLoanModeParameter, intModeParameter);
        }
    
        public virtual ObjectResult<SP_GET_PATRON_LOAN_INFOR_Result> SP_GET_PATRON_LOAN_INFOR(string strPatronCode)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_LOAN_INFOR_Result>("SP_GET_PATRON_LOAN_INFOR", strPatronCodeParameter);
        }
    
        public virtual int SP_GET_PATRON_MAX(string strFromDate, string strToDate, Nullable<int> intTotal, Nullable<int> intLocationID, Nullable<int> intUserID)
        {
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var intTotalParameter = intTotal.HasValue ?
                new ObjectParameter("intTotal", intTotal) :
                new ObjectParameter("intTotal", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_PATRON_MAX", strFromDateParameter, strToDateParameter, intTotalParameter, intLocationIDParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_PATRON_NAME_REQUEST_Result> SP_GET_PATRON_NAME_REQUEST(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_NAME_REQUEST_Result>("SP_GET_PATRON_NAME_REQUEST", intUserIDParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_PATRON_NOTE(string strPatronCode)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_PATRON_NOTE", strPatronCodeParameter);
        }
    
        public virtual ObjectResult<SP_GET_PATRON_ONLOAN_COPIES_Result> SP_GET_PATRON_ONLOAN_COPIES(Nullable<int> lngPatronID)
        {
            var lngPatronIDParameter = lngPatronID.HasValue ?
                new ObjectParameter("lngPatronID", lngPatronID) :
                new ObjectParameter("lngPatronID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PATRON_ONLOAN_COPIES_Result>("SP_GET_PATRON_ONLOAN_COPIES", lngPatronIDParameter);
        }
    
        public virtual int SP_GET_PATRON_TOTAL(Nullable<int> intMonth, Nullable<int> intYear, Nullable<int> intLocationID, Nullable<int> intUserID)
        {
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_PATRON_TOTAL", intMonthParameter, intYearParameter, intLocationIDParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_PO_STATUS_Result> SP_GET_PO_STATUS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PO_STATUS_Result>("SP_GET_PO_STATUS");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_POIDFROMACQITEM(Nullable<int> intACQITEMID)
        {
            var intACQITEMIDParameter = intACQITEMID.HasValue ?
                new ObjectParameter("intACQITEMID", intACQITEMID) :
                new ObjectParameter("intACQITEMID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_POIDFROMACQITEM", intACQITEMIDParameter);
        }
    
        public virtual int SP_GET_PORTRAIT_PATRON_DEL(string strPatronIDs)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_PORTRAIT_PATRON_DEL", strPatronIDsParameter);
        }
    
        public virtual ObjectResult<SP_GET_PUBLISHERS_Result> SP_GET_PUBLISHERS(Nullable<int> strPubName)
        {
            var strPubNameParameter = strPubName.HasValue ?
                new ObjectParameter("strPubName", strPubName) :
                new ObjectParameter("strPubName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PUBLISHERS_Result>("SP_GET_PUBLISHERS", strPubNameParameter);
        }
    
        public virtual ObjectResult<SP_GET_RECEIVED_COPIES_Result> SP_GET_RECEIVED_COPIES(Nullable<int> lngIssueID, Nullable<int> intLocationID, ObjectParameter intRemainCopies)
        {
            var lngIssueIDParameter = lngIssueID.HasValue ?
                new ObjectParameter("lngIssueID", lngIssueID) :
                new ObjectParameter("lngIssueID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_RECEIVED_COPIES_Result>("SP_GET_RECEIVED_COPIES", lngIssueIDParameter, intLocationIDParameter, intRemainCopies);
        }
    
        public virtual ObjectResult<SP_GET_RECEIVED_ISSUES_Result> SP_GET_RECEIVED_ISSUES(Nullable<int> lngItemID, Nullable<int> intYear, Nullable<int> intMonth, string strVolumeByPublisher)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var strVolumeByPublisherParameter = strVolumeByPublisher != null ?
                new ObjectParameter("strVolumeByPublisher", strVolumeByPublisher) :
                new ObjectParameter("strVolumeByPublisher", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_RECEIVED_ISSUES_Result>("SP_GET_RECEIVED_ISSUES", lngItemIDParameter, intYearParameter, intMonthParameter, strVolumeByPublisherParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_RECEIVED_VOLUMES(Nullable<int> lngItemID, Nullable<int> intYear, Nullable<int> intMonth)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_RECEIVED_VOLUMES", lngItemIDParameter, intYearParameter, intMonthParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_RECEIVED_YEARS(Nullable<int> intLocationID, Nullable<int> intItemID)
        {
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_RECEIVED_YEARS", intLocationIDParameter, intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_RECORDTYPES_Result> SP_GET_RECORDTYPES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_RECORDTYPES_Result>("SP_GET_RECORDTYPES");
        }
    
        public virtual ObjectResult<SP_GET_REGULARITY_Result> SP_GET_REGULARITY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_REGULARITY_Result>("SP_GET_REGULARITY");
        }
    
        public virtual int SP_GET_REMAIN_COPIES(Nullable<int> lngItemID, Nullable<int> intPOID, ObjectParameter intRemainCopies)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_REMAIN_COPIES", lngItemIDParameter, intPOIDParameter, intRemainCopies);
        }
    
        public virtual ObjectResult<SP_GET_ROUTING_INFOR_Result> SP_GET_ROUTING_INFOR(Nullable<int> lngItemID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ROUTING_INFOR_Result>("SP_GET_ROUTING_INFOR", lngItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_SER_CATEGORIES_Result> SP_GET_SER_CATEGORIES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SER_CATEGORIES_Result>("SP_GET_SER_CATEGORIES");
        }
    
        public virtual ObjectResult<string> SP_GET_SHELF(Nullable<int> intLibID, Nullable<int> intLocID)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_SHELF", intLibIDParameter, intLocIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_SOURCE_Result> SP_GET_SOURCE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SOURCE_Result>("SP_GET_SOURCE");
        }
    
        public virtual ObjectResult<SP_GET_SOURCE_STATUS_SER_ITEM_Result> SP_GET_SOURCE_STATUS_SER_ITEM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SOURCE_STATUS_SER_ITEM_Result>("SP_GET_SOURCE_STATUS_SER_ITEM");
        }
    
        public virtual int SP_GET_STAT_BOOK(string strIDs, string strLocationID)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var strLocationIDParameter = strLocationID != null ?
                new ObjectParameter("strLocationID", strLocationID) :
                new ObjectParameter("strLocationID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_STAT_BOOK", strIDsParameter, strLocationIDParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_SYS_TEMP_FILE(Nullable<int> intModuleID)
        {
            var intModuleIDParameter = intModuleID.HasValue ?
                new ObjectParameter("intModuleID", intModuleID) :
                new ObjectParameter("intModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_SYS_TEMP_FILE", intModuleIDParameter);
        }
    
        public virtual int SP_GET_SYS_TEMPLATE(Nullable<int> intTemplateID, Nullable<int> intTemplateType)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_SYS_TEMPLATE", intTemplateIDParameter, intTemplateTypeParameter);
        }
    
        public virtual ObjectResult<SP_GET_SYS_VIEW_Result> SP_GET_SYS_VIEW(string strUserName)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SYS_VIEW_Result>("SP_GET_SYS_VIEW", strUserNameParameter);
        }
    
        public virtual int SP_GET_TITLES(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_TITLES", strItemIDsParameter);
        }
    
        public virtual int SP_GET_TOTAL_ISSUE(ObjectParameter intTotalID, ObjectParameter intTotalReceivedCopies, ObjectParameter intTotalVolumeByLibrary)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_TOTAL_ISSUE", intTotalID, intTotalReceivedCopies, intTotalVolumeByLibrary);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_TOTAL_PATRONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_TOTAL_PATRONS");
        }
    
        public virtual int SP_GET_TYPEID(string strItemType, ObjectParameter intType)
        {
            var strItemTypeParameter = strItemType != null ?
                new ObjectParameter("strItemType", strItemType) :
                new ObjectParameter("strItemType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_TYPEID", strItemTypeParameter, intType);
        }
    
        public virtual int SP_GET_UNRECEIVEDISSUES_TO_CLAIM(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_UNRECEIVEDISSUES_TO_CLAIM", strIDsParameter);
        }
    
        public virtual ObjectResult<SP_GET_USER_RIGHT_Result> SP_GET_USER_RIGHT(Nullable<int> intUSERID)
        {
            var intUSERIDParameter = intUSERID.HasValue ?
                new ObjectParameter("intUSERID", intUSERID) :
                new ObjectParameter("intUSERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_USER_RIGHT_Result>("SP_GET_USER_RIGHT", intUSERIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_VENDOR_TO_CLAIM_Result> SP_GET_VENDOR_TO_CLAIM(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VENDOR_TO_CLAIM_Result>("SP_GET_VENDOR_TO_CLAIM", strIDsParameter);
        }
    
        public virtual ObjectResult<SP_GET_VENDORS_Result> SP_GET_VENDORS(Nullable<int> intVendorID)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VENDORS_Result>("SP_GET_VENDORS", intVendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_VOLUMEBYLIBRARYS_Result> SP_GET_VOLUMEBYLIBRARYS(Nullable<int> lngItemID, Nullable<int> intIssuedYear, Nullable<int> intLocationID, Nullable<int> intIndex, string strVolumeByLibrary)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intIssuedYearParameter = intIssuedYear.HasValue ?
                new ObjectParameter("intIssuedYear", intIssuedYear) :
                new ObjectParameter("intIssuedYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intIndexParameter = intIndex.HasValue ?
                new ObjectParameter("intIndex", intIndex) :
                new ObjectParameter("intIndex", typeof(int));
    
            var strVolumeByLibraryParameter = strVolumeByLibrary != null ?
                new ObjectParameter("strVolumeByLibrary", strVolumeByLibrary) :
                new ObjectParameter("strVolumeByLibrary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_VOLUMEBYLIBRARYS_Result>("SP_GET_VOLUMEBYLIBRARYS", lngItemIDParameter, intIssuedYearParameter, intLocationIDParameter, intIndexParameter, strVolumeByLibraryParameter);
        }
    
        public virtual int SP_GET_VOLUMEITEMPO(Nullable<int> intIssue, Nullable<int> intLocationID)
        {
            var intIssueParameter = intIssue.HasValue ?
                new ObjectParameter("intIssue", intIssue) :
                new ObjectParameter("intIssue", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_VOLUMEITEMPO", intIssueParameter, intLocationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_YEARITEMPO(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_YEARITEMPO", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_ZSERVER_LIST_Result> SP_GET_ZSERVER_LIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ZSERVER_LIST_Result>("SP_GET_ZSERVER_LIST");
        }
    
        public virtual ObjectResult<SP_GETCATDICLIST_Result> SP_GETCATDICLIST(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETCATDICLIST_Result>("SP_GETCATDICLIST", intIDParameter);
        }
    
        public virtual ObjectResult<SP_GETCATDICLIST2FIELD_Result> SP_GETCATDICLIST2FIELD(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETCATDICLIST2FIELD_Result>("SP_GETCATDICLIST2FIELD", intIDParameter);
        }
    
        public virtual ObjectResult<SP_GETCOPYNUMBERINFOR_Result> SP_GETCOPYNUMBERINFOR(string strCopyNumber)
        {
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETCOPYNUMBERINFOR_Result>("SP_GETCOPYNUMBERINFOR", strCopyNumberParameter);
        }
    
        public virtual int SP_GETFIELDSTOVIEW(Nullable<int> intIsAuthority, string strFCURL1, string strFCURL2, string strFCURL3, string strFCURL4, string strFCURL5, string strFCURL6, string strPickedFieldCodes, string strMandatoryFieldCodes, Nullable<int> intFormID)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFCURL1Parameter = strFCURL1 != null ?
                new ObjectParameter("strFCURL1", strFCURL1) :
                new ObjectParameter("strFCURL1", typeof(string));
    
            var strFCURL2Parameter = strFCURL2 != null ?
                new ObjectParameter("strFCURL2", strFCURL2) :
                new ObjectParameter("strFCURL2", typeof(string));
    
            var strFCURL3Parameter = strFCURL3 != null ?
                new ObjectParameter("strFCURL3", strFCURL3) :
                new ObjectParameter("strFCURL3", typeof(string));
    
            var strFCURL4Parameter = strFCURL4 != null ?
                new ObjectParameter("strFCURL4", strFCURL4) :
                new ObjectParameter("strFCURL4", typeof(string));
    
            var strFCURL5Parameter = strFCURL5 != null ?
                new ObjectParameter("strFCURL5", strFCURL5) :
                new ObjectParameter("strFCURL5", typeof(string));
    
            var strFCURL6Parameter = strFCURL6 != null ?
                new ObjectParameter("strFCURL6", strFCURL6) :
                new ObjectParameter("strFCURL6", typeof(string));
    
            var strPickedFieldCodesParameter = strPickedFieldCodes != null ?
                new ObjectParameter("strPickedFieldCodes", strPickedFieldCodes) :
                new ObjectParameter("strPickedFieldCodes", typeof(string));
    
            var strMandatoryFieldCodesParameter = strMandatoryFieldCodes != null ?
                new ObjectParameter("strMandatoryFieldCodes", strMandatoryFieldCodes) :
                new ObjectParameter("strMandatoryFieldCodes", typeof(string));
    
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GETFIELDSTOVIEW", intIsAuthorityParameter, strFCURL1Parameter, strFCURL2Parameter, strFCURL3Parameter, strFCURL4Parameter, strFCURL5Parameter, strFCURL6Parameter, strPickedFieldCodesParameter, strMandatoryFieldCodesParameter, intFormIDParameter);
        }
    
        public virtual ObjectResult<SP_GETLOANTYPES_Result> SP_GETLOANTYPES(Nullable<int> intLoanTypeID)
        {
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETLOANTYPES_Result>("SP_GETLOANTYPES", intLoanTypeIDParameter);
        }
    
        public virtual int SP_GETLOCBYCOPYNUMBER(string strCopyNumber, Nullable<int> lngItemID, ObjectParameter intOutValue)
        {
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GETLOCBYCOPYNUMBER", strCopyNumberParameter, lngItemIDParameter, intOutValue);
        }
    
        public virtual ObjectResult<SP_GETPATRONHOLD_Result> SP_GETPATRONHOLD(string strCopyNumber, Nullable<int> lngItemID, Nullable<int> intLocationID)
        {
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETPATRONHOLD_Result>("SP_GETPATRONHOLD", strCopyNumberParameter, lngItemIDParameter, intLocationIDParameter);
        }
    
        public virtual ObjectResult<SP_GETPATRONLOCATIONS_Result> SP_GETPATRONLOCATIONS(string strPatronCode)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETPATRONLOCATIONS_Result>("SP_GETPATRONLOCATIONS", strPatronCodeParameter);
        }
    
        public virtual ObjectResult<SP_GETREFERENCE_BYFIELCODE_Result> SP_GETREFERENCE_BYFIELCODE(string strFieldCode)
        {
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETREFERENCE_BYFIELCODE_Result>("SP_GETREFERENCE_BYFIELCODE", strFieldCodeParameter);
        }
    
        public virtual ObjectResult<SP_GETSCHEDULE_Result> SP_GETSCHEDULE(Nullable<int> intLocationID, string strOffDay)
        {
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strOffDayParameter = strOffDay != null ?
                new ObjectParameter("strOffDay", strOffDay) :
                new ObjectParameter("strOffDay", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETSCHEDULE_Result>("SP_GETSCHEDULE", intLocationIDParameter, strOffDayParameter);
        }
    
        public virtual ObjectResult<SP_GETTOTAL_HOLDINGCOPIES_Result> SP_GETTOTAL_HOLDINGCOPIES(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETTOTAL_HOLDINGCOPIES_Result>("SP_GETTOTAL_HOLDINGCOPIES", intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_GETUSER_ROUTING_LOCATIONS_Result> SP_GETUSER_ROUTING_LOCATIONS(Nullable<int> intUserID, Nullable<int> intItemID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETUSER_ROUTING_LOCATIONS_Result>("SP_GETUSER_ROUTING_LOCATIONS", intUserIDParameter, intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_GETUSERLOCATIONS_Result> SP_GETUSERLOCATIONS(Nullable<int> intSubsystemID, Nullable<int> intUserID)
        {
            var intSubsystemIDParameter = intSubsystemID.HasValue ?
                new ObjectParameter("intSubsystemID", intSubsystemID) :
                new ObjectParameter("intSubsystemID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETUSERLOCATIONS_Result>("SP_GETUSERLOCATIONS", intSubsystemIDParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_GETWORKINGTIME_Result> SP_GETWORKINGTIME(Nullable<int> intWeekDay, Nullable<int> intLocationID)
        {
            var intWeekDayParameter = intWeekDay.HasValue ?
                new ObjectParameter("intWeekDay", intWeekDay) :
                new ObjectParameter("intWeekDay", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETWORKINGTIME_Result>("SP_GETWORKINGTIME", intWeekDayParameter, intLocationIDParameter);
        }
    
        public virtual ObjectResult<SP_HELP_CAT_DIC_SELECT_BYDICID_Result> SP_HELP_CAT_DIC_SELECT_BYDICID(string strCatDicID, string strNotSelectCatDicID, Nullable<bool> blnType)
        {
            var strCatDicIDParameter = strCatDicID != null ?
                new ObjectParameter("strCatDicID", strCatDicID) :
                new ObjectParameter("strCatDicID", typeof(string));
    
            var strNotSelectCatDicIDParameter = strNotSelectCatDicID != null ?
                new ObjectParameter("strNotSelectCatDicID", strNotSelectCatDicID) :
                new ObjectParameter("strNotSelectCatDicID", typeof(string));
    
            var blnTypeParameter = blnType.HasValue ?
                new ObjectParameter("blnType", blnType) :
                new ObjectParameter("blnType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HELP_CAT_DIC_SELECT_BYDICID_Result>("SP_HELP_CAT_DIC_SELECT_BYDICID", strCatDicIDParameter, strNotSelectCatDicIDParameter, blnTypeParameter);
        }
    
        public virtual ObjectResult<SP_HELP_CAT_DIC_SELECT_BYPARENTID_Result> SP_HELP_CAT_DIC_SELECT_BYPARENTID(Nullable<int> intParentID)
        {
            var intParentIDParameter = intParentID.HasValue ?
                new ObjectParameter("intParentID", intParentID) :
                new ObjectParameter("intParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HELP_CAT_DIC_SELECT_BYPARENTID_Result>("SP_HELP_CAT_DIC_SELECT_BYPARENTID", intParentIDParameter);
        }
    
        public virtual ObjectResult<SP_HELP_CAT_FILE_SELECT_BYDICID_Result> SP_HELP_CAT_FILE_SELECT_BYDICID(Nullable<int> intCatDicID)
        {
            var intCatDicIDParameter = intCatDicID.HasValue ?
                new ObjectParameter("intCatDicID", intCatDicID) :
                new ObjectParameter("intCatDicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HELP_CAT_FILE_SELECT_BYDICID_Result>("SP_HELP_CAT_FILE_SELECT_BYDICID", intCatDicIDParameter);
        }
    
        public virtual ObjectResult<SP_HELP_CAT_FILE_SELECT_BYURL_Result> SP_HELP_CAT_FILE_SELECT_BYURL(string strFileURL)
        {
            var strFileURLParameter = strFileURL != null ?
                new ObjectParameter("strFileURL", strFileURL) :
                new ObjectParameter("strFileURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HELP_CAT_FILE_SELECT_BYURL_Result>("SP_HELP_CAT_FILE_SELECT_BYURL", strFileURLParameter);
        }
    
        public virtual ObjectResult<SP_HELP_DIC_DEL_Result> SP_HELP_DIC_DEL(Nullable<int> intDicID, ObjectParameter intDicParentID)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HELP_DIC_DEL_Result>("SP_HELP_DIC_DEL", intDicIDParameter, intDicParentID);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_HELP_DIC_INS(string fileURL, string helpTitle, Nullable<int> parentID, string helpContent, string accessContent, string strLinkID, Nullable<bool> blnType, ObjectParameter intDicID)
        {
            var fileURLParameter = fileURL != null ?
                new ObjectParameter("FileURL", fileURL) :
                new ObjectParameter("FileURL", typeof(string));
    
            var helpTitleParameter = helpTitle != null ?
                new ObjectParameter("HelpTitle", helpTitle) :
                new ObjectParameter("HelpTitle", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var helpContentParameter = helpContent != null ?
                new ObjectParameter("HelpContent", helpContent) :
                new ObjectParameter("HelpContent", typeof(string));
    
            var accessContentParameter = accessContent != null ?
                new ObjectParameter("AccessContent", accessContent) :
                new ObjectParameter("AccessContent", typeof(string));
    
            var strLinkIDParameter = strLinkID != null ?
                new ObjectParameter("strLinkID", strLinkID) :
                new ObjectParameter("strLinkID", typeof(string));
    
            var blnTypeParameter = blnType.HasValue ?
                new ObjectParameter("blnType", blnType) :
                new ObjectParameter("blnType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HELP_DIC_INS", fileURLParameter, helpTitleParameter, parentIDParameter, helpContentParameter, accessContentParameter, strLinkIDParameter, blnTypeParameter, intDicID);
        }
    
        public virtual ObjectResult<SP_HELP_DIC_ITEM_SELECT_BYID_Result> SP_HELP_DIC_ITEM_SELECT_BYID(Nullable<int> intCatDicID)
        {
            var intCatDicIDParameter = intCatDicID.HasValue ?
                new ObjectParameter("intCatDicID", intCatDicID) :
                new ObjectParameter("intCatDicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HELP_DIC_ITEM_SELECT_BYID_Result>("SP_HELP_DIC_ITEM_SELECT_BYID", intCatDicIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_HELP_DIC_UPD(Nullable<int> intDicID, string fileURL, string helpTitle, Nullable<int> parentID, string helpContent, string accessContent, string strLinkID)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var fileURLParameter = fileURL != null ?
                new ObjectParameter("FileURL", fileURL) :
                new ObjectParameter("FileURL", typeof(string));
    
            var helpTitleParameter = helpTitle != null ?
                new ObjectParameter("HelpTitle", helpTitle) :
                new ObjectParameter("HelpTitle", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var helpContentParameter = helpContent != null ?
                new ObjectParameter("HelpContent", helpContent) :
                new ObjectParameter("HelpContent", typeof(string));
    
            var accessContentParameter = accessContent != null ?
                new ObjectParameter("AccessContent", accessContent) :
                new ObjectParameter("AccessContent", typeof(string));
    
            var strLinkIDParameter = strLinkID != null ?
                new ObjectParameter("strLinkID", strLinkID) :
                new ObjectParameter("strLinkID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_HELP_DIC_UPD", intDicIDParameter, fileURLParameter, helpTitleParameter, parentIDParameter, helpContentParameter, accessContentParameter, strLinkIDParameter);
        }
    
        public virtual ObjectResult<SP_HELP_ITEM_LINK_SELECT_BYDICID_Result> SP_HELP_ITEM_LINK_SELECT_BYDICID(Nullable<int> intCatDicID)
        {
            var intCatDicIDParameter = intCatDicID.HasValue ?
                new ObjectParameter("intCatDicID", intCatDicID) :
                new ObjectParameter("intCatDicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HELP_ITEM_LINK_SELECT_BYDICID_Result>("SP_HELP_ITEM_LINK_SELECT_BYDICID", intCatDicIDParameter);
        }
    
        public virtual int SP_HELP_SEARCH(string strHelpTitle, string strAccessContent, Nullable<bool> blnType)
        {
            var strHelpTitleParameter = strHelpTitle != null ?
                new ObjectParameter("strHelpTitle", strHelpTitle) :
                new ObjectParameter("strHelpTitle", typeof(string));
    
            var strAccessContentParameter = strAccessContent != null ?
                new ObjectParameter("strAccessContent", strAccessContent) :
                new ObjectParameter("strAccessContent", typeof(string));
    
            var blnTypeParameter = blnType.HasValue ?
                new ObjectParameter("blnType", blnType) :
                new ObjectParameter("blnType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HELP_SEARCH", strHelpTitleParameter, strAccessContentParameter, blnTypeParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_HOLDING_COPY_INS(Nullable<int> intItemID, Nullable<int> intTotalCopies, Nullable<int> intFreeCopies, Nullable<int> intLoanTypeID, ObjectParameter strSql)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intTotalCopiesParameter = intTotalCopies.HasValue ?
                new ObjectParameter("intTotalCopies", intTotalCopies) :
                new ObjectParameter("intTotalCopies", typeof(int));
    
            var intFreeCopiesParameter = intFreeCopies.HasValue ?
                new ObjectParameter("intFreeCopies", intFreeCopies) :
                new ObjectParameter("intFreeCopies", typeof(int));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_COPY_INS", intItemIDParameter, intTotalCopiesParameter, intFreeCopiesParameter, intLoanTypeIDParameter, strSql);
        }
    
        public virtual int SP_HOLDING_COPY_SEL(string strItemID, ObjectParameter strSql)
        {
            var strItemIDParameter = strItemID != null ?
                new ObjectParameter("strItemID", strItemID) :
                new ObjectParameter("strItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_COPY_SEL", strItemIDParameter, strSql);
        }
    
        public virtual int SP_HOLDING_COPY_UPD(Nullable<int> intItemID, Nullable<int> intTotalCopies, Nullable<int> intFreeCopies, Nullable<int> intLoanTypeID, ObjectParameter strSql)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intTotalCopiesParameter = intTotalCopies.HasValue ?
                new ObjectParameter("intTotalCopies", intTotalCopies) :
                new ObjectParameter("intTotalCopies", typeof(int));
    
            var intFreeCopiesParameter = intFreeCopies.HasValue ?
                new ObjectParameter("intFreeCopies", intFreeCopies) :
                new ObjectParameter("intFreeCopies", typeof(int));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_COPY_UPD", intItemIDParameter, intTotalCopiesParameter, intFreeCopiesParameter, intLoanTypeIDParameter, strSql);
        }
    
        public virtual int SP_HOLDING_DEL(string strID, Nullable<int> intItemID, ObjectParameter strSql)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_DEL", strIDParameter, intItemIDParameter, strSql);
        }
    
        public virtual int SP_HOLDING_DELETE_PROC(string strCopyIDs)
        {
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_DELETE_PROC", strCopyIDsParameter);
        }
    
        public virtual int SP_HOLDING_GET_COPYNUMBER(Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, string strToCopyNum, string strFromCopyNum, Nullable<int> intOrderby, Nullable<int> intDesc)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strToCopyNumParameter = strToCopyNum != null ?
                new ObjectParameter("strToCopyNum", strToCopyNum) :
                new ObjectParameter("strToCopyNum", typeof(string));
    
            var strFromCopyNumParameter = strFromCopyNum != null ?
                new ObjectParameter("strFromCopyNum", strFromCopyNum) :
                new ObjectParameter("strFromCopyNum", typeof(string));
    
            var intOrderbyParameter = intOrderby.HasValue ?
                new ObjectParameter("intOrderby", intOrderby) :
                new ObjectParameter("intOrderby", typeof(int));
    
            var intDescParameter = intDesc.HasValue ?
                new ObjectParameter("intDesc", intDesc) :
                new ObjectParameter("intDesc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_GET_COPYNUMBER", intLibIDParameter, intLocIDParameter, strShelfParameter, strToCopyNumParameter, strFromCopyNumParameter, intOrderbyParameter, intDescParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_INFO_SEL_Result> SP_HOLDING_INFO_SEL(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_INFO_SEL_Result>("SP_HOLDING_INFO_SEL", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_INQUEUE_SEL_Result> SP_HOLDING_INQUEUE_SEL(Nullable<int> intIsRecv, Nullable<int> intUserID, Nullable<int> intIsRemoved)
        {
            var intIsRecvParameter = intIsRecv.HasValue ?
                new ObjectParameter("intIsRecv", intIsRecv) :
                new ObjectParameter("intIsRecv", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intIsRemovedParameter = intIsRemoved.HasValue ?
                new ObjectParameter("intIsRemoved", intIsRemoved) :
                new ObjectParameter("intIsRemoved", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_INQUEUE_SEL_Result>("SP_HOLDING_INQUEUE_SEL", intIsRecvParameter, intUserIDParameter, intIsRemovedParameter);
        }
    
        public virtual int SP_HOLDING_INS(Nullable<int> lngItemID, Nullable<int> intLocationID, Nullable<int> intLibID, Nullable<int> intUseCount, string strVolume, string strAcquiredDate, string strCopyNumber, Nullable<int> intInUsed, Nullable<int> intInCirculation, Nullable<int> intILLID, Nullable<double> dblPrice, string strShelf, Nullable<int> intPOID, string strDateLastUsed, string strCallNumber, Nullable<int> intAcquired, string strNote, Nullable<int> intLoanTypeID, Nullable<int> intAcquiredSourceID, string strCurrencyCode, Nullable<double> dblRate, string strRecordNumber, string strReceiptedDate)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intUseCountParameter = intUseCount.HasValue ?
                new ObjectParameter("intUseCount", intUseCount) :
                new ObjectParameter("intUseCount", typeof(int));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strAcquiredDateParameter = strAcquiredDate != null ?
                new ObjectParameter("strAcquiredDate", strAcquiredDate) :
                new ObjectParameter("strAcquiredDate", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intInUsedParameter = intInUsed.HasValue ?
                new ObjectParameter("intInUsed", intInUsed) :
                new ObjectParameter("intInUsed", typeof(int));
    
            var intInCirculationParameter = intInCirculation.HasValue ?
                new ObjectParameter("intInCirculation", intInCirculation) :
                new ObjectParameter("intInCirculation", typeof(int));
    
            var intILLIDParameter = intILLID.HasValue ?
                new ObjectParameter("intILLID", intILLID) :
                new ObjectParameter("intILLID", typeof(int));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(double));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            var strDateLastUsedParameter = strDateLastUsed != null ?
                new ObjectParameter("strDateLastUsed", strDateLastUsed) :
                new ObjectParameter("strDateLastUsed", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var intAcquiredParameter = intAcquired.HasValue ?
                new ObjectParameter("intAcquired", intAcquired) :
                new ObjectParameter("intAcquired", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            var intAcquiredSourceIDParameter = intAcquiredSourceID.HasValue ?
                new ObjectParameter("intAcquiredSourceID", intAcquiredSourceID) :
                new ObjectParameter("intAcquiredSourceID", typeof(int));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var dblRateParameter = dblRate.HasValue ?
                new ObjectParameter("dblRate", dblRate) :
                new ObjectParameter("dblRate", typeof(double));
    
            var strRecordNumberParameter = strRecordNumber != null ?
                new ObjectParameter("strRecordNumber", strRecordNumber) :
                new ObjectParameter("strRecordNumber", typeof(string));
    
            var strReceiptedDateParameter = strReceiptedDate != null ?
                new ObjectParameter("strReceiptedDate", strReceiptedDate) :
                new ObjectParameter("strReceiptedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_INS", lngItemIDParameter, intLocationIDParameter, intLibIDParameter, intUseCountParameter, strVolumeParameter, strAcquiredDateParameter, strCopyNumberParameter, intInUsedParameter, intInCirculationParameter, intILLIDParameter, dblPriceParameter, strShelfParameter, intPOIDParameter, strDateLastUsedParameter, strCallNumberParameter, intAcquiredParameter, strNoteParameter, intLoanTypeIDParameter, intAcquiredSourceIDParameter, strCurrencyCodeParameter, dblRateParameter, strRecordNumberParameter, strReceiptedDateParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_INV_SEL_Result> SP_HOLDING_INV_SEL(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_INV_SEL_Result>("SP_HOLDING_INV_SEL", intUserIDParameter);
        }
    
        public virtual int SP_HOLDING_INV_UPD(Nullable<int> intRemovedReasonID, string strRemovedDate, Nullable<int> intUnLock, Nullable<int> intIsRemoved, string strLockedReason, string strCopyIDs)
        {
            var intRemovedReasonIDParameter = intRemovedReasonID.HasValue ?
                new ObjectParameter("intRemovedReasonID", intRemovedReasonID) :
                new ObjectParameter("intRemovedReasonID", typeof(int));
    
            var strRemovedDateParameter = strRemovedDate != null ?
                new ObjectParameter("strRemovedDate", strRemovedDate) :
                new ObjectParameter("strRemovedDate", typeof(string));
    
            var intUnLockParameter = intUnLock.HasValue ?
                new ObjectParameter("intUnLock", intUnLock) :
                new ObjectParameter("intUnLock", typeof(int));
    
            var intIsRemovedParameter = intIsRemoved.HasValue ?
                new ObjectParameter("intIsRemoved", intIsRemoved) :
                new ObjectParameter("intIsRemoved", typeof(int));
    
            var strLockedReasonParameter = strLockedReason != null ?
                new ObjectParameter("strLockedReason", strLockedReason) :
                new ObjectParameter("strLockedReason", typeof(string));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_INV_UPD", intRemovedReasonIDParameter, strRemovedDateParameter, intUnLockParameter, intIsRemovedParameter, strLockedReasonParameter, strCopyIDsParameter);
        }
    
        public virtual int SP_HOLDING_INVENTORY_DEL(Nullable<int> intInventoryID, Nullable<int> intType, Nullable<int> intLibID, Nullable<int> intLocationID, string strShelf)
        {
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_INVENTORY_DEL", intInventoryIDParameter, intTypeParameter, intLibIDParameter, intLocationIDParameter, strShelfParameter);
        }
    
        public virtual int SP_HOLDING_INVENTORY_INS(string strCopyIDs, Nullable<int> intType, Nullable<int> intLibID, Nullable<int> intLocationID, Nullable<int> intInventoryID, string strShelf, ObjectParameter strSQL)
        {
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_INVENTORY_INS", strCopyIDsParameter, intTypeParameter, intLibIDParameter, intLocationIDParameter, intInventoryIDParameter, strShelfParameter, strSQL);
        }
    
        public virtual int SP_HOLDING_INVENTORY_SEL(Nullable<int> intType, Nullable<int> intInventoryID, Nullable<int> intLibID, Nullable<int> intLocationID, string strShelf, ObjectParameter strSQL)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_INVENTORY_SEL", intTypeParameter, intInventoryIDParameter, intLibIDParameter, intLocationIDParameter, strShelfParameter, strSQL);
        }
    
        public virtual int SP_HOLDING_INVENTORY_UPD(Nullable<int> intReasonID, Nullable<int> intInventoryID, string strCopyIDs, ObjectParameter strSQL)
        {
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_INVENTORY_UPD", intReasonIDParameter, intInventoryIDParameter, strCopyIDsParameter, strSQL);
        }
    
        public virtual int SP_HOLDING_INVENTORY_VS_SEL(Nullable<int> intLibID, Nullable<int> intLocationID, string strShelf)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_INVENTORY_VS_SEL", intLibIDParameter, intLocationIDParameter, strShelfParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_ITEM_SEL_Result> SP_HOLDING_ITEM_SEL(string strCode, ObjectParameter strSql)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_ITEM_SEL_Result>("SP_HOLDING_ITEM_SEL", strCodeParameter, strSql);
        }
    
        public virtual ObjectResult<SP_HOLDING_LIB_SEL_Result> SP_HOLDING_LIB_SEL(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LIB_SEL_Result>("SP_HOLDING_LIB_SEL", intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LIBLOC_SEL_Result> SP_HOLDING_LIBLOC_SEL(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LIBLOC_SEL_Result>("SP_HOLDING_LIBLOC_SEL", intUserIDParameter);
        }
    
        public virtual int SP_HOLDING_LIBRARY_INS(string strAddress, string strCode, string strName, string strAccessEntry, ObjectParameter intRetVal)
        {
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LIBRARY_INS", strAddressParameter, strCodeParameter, strNameParameter, strAccessEntryParameter, intRetVal);
        }
    
        public virtual int SP_HOLDING_LIBRARY_MER(string strSouLibIDs, Nullable<int> intDesLibID)
        {
            var strSouLibIDsParameter = strSouLibIDs != null ?
                new ObjectParameter("strSouLibIDs", strSouLibIDs) :
                new ObjectParameter("strSouLibIDs", typeof(string));
    
            var intDesLibIDParameter = intDesLibID.HasValue ?
                new ObjectParameter("intDesLibID", intDesLibID) :
                new ObjectParameter("intDesLibID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LIBRARY_MER", strSouLibIDsParameter, intDesLibIDParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LIBRARY_SEL_REGSPEC_Result> SP_HOLDING_LIBRARY_SEL_REGSPEC(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LIBRARY_SEL_REGSPEC_Result>("SP_HOLDING_LIBRARY_SEL_REGSPEC", intUserIDParameter);
        }
    
        public virtual int SP_HOLDING_LIBRARY_SELECT(Nullable<int> intLibID, Nullable<int> intLocalLib, Nullable<int> intStatus, Nullable<int> intUserID, Nullable<int> intType)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocalLibParameter = intLocalLib.HasValue ?
                new ObjectParameter("intLocalLib", intLocalLib) :
                new ObjectParameter("intLocalLib", typeof(int));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LIBRARY_SELECT", intLibIDParameter, intLocalLibParameter, intStatusParameter, intUserIDParameter, intTypeParameter);
        }
    
        public virtual int SP_HOLDING_LIBRARY_UPD(Nullable<int> intLibID, string strAddress, string strCode, string strName, string strAccessEntry, ObjectParameter intRetVal)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LIBRARY_UPD", intLibIDParameter, strAddressParameter, strCodeParameter, strNameParameter, strAccessEntryParameter, intRetVal);
        }
    
        public virtual int SP_HOLDING_LOC_ON_LIBRARY(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOC_ON_LIBRARY", intUserIDParameter);
        }
    
        public virtual int SP_HOLDING_LOC_PRO_SEL(Nullable<int> intFilter, Nullable<int> intProcMode, string strWhere, ObjectParameter strSQL)
        {
            var intFilterParameter = intFilter.HasValue ?
                new ObjectParameter("intFilter", intFilter) :
                new ObjectParameter("intFilter", typeof(int));
    
            var intProcModeParameter = intProcMode.HasValue ?
                new ObjectParameter("intProcMode", intProcMode) :
                new ObjectParameter("intProcMode", typeof(int));
    
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOC_PRO_SEL", intFilterParameter, intProcModeParameter, strWhereParameter, strSQL);
        }
    
        public virtual ObjectResult<SP_HOLDING_LOC_SCHEMA_SEL_Result> SP_HOLDING_LOC_SCHEMA_SEL(Nullable<int> intLibID, Nullable<int> intLocID, Nullable<int> intUserID)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LOC_SCHEMA_SEL_Result>("SP_HOLDING_LOC_SCHEMA_SEL", intLibIDParameter, intLocIDParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LOC_SHELF_SCHEMA_Result> SP_HOLDING_LOC_SHELF_SCHEMA(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LOC_SHELF_SCHEMA_Result>("SP_HOLDING_LOC_SHELF_SCHEMA", intLocIDParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_CLOSE(string strLocationIDs, string strShelf)
        {
            var strLocationIDsParameter = strLocationIDs != null ?
                new ObjectParameter("strLocationIDs", strLocationIDs) :
                new ObjectParameter("strLocationIDs", typeof(string));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_CLOSE", strLocationIDsParameter, strShelfParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LOCATION_DETAIL_SEL_Result> SP_HOLDING_LOCATION_DETAIL_SEL(Nullable<int> intLocMode, Nullable<int> intUserID, string strOnClick)
        {
            var intLocModeParameter = intLocMode.HasValue ?
                new ObjectParameter("intLocMode", intLocMode) :
                new ObjectParameter("intLocMode", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strOnClickParameter = strOnClick != null ?
                new ObjectParameter("strOnClick", strOnClick) :
                new ObjectParameter("strOnClick", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LOCATION_DETAIL_SEL_Result>("SP_HOLDING_LOCATION_DETAIL_SEL", intLocModeParameter, intUserIDParameter, strOnClickParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_GET_INFO(Nullable<int> intLibID, Nullable<int> intUserID, Nullable<int> intLocID, Nullable<int> intStatus)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_GET_INFO", intLibIDParameter, intUserIDParameter, intLocIDParameter, intStatusParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LOCATION_HOLDING_LIBRARY_SEL_Result> SP_HOLDING_LOCATION_HOLDING_LIBRARY_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LOCATION_HOLDING_LIBRARY_SEL_Result>("SP_HOLDING_LOCATION_HOLDING_LIBRARY_SEL");
        }
    
        public virtual int SP_HOLDING_LOCATION_INCMAXNUM(Nullable<int> intID, Nullable<int> intValINC, Nullable<int> intValNew)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intValINCParameter = intValINC.HasValue ?
                new ObjectParameter("intValINC", intValINC) :
                new ObjectParameter("intValINC", typeof(int));
    
            var intValNewParameter = intValNew.HasValue ?
                new ObjectParameter("intValNew", intValNew) :
                new ObjectParameter("intValNew", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_INCMAXNUM", intIDParameter, intValINCParameter, intValNewParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_INS(Nullable<int> intUserID, Nullable<int> intLibID, string strSymbol, ObjectParameter intRetVal, string strCodeLoc)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var strSymbolParameter = strSymbol != null ?
                new ObjectParameter("strSymbol", strSymbol) :
                new ObjectParameter("strSymbol", typeof(string));
    
            var strCodeLocParameter = strCodeLoc != null ?
                new ObjectParameter("strCodeLoc", strCodeLoc) :
                new ObjectParameter("strCodeLoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_INS", intUserIDParameter, intLibIDParameter, strSymbolParameter, intRetVal, strCodeLocParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_MAXNUMBER(string strLocIDs, string strMaxNumber)
        {
            var strLocIDsParameter = strLocIDs != null ?
                new ObjectParameter("strLocIDs", strLocIDs) :
                new ObjectParameter("strLocIDs", typeof(string));
    
            var strMaxNumberParameter = strMaxNumber != null ?
                new ObjectParameter("strMaxNumber", strMaxNumber) :
                new ObjectParameter("strMaxNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_MAXNUMBER", strLocIDsParameter, strMaxNumberParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_MER(Nullable<int> intUserID, string strSouLocIDs, Nullable<int> intDesLocID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strSouLocIDsParameter = strSouLocIDs != null ?
                new ObjectParameter("strSouLocIDs", strSouLocIDs) :
                new ObjectParameter("strSouLocIDs", typeof(string));
    
            var intDesLocIDParameter = intDesLocID.HasValue ?
                new ObjectParameter("intDesLocID", intDesLocID) :
                new ObjectParameter("intDesLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_MER", intUserIDParameter, strSouLocIDsParameter, intDesLocIDParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_OPEN(string strLocationIDs, string strShelf)
        {
            var strLocationIDsParameter = strLocationIDs != null ?
                new ObjectParameter("strLocationIDs", strLocationIDs) :
                new ObjectParameter("strLocationIDs", typeof(string));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_OPEN", strLocationIDsParameter, strShelfParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LOCATION_SCHEMA_Result> SP_HOLDING_LOCATION_SCHEMA(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LOCATION_SCHEMA_Result>("SP_HOLDING_LOCATION_SCHEMA", intLocIDParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_SCHEMA_DELETE(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_SCHEMA_DELETE", intLocIDParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_SCHEMA_INSERT(Nullable<int> intLocID, string strImgURL, Nullable<int> intImgWidth, Nullable<int> intImgHeight, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<float> dbImgWidthMetter, Nullable<float> dbImgHeightMetter, byte[] byteImgByte)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strImgURLParameter = strImgURL != null ?
                new ObjectParameter("strImgURL", strImgURL) :
                new ObjectParameter("strImgURL", typeof(string));
    
            var intImgWidthParameter = intImgWidth.HasValue ?
                new ObjectParameter("intImgWidth", intImgWidth) :
                new ObjectParameter("intImgWidth", typeof(int));
    
            var intImgHeightParameter = intImgHeight.HasValue ?
                new ObjectParameter("intImgHeight", intImgHeight) :
                new ObjectParameter("intImgHeight", typeof(int));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var dbImgWidthMetterParameter = dbImgWidthMetter.HasValue ?
                new ObjectParameter("dbImgWidthMetter", dbImgWidthMetter) :
                new ObjectParameter("dbImgWidthMetter", typeof(float));
    
            var dbImgHeightMetterParameter = dbImgHeightMetter.HasValue ?
                new ObjectParameter("dbImgHeightMetter", dbImgHeightMetter) :
                new ObjectParameter("dbImgHeightMetter", typeof(float));
    
            var byteImgByteParameter = byteImgByte != null ?
                new ObjectParameter("byteImgByte", byteImgByte) :
                new ObjectParameter("byteImgByte", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_SCHEMA_INSERT", intLocIDParameter, strImgURLParameter, intImgWidthParameter, intImgHeightParameter, intTopCoorParameter, intLeftCoorParameter, dbImgWidthMetterParameter, dbImgHeightMetterParameter, byteImgByteParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_SCHEMA_UPDATE(Nullable<int> intLocID, string strImgURL, Nullable<int> intImgWidth, Nullable<int> intImgHeight, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<float> dbImgWidthMetter, Nullable<float> dbImgHeightMetter, byte[] byteImgByte)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strImgURLParameter = strImgURL != null ?
                new ObjectParameter("strImgURL", strImgURL) :
                new ObjectParameter("strImgURL", typeof(string));
    
            var intImgWidthParameter = intImgWidth.HasValue ?
                new ObjectParameter("intImgWidth", intImgWidth) :
                new ObjectParameter("intImgWidth", typeof(int));
    
            var intImgHeightParameter = intImgHeight.HasValue ?
                new ObjectParameter("intImgHeight", intImgHeight) :
                new ObjectParameter("intImgHeight", typeof(int));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var dbImgWidthMetterParameter = dbImgWidthMetter.HasValue ?
                new ObjectParameter("dbImgWidthMetter", dbImgWidthMetter) :
                new ObjectParameter("dbImgWidthMetter", typeof(float));
    
            var dbImgHeightMetterParameter = dbImgHeightMetter.HasValue ?
                new ObjectParameter("dbImgHeightMetter", dbImgHeightMetter) :
                new ObjectParameter("dbImgHeightMetter", typeof(float));
    
            var byteImgByteParameter = byteImgByte != null ?
                new ObjectParameter("byteImgByte", byteImgByte) :
                new ObjectParameter("byteImgByte", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_SCHEMA_UPDATE", intLocIDParameter, strImgURLParameter, intImgWidthParameter, intImgHeightParameter, intTopCoorParameter, intLeftCoorParameter, dbImgWidthMetterParameter, dbImgHeightMetterParameter, byteImgByteParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_SEL(Nullable<int> intLibID, Nullable<int> intStoreID, Nullable<int> intUserID)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intStoreIDParameter = intStoreID.HasValue ?
                new ObjectParameter("intStoreID", intStoreID) :
                new ObjectParameter("intStoreID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_SEL", intLibIDParameter, intStoreIDParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LOCATION_SEL_CLO_OPE_Result> SP_HOLDING_LOCATION_SEL_CLO_OPE(Nullable<int> intStatus, Nullable<int> intLibID, Nullable<int> intUserID)
        {
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LOCATION_SEL_CLO_OPE_Result>("SP_HOLDING_LOCATION_SEL_CLO_OPE", intStatusParameter, intLibIDParameter, intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_HOLDING_LOCATION_SEL_REGSPEC_Result> SP_HOLDING_LOCATION_SEL_REGSPEC(Nullable<int> intLibID, Nullable<int> intUserID)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_LOCATION_SEL_REGSPEC_Result>("SP_HOLDING_LOCATION_SEL_REGSPEC", intLibIDParameter, intUserIDParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_SELECTALL(Nullable<int> intLibID, Nullable<int> intUserID, Nullable<int> intLocID, Nullable<int> intStatus)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_SELECTALL", intLibIDParameter, intUserIDParameter, intLocIDParameter, intStatusParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_UPD(Nullable<int> intLocID, string strSymbol, ObjectParameter intRetVal, string strCodeLoc)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strSymbolParameter = strSymbol != null ?
                new ObjectParameter("strSymbol", strSymbol) :
                new ObjectParameter("strSymbol", typeof(string));
    
            var strCodeLocParameter = strCodeLoc != null ?
                new ObjectParameter("strCodeLoc", strCodeLoc) :
                new ObjectParameter("strCodeLoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_UPD", intLocIDParameter, strSymbolParameter, intRetVal, strCodeLocParameter);
        }
    
        public virtual int SP_HOLDING_LOCATION_UPD_STATUS(string strLocIDs, string strShelf, Nullable<bool> bitStatus)
        {
            var strLocIDsParameter = strLocIDs != null ?
                new ObjectParameter("strLocIDs", strLocIDs) :
                new ObjectParameter("strLocIDs", typeof(string));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var bitStatusParameter = bitStatus.HasValue ?
                new ObjectParameter("bitStatus", bitStatus) :
                new ObjectParameter("bitStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOCATION_UPD_STATUS", strLocIDsParameter, strShelfParameter, bitStatusParameter);
        }
    
        public virtual int SP_HOLDING_LOST_UPD(Nullable<int> intLocMode, Nullable<int> intLocationID, Nullable<int> intLibID, string strShelf, string strCopyIDs, Nullable<int> intUnLock)
        {
            var intLocModeParameter = intLocMode.HasValue ?
                new ObjectParameter("intLocMode", intLocMode) :
                new ObjectParameter("intLocMode", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            var intUnLockParameter = intUnLock.HasValue ?
                new ObjectParameter("intUnLock", intUnLock) :
                new ObjectParameter("intUnLock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_LOST_UPD", intLocModeParameter, intLocationIDParameter, intLibIDParameter, strShelfParameter, strCopyIDsParameter, intUnLockParameter);
        }
    
        public virtual int SP_HOLDING_MOVE_UPD(Nullable<int> intLibID1, Nullable<int> intLocationID1, string strShelf1, Nullable<int> intLibID2, Nullable<int> intLocationID2, string strShelf2, string strCode, string strCopyNumber, ObjectParameter intRetVal)
        {
            var intLibID1Parameter = intLibID1.HasValue ?
                new ObjectParameter("intLibID1", intLibID1) :
                new ObjectParameter("intLibID1", typeof(int));
    
            var intLocationID1Parameter = intLocationID1.HasValue ?
                new ObjectParameter("intLocationID1", intLocationID1) :
                new ObjectParameter("intLocationID1", typeof(int));
    
            var strShelf1Parameter = strShelf1 != null ?
                new ObjectParameter("strShelf1", strShelf1) :
                new ObjectParameter("strShelf1", typeof(string));
    
            var intLibID2Parameter = intLibID2.HasValue ?
                new ObjectParameter("intLibID2", intLibID2) :
                new ObjectParameter("intLibID2", typeof(int));
    
            var intLocationID2Parameter = intLocationID2.HasValue ?
                new ObjectParameter("intLocationID2", intLocationID2) :
                new ObjectParameter("intLocationID2", typeof(int));
    
            var strShelf2Parameter = strShelf2 != null ?
                new ObjectParameter("strShelf2", strShelf2) :
                new ObjectParameter("strShelf2", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_MOVE_UPD", intLibID1Parameter, intLocationID1Parameter, strShelf1Parameter, intLibID2Parameter, intLocationID2Parameter, strShelf2Parameter, strCodeParameter, strCopyNumberParameter, intRetVal);
        }
    
        public virtual int SP_HOLDING_RECEIVEUNLOCK(Nullable<int> intLibID, Nullable<int> intLocID, string strFromCopyNum, string strToCopyNum)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strFromCopyNumParameter = strFromCopyNum != null ?
                new ObjectParameter("strFromCopyNum", strFromCopyNum) :
                new ObjectParameter("strFromCopyNum", typeof(string));
    
            var strToCopyNumParameter = strToCopyNum != null ?
                new ObjectParameter("strToCopyNum", strToCopyNum) :
                new ObjectParameter("strToCopyNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_RECEIVEUNLOCK", intLibIDParameter, intLocIDParameter, strFromCopyNumParameter, strToCopyNumParameter);
        }
    
        public virtual int SP_HOLDING_RECV_UPD(Nullable<int> intLocID, Nullable<int> intLocMode, Nullable<int> intUnLock, string strShelf, string strCopyIDs, ObjectParameter strSQL)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intLocModeParameter = intLocMode.HasValue ?
                new ObjectParameter("intLocMode", intLocMode) :
                new ObjectParameter("intLocMode", typeof(int));
    
            var intUnLockParameter = intUnLock.HasValue ?
                new ObjectParameter("intUnLock", intUnLock) :
                new ObjectParameter("intUnLock", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_RECV_UPD", intLocIDParameter, intLocModeParameter, intUnLockParameter, strShelfParameter, strCopyIDsParameter, strSQL);
        }
    
        public virtual ObjectResult<SP_HOLDING_REMOVE_REASON_SEL_Result> SP_HOLDING_REMOVE_REASON_SEL(Nullable<int> intReasonID)
        {
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_REMOVE_REASON_SEL_Result>("SP_HOLDING_REMOVE_REASON_SEL", intReasonIDParameter);
        }
    
        public virtual int SP_HOLDING_REMOVED_INS(Nullable<int> intID, Nullable<int> intItemID, Nullable<int> intlibID, Nullable<int> intLocationID, string strCopyNumber, string strAcquiredDate, string strRemovedDate, Nullable<int> intReasonID, Nullable<double> dblPrice, string strShelf, string strVolume, Nullable<int> intLoanTypeID, Nullable<int> intUseCount, Nullable<int> intPoID, string strDateLastUsed, string strCallNumber, Nullable<int> intAcquiredSourceID, ObjectParameter strSql)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intlibIDParameter = intlibID.HasValue ?
                new ObjectParameter("intlibID", intlibID) :
                new ObjectParameter("intlibID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strAcquiredDateParameter = strAcquiredDate != null ?
                new ObjectParameter("strAcquiredDate", strAcquiredDate) :
                new ObjectParameter("strAcquiredDate", typeof(string));
    
            var strRemovedDateParameter = strRemovedDate != null ?
                new ObjectParameter("strRemovedDate", strRemovedDate) :
                new ObjectParameter("strRemovedDate", typeof(string));
    
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(int));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(double));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            var intUseCountParameter = intUseCount.HasValue ?
                new ObjectParameter("intUseCount", intUseCount) :
                new ObjectParameter("intUseCount", typeof(int));
    
            var intPoIDParameter = intPoID.HasValue ?
                new ObjectParameter("intPoID", intPoID) :
                new ObjectParameter("intPoID", typeof(int));
    
            var strDateLastUsedParameter = strDateLastUsed != null ?
                new ObjectParameter("strDateLastUsed", strDateLastUsed) :
                new ObjectParameter("strDateLastUsed", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var intAcquiredSourceIDParameter = intAcquiredSourceID.HasValue ?
                new ObjectParameter("intAcquiredSourceID", intAcquiredSourceID) :
                new ObjectParameter("intAcquiredSourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_REMOVED_INS", intIDParameter, intItemIDParameter, intlibIDParameter, intLocationIDParameter, strCopyNumberParameter, strAcquiredDateParameter, strRemovedDateParameter, intReasonIDParameter, dblPriceParameter, strShelfParameter, strVolumeParameter, intLoanTypeIDParameter, intUseCountParameter, intPoIDParameter, strDateLastUsedParameter, strCallNumberParameter, intAcquiredSourceIDParameter, strSql);
        }
    
        public virtual ObjectResult<string> SP_HOLDING_REMOVED_LIQUIDATE(string strLiquidCode, string strRemovedDate, string strItemCode, string strCopyNumbers, Nullable<int> intReasonID, ObjectParameter intTotalItem, ObjectParameter intOnLoan, ObjectParameter intOnInventory)
        {
            var strLiquidCodeParameter = strLiquidCode != null ?
                new ObjectParameter("strLiquidCode", strLiquidCode) :
                new ObjectParameter("strLiquidCode", typeof(string));
    
            var strRemovedDateParameter = strRemovedDate != null ?
                new ObjectParameter("strRemovedDate", strRemovedDate) :
                new ObjectParameter("strRemovedDate", typeof(string));
    
            var strItemCodeParameter = strItemCode != null ?
                new ObjectParameter("strItemCode", strItemCode) :
                new ObjectParameter("strItemCode", typeof(string));
    
            var strCopyNumbersParameter = strCopyNumbers != null ?
                new ObjectParameter("strCopyNumbers", strCopyNumbers) :
                new ObjectParameter("strCopyNumbers", typeof(string));
    
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_HOLDING_REMOVED_LIQUIDATE", strLiquidCodeParameter, strRemovedDateParameter, strItemCodeParameter, strCopyNumbersParameter, intReasonIDParameter, intTotalItem, intOnLoan, intOnInventory);
        }
    
        public virtual int SP_HOLDING_REMOVED_PROC(Nullable<int> intRemovedReasonID, string strCopyIDs)
        {
            var intRemovedReasonIDParameter = intRemovedReasonID.HasValue ?
                new ObjectParameter("intRemovedReasonID", intRemovedReasonID) :
                new ObjectParameter("intRemovedReasonID", typeof(int));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_REMOVED_PROC", intRemovedReasonIDParameter, strCopyIDsParameter);
        }
    
        public virtual int SP_HOLDING_REMOVED_SEL(string strWhere, ObjectParameter strSQL)
        {
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_REMOVED_SEL", strWhereParameter, strSQL);
        }
    
        public virtual int SP_HOLDING_REMOVED_SEL_RELEASE(string strItemID)
        {
            var strItemIDParameter = strItemID != null ?
                new ObjectParameter("strItemID", strItemID) :
                new ObjectParameter("strItemID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_REMOVED_SEL_RELEASE", strItemIDParameter);
        }
    
        public virtual int SP_HOLDING_SEARCH(Nullable<int> intUserID, Nullable<int> intLocMode, Nullable<int> intLocID, string strCallNumber, string strCopyNumber, string strVolume, string strShelf, string strTitle, ObjectParameter strSQL)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intLocModeParameter = intLocMode.HasValue ?
                new ObjectParameter("intLocMode", intLocMode) :
                new ObjectParameter("intLocMode", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_SEARCH", intUserIDParameter, intLocModeParameter, intLocIDParameter, strCallNumberParameter, strCopyNumberParameter, strVolumeParameter, strShelfParameter, strTitleParameter, strSQL);
        }
    
        public virtual int SP_HOLDING_SEL(string strWhere, ObjectParameter strSql)
        {
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_SEL", strWhereParameter, strSql);
        }
    
        public virtual ObjectResult<SP_HOLDING_SHELF_SCHEMA_Result> SP_HOLDING_SHELF_SCHEMA(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_SHELF_SCHEMA_Result>("SP_HOLDING_SHELF_SCHEMA", intLocIDParameter);
        }
    
        public virtual int SP_HOLDING_SHELF_SCHEMA_DELETE(Nullable<int> intLocID, string strShelf)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_SHELF_SCHEMA_DELETE", intLocIDParameter, strShelfParameter);
        }
    
        public virtual int SP_HOLDING_SHELF_SCHEMA_INSERT(Nullable<int> intLocID, string strShelf, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<int> intWidth, Nullable<int> intDepth, Nullable<bool> intDirection, ObjectParameter intRetVal)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var intWidthParameter = intWidth.HasValue ?
                new ObjectParameter("intWidth", intWidth) :
                new ObjectParameter("intWidth", typeof(int));
    
            var intDepthParameter = intDepth.HasValue ?
                new ObjectParameter("intDepth", intDepth) :
                new ObjectParameter("intDepth", typeof(int));
    
            var intDirectionParameter = intDirection.HasValue ?
                new ObjectParameter("intDirection", intDirection) :
                new ObjectParameter("intDirection", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_SHELF_SCHEMA_INSERT", intLocIDParameter, strShelfParameter, intTopCoorParameter, intLeftCoorParameter, intWidthParameter, intDepthParameter, intDirectionParameter, intRetVal);
        }
    
        public virtual ObjectResult<SP_HOLDING_SHELF_SCHEMA_SELECT_Result> SP_HOLDING_SHELF_SCHEMA_SELECT(Nullable<int> intLocID)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOLDING_SHELF_SCHEMA_SELECT_Result>("SP_HOLDING_SHELF_SCHEMA_SELECT", intLocIDParameter);
        }
    
        public virtual int SP_HOLDING_SHELF_SCHEMA_UPDATE(Nullable<int> intLocID, string strShelf, Nullable<int> intTopCoor, Nullable<int> intLeftCoor, Nullable<int> intWidth, Nullable<int> intDepth, Nullable<bool> intDirection, string strSelShelf, ObjectParameter intRetVal)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intTopCoorParameter = intTopCoor.HasValue ?
                new ObjectParameter("intTopCoor", intTopCoor) :
                new ObjectParameter("intTopCoor", typeof(int));
    
            var intLeftCoorParameter = intLeftCoor.HasValue ?
                new ObjectParameter("intLeftCoor", intLeftCoor) :
                new ObjectParameter("intLeftCoor", typeof(int));
    
            var intWidthParameter = intWidth.HasValue ?
                new ObjectParameter("intWidth", intWidth) :
                new ObjectParameter("intWidth", typeof(int));
    
            var intDepthParameter = intDepth.HasValue ?
                new ObjectParameter("intDepth", intDepth) :
                new ObjectParameter("intDepth", typeof(int));
    
            var intDirectionParameter = intDirection.HasValue ?
                new ObjectParameter("intDirection", intDirection) :
                new ObjectParameter("intDirection", typeof(bool));
    
            var strSelShelfParameter = strSelShelf != null ?
                new ObjectParameter("strSelShelf", strSelShelf) :
                new ObjectParameter("strSelShelf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_SHELF_SCHEMA_UPDATE", intLocIDParameter, strShelfParameter, intTopCoorParameter, intLeftCoorParameter, intWidthParameter, intDepthParameter, intDirectionParameter, strSelShelfParameter, intRetVal);
        }
    
        public virtual ObjectResult<string> SP_HOLDING_SHELF_SEL(Nullable<int> intLocID, Nullable<int> intIsRemoved)
        {
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intIsRemovedParameter = intIsRemoved.HasValue ?
                new ObjectParameter("intIsRemoved", intIsRemoved) :
                new ObjectParameter("intIsRemoved", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_HOLDING_SHELF_SEL", intLocIDParameter, intIsRemovedParameter);
        }
    
        public virtual int SP_HOLDING_TOTAL_SEL(Nullable<int> intSelectOption, string strWhereClause, ObjectParameter strSQL)
        {
            var intSelectOptionParameter = intSelectOption.HasValue ?
                new ObjectParameter("intSelectOption", intSelectOption) :
                new ObjectParameter("intSelectOption", typeof(int));
    
            var strWhereClauseParameter = strWhereClause != null ?
                new ObjectParameter("strWhereClause", strWhereClause) :
                new ObjectParameter("strWhereClause", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_TOTAL_SEL", intSelectOptionParameter, strWhereClauseParameter, strSQL);
        }
    
        public virtual int SP_HOLDING_UPD(Nullable<int> lngCopyID, Nullable<int> intLocationID, Nullable<int> intLibID, string strVolume, string strAcquiredDate, string strCopyNumber, string strRecordNumber, string strReceiptedDate, Nullable<double> dblPrice, string strShelf, string strCallNumber, string strNote, Nullable<int> intAcquiredSourceID, string strCurrencyCode)
        {
            var lngCopyIDParameter = lngCopyID.HasValue ?
                new ObjectParameter("lngCopyID", lngCopyID) :
                new ObjectParameter("lngCopyID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var strVolumeParameter = strVolume != null ?
                new ObjectParameter("strVolume", strVolume) :
                new ObjectParameter("strVolume", typeof(string));
    
            var strAcquiredDateParameter = strAcquiredDate != null ?
                new ObjectParameter("strAcquiredDate", strAcquiredDate) :
                new ObjectParameter("strAcquiredDate", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strRecordNumberParameter = strRecordNumber != null ?
                new ObjectParameter("strRecordNumber", strRecordNumber) :
                new ObjectParameter("strRecordNumber", typeof(string));
    
            var strReceiptedDateParameter = strReceiptedDate != null ?
                new ObjectParameter("strReceiptedDate", strReceiptedDate) :
                new ObjectParameter("strReceiptedDate", typeof(string));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(double));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intAcquiredSourceIDParameter = intAcquiredSourceID.HasValue ?
                new ObjectParameter("intAcquiredSourceID", intAcquiredSourceID) :
                new ObjectParameter("intAcquiredSourceID", typeof(int));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HOLDING_UPD", lngCopyIDParameter, intLocationIDParameter, intLibIDParameter, strVolumeParameter, strAcquiredDateParameter, strCopyNumberParameter, strRecordNumberParameter, strReceiptedDateParameter, dblPriceParameter, strShelfParameter, strCallNumberParameter, strNoteParameter, intAcquiredSourceIDParameter, strCurrencyCodeParameter);
        }
    
        public virtual int SP_IDX_CHANGE(string strUPDType, Nullable<int> intID, Nullable<int> intGroupID, Nullable<int> intNORs, ObjectParameter intPositionOUT, ObjectParameter intGroupIDOUT)
        {
            var strUPDTypeParameter = strUPDType != null ?
                new ObjectParameter("strUPDType", strUPDType) :
                new ObjectParameter("strUPDType", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intGroupIDParameter = intGroupID.HasValue ?
                new ObjectParameter("intGroupID", intGroupID) :
                new ObjectParameter("intGroupID", typeof(int));
    
            var intNORsParameter = intNORs.HasValue ?
                new ObjectParameter("intNORs", intNORs) :
                new ObjectParameter("intNORs", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_CHANGE", strUPDTypeParameter, intIDParameter, intGroupIDParameter, intNORsParameter, intPositionOUT, intGroupIDOUT);
        }
    
        public virtual int SP_IDX_CUSTOM_SEL(Nullable<int> intID, Nullable<int> intTypeSelect, Nullable<int> intGroupIDFrom, Nullable<int> intGroupIDTo, string strGroupName)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intTypeSelectParameter = intTypeSelect.HasValue ?
                new ObjectParameter("intTypeSelect", intTypeSelect) :
                new ObjectParameter("intTypeSelect", typeof(int));
    
            var intGroupIDFromParameter = intGroupIDFrom.HasValue ?
                new ObjectParameter("intGroupIDFrom", intGroupIDFrom) :
                new ObjectParameter("intGroupIDFrom", typeof(int));
    
            var intGroupIDToParameter = intGroupIDTo.HasValue ?
                new ObjectParameter("intGroupIDTo", intGroupIDTo) :
                new ObjectParameter("intGroupIDTo", typeof(int));
    
            var strGroupNameParameter = strGroupName != null ?
                new ObjectParameter("strGroupName", strGroupName) :
                new ObjectParameter("strGroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_CUSTOM_SEL", intIDParameter, intTypeSelectParameter, intGroupIDFromParameter, intGroupIDToParameter, strGroupNameParameter);
        }
    
        public virtual int SP_IDX_DEL(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_DEL", strIDsParameter);
        }
    
        public virtual int SP_IDX_DETAIL_DEL(Nullable<int> intIDIdx, Nullable<int> intIDGroup)
        {
            var intIDIdxParameter = intIDIdx.HasValue ?
                new ObjectParameter("intIDIdx", intIDIdx) :
                new ObjectParameter("intIDIdx", typeof(int));
    
            var intIDGroupParameter = intIDGroup.HasValue ?
                new ObjectParameter("intIDGroup", intIDGroup) :
                new ObjectParameter("intIDGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_DETAIL_DEL", intIDIdxParameter, intIDGroupParameter);
        }
    
        public virtual int SP_IDX_DETAIL_DIST_LINK_SEL(string strIDs, Nullable<int> intGroupID)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intGroupIDParameter = intGroupID.HasValue ?
                new ObjectParameter("intGroupID", intGroupID) :
                new ObjectParameter("intGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_DETAIL_DIST_LINK_SEL", strIDsParameter, intGroupIDParameter);
        }
    
        public virtual int SP_IDX_DETAIL_DIST_SEL(string strIDs, Nullable<int> intGroupID)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intGroupIDParameter = intGroupID.HasValue ?
                new ObjectParameter("intGroupID", intGroupID) :
                new ObjectParameter("intGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_DETAIL_DIST_SEL", strIDsParameter, intGroupIDParameter);
        }
    
        public virtual int SP_IDX_DETAIL_INS(Nullable<int> intID, string strItemIDs, Nullable<int> intNORs, Nullable<int> intPart_Index, Nullable<int> intPosition, string strQString, string strSQL, string strGroupName, Nullable<int> intGroupID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            var intNORsParameter = intNORs.HasValue ?
                new ObjectParameter("intNORs", intNORs) :
                new ObjectParameter("intNORs", typeof(int));
    
            var intPart_IndexParameter = intPart_Index.HasValue ?
                new ObjectParameter("intPart_Index", intPart_Index) :
                new ObjectParameter("intPart_Index", typeof(int));
    
            var intPositionParameter = intPosition.HasValue ?
                new ObjectParameter("intPosition", intPosition) :
                new ObjectParameter("intPosition", typeof(int));
    
            var strQStringParameter = strQString != null ?
                new ObjectParameter("strQString", strQString) :
                new ObjectParameter("strQString", typeof(string));
    
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            var strGroupNameParameter = strGroupName != null ?
                new ObjectParameter("strGroupName", strGroupName) :
                new ObjectParameter("strGroupName", typeof(string));
    
            var intGroupIDParameter = intGroupID.HasValue ?
                new ObjectParameter("intGroupID", intGroupID) :
                new ObjectParameter("intGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_DETAIL_INS", intIDParameter, strItemIDsParameter, intNORsParameter, intPart_IndexParameter, intPositionParameter, strQStringParameter, strSQLParameter, strGroupNameParameter, intGroupIDParameter);
        }
    
        public virtual int SP_IDX_DETAIL_SEL(string strIDs, Nullable<int> intGroupID)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intGroupIDParameter = intGroupID.HasValue ?
                new ObjectParameter("intGroupID", intGroupID) :
                new ObjectParameter("intGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_DETAIL_SEL", strIDsParameter, intGroupIDParameter);
        }
    
        public virtual int SP_IDX_INS(string strTitle, Nullable<int> intUserID, string strGroupBy)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strGroupByParameter = strGroupBy != null ?
                new ObjectParameter("strGroupBy", strGroupBy) :
                new ObjectParameter("strGroupBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_INS", strTitleParameter, intUserIDParameter, strGroupByParameter);
        }
    
        public virtual int SP_IDX_SEL(string strIDs, Nullable<int> intUserID)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_SEL", strIDsParameter, intUserIDParameter);
        }
    
        public virtual int SP_IDX_UPD(Nullable<int> intID, string strTitle, Nullable<int> intTORsAdd, string strGroupBy)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intTORsAddParameter = intTORsAdd.HasValue ?
                new ObjectParameter("intTORsAdd", intTORsAdd) :
                new ObjectParameter("intTORsAdd", typeof(int));
    
            var strGroupByParameter = strGroupBy != null ?
                new ObjectParameter("strGroupBy", strGroupBy) :
                new ObjectParameter("strGroupBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IDX_UPD", intIDParameter, strTitleParameter, intTORsAddParameter, strGroupByParameter);
        }
    
        public virtual int SP_ILL_CHANGE_FOLDER(Nullable<int> intType, Nullable<int> lngILLID)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var lngILLIDParameter = lngILLID.HasValue ?
                new ObjectParameter("lngILLID", lngILLID) :
                new ObjectParameter("lngILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CHANGE_FOLDER", intTypeParameter, lngILLIDParameter);
        }
    
        public virtual int SP_ILL_CREATE_COPYPAYPHYTYPE(string strSelectMode, string strType)
        {
            var strSelectModeParameter = strSelectMode != null ?
                new ObjectParameter("strSelectMode", strSelectMode) :
                new ObjectParameter("strSelectMode", typeof(string));
    
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_COPYPAYPHYTYPE", strSelectModeParameter, strTypeParameter);
        }
    
        public virtual int SP_ILL_CREATE_COPYRIGHT(string strCopyrightCompliance, ObjectParameter intOut)
        {
            var strCopyrightComplianceParameter = strCopyrightCompliance != null ?
                new ObjectParameter("strCopyrightCompliance", strCopyrightCompliance) :
                new ObjectParameter("strCopyrightCompliance", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_COPYRIGHT", strCopyrightComplianceParameter, intOut);
        }
    
        public virtual int SP_ILL_CREATE_LIBRARY(string strSymbol, string strName, string strEmailAddress, string strTelephone, string strCode, string strNote, string strEDelivMode, string strEDelivTSAddr, string strBillDelivName, string strBillDelivXAddr, string strBillDelivStreet, string strBillDelivBox, string strBillDelivCity, string strBillDelivRegion, Nullable<byte> intBillDelivCountry, string strBillDelivCode, string strPostDelivName, string strPostDelivXAddr, string strPostDelivStreet, string strPostDelivBox, string strPostDelivCity, string strPostDelivRegion, Nullable<byte> intPostDelivCountry, string strPostDelivCode, string strAccountNumber, Nullable<byte> intEncodingScheme, ObjectParameter intOut)
        {
            var strSymbolParameter = strSymbol != null ?
                new ObjectParameter("strSymbol", strSymbol) :
                new ObjectParameter("strSymbol", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strEmailAddressParameter = strEmailAddress != null ?
                new ObjectParameter("strEmailAddress", strEmailAddress) :
                new ObjectParameter("strEmailAddress", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strEDelivModeParameter = strEDelivMode != null ?
                new ObjectParameter("strEDelivMode", strEDelivMode) :
                new ObjectParameter("strEDelivMode", typeof(string));
    
            var strEDelivTSAddrParameter = strEDelivTSAddr != null ?
                new ObjectParameter("strEDelivTSAddr", strEDelivTSAddr) :
                new ObjectParameter("strEDelivTSAddr", typeof(string));
    
            var strBillDelivNameParameter = strBillDelivName != null ?
                new ObjectParameter("strBillDelivName", strBillDelivName) :
                new ObjectParameter("strBillDelivName", typeof(string));
    
            var strBillDelivXAddrParameter = strBillDelivXAddr != null ?
                new ObjectParameter("strBillDelivXAddr", strBillDelivXAddr) :
                new ObjectParameter("strBillDelivXAddr", typeof(string));
    
            var strBillDelivStreetParameter = strBillDelivStreet != null ?
                new ObjectParameter("strBillDelivStreet", strBillDelivStreet) :
                new ObjectParameter("strBillDelivStreet", typeof(string));
    
            var strBillDelivBoxParameter = strBillDelivBox != null ?
                new ObjectParameter("strBillDelivBox", strBillDelivBox) :
                new ObjectParameter("strBillDelivBox", typeof(string));
    
            var strBillDelivCityParameter = strBillDelivCity != null ?
                new ObjectParameter("strBillDelivCity", strBillDelivCity) :
                new ObjectParameter("strBillDelivCity", typeof(string));
    
            var strBillDelivRegionParameter = strBillDelivRegion != null ?
                new ObjectParameter("strBillDelivRegion", strBillDelivRegion) :
                new ObjectParameter("strBillDelivRegion", typeof(string));
    
            var intBillDelivCountryParameter = intBillDelivCountry.HasValue ?
                new ObjectParameter("intBillDelivCountry", intBillDelivCountry) :
                new ObjectParameter("intBillDelivCountry", typeof(byte));
    
            var strBillDelivCodeParameter = strBillDelivCode != null ?
                new ObjectParameter("strBillDelivCode", strBillDelivCode) :
                new ObjectParameter("strBillDelivCode", typeof(string));
    
            var strPostDelivNameParameter = strPostDelivName != null ?
                new ObjectParameter("strPostDelivName", strPostDelivName) :
                new ObjectParameter("strPostDelivName", typeof(string));
    
            var strPostDelivXAddrParameter = strPostDelivXAddr != null ?
                new ObjectParameter("strPostDelivXAddr", strPostDelivXAddr) :
                new ObjectParameter("strPostDelivXAddr", typeof(string));
    
            var strPostDelivStreetParameter = strPostDelivStreet != null ?
                new ObjectParameter("strPostDelivStreet", strPostDelivStreet) :
                new ObjectParameter("strPostDelivStreet", typeof(string));
    
            var strPostDelivBoxParameter = strPostDelivBox != null ?
                new ObjectParameter("strPostDelivBox", strPostDelivBox) :
                new ObjectParameter("strPostDelivBox", typeof(string));
    
            var strPostDelivCityParameter = strPostDelivCity != null ?
                new ObjectParameter("strPostDelivCity", strPostDelivCity) :
                new ObjectParameter("strPostDelivCity", typeof(string));
    
            var strPostDelivRegionParameter = strPostDelivRegion != null ?
                new ObjectParameter("strPostDelivRegion", strPostDelivRegion) :
                new ObjectParameter("strPostDelivRegion", typeof(string));
    
            var intPostDelivCountryParameter = intPostDelivCountry.HasValue ?
                new ObjectParameter("intPostDelivCountry", intPostDelivCountry) :
                new ObjectParameter("intPostDelivCountry", typeof(byte));
    
            var strPostDelivCodeParameter = strPostDelivCode != null ?
                new ObjectParameter("strPostDelivCode", strPostDelivCode) :
                new ObjectParameter("strPostDelivCode", typeof(string));
    
            var strAccountNumberParameter = strAccountNumber != null ?
                new ObjectParameter("strAccountNumber", strAccountNumber) :
                new ObjectParameter("strAccountNumber", typeof(string));
    
            var intEncodingSchemeParameter = intEncodingScheme.HasValue ?
                new ObjectParameter("intEncodingScheme", intEncodingScheme) :
                new ObjectParameter("intEncodingScheme", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_LIBRARY", strSymbolParameter, strNameParameter, strEmailAddressParameter, strTelephoneParameter, strCodeParameter, strNoteParameter, strEDelivModeParameter, strEDelivTSAddrParameter, strBillDelivNameParameter, strBillDelivXAddrParameter, strBillDelivStreetParameter, strBillDelivBoxParameter, strBillDelivCityParameter, strBillDelivRegionParameter, intBillDelivCountryParameter, strBillDelivCodeParameter, strPostDelivNameParameter, strPostDelivXAddrParameter, strPostDelivStreetParameter, strPostDelivBoxParameter, strPostDelivCityParameter, strPostDelivRegionParameter, intPostDelivCountryParameter, strPostDelivCodeParameter, strAccountNumberParameter, intEncodingSchemeParameter, intOut);
        }
    
        public virtual int SP_ILL_CREATE_LOCLIBADDR(string strAddress, string strCity, Nullable<int> intCountryID, string strPOBox, string strPostCode, string strRegion, string strStreet, string strXAddress, ObjectParameter intOut)
        {
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strPOBoxParameter = strPOBox != null ?
                new ObjectParameter("strPOBox", strPOBox) :
                new ObjectParameter("strPOBox", typeof(string));
    
            var strPostCodeParameter = strPostCode != null ?
                new ObjectParameter("strPostCode", strPostCode) :
                new ObjectParameter("strPostCode", typeof(string));
    
            var strRegionParameter = strRegion != null ?
                new ObjectParameter("strRegion", strRegion) :
                new ObjectParameter("strRegion", typeof(string));
    
            var strStreetParameter = strStreet != null ?
                new ObjectParameter("strStreet", strStreet) :
                new ObjectParameter("strStreet", typeof(string));
    
            var strXAddressParameter = strXAddress != null ?
                new ObjectParameter("strXAddress", strXAddress) :
                new ObjectParameter("strXAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_LOCLIBADDR", strAddressParameter, strCityParameter, intCountryIDParameter, strPOBoxParameter, strPostCodeParameter, strRegionParameter, strStreetParameter, strXAddressParameter, intOut);
        }
    
        public virtual int SP_ILL_CREATE_LOCLIBELECADDR(string strEdelivMode, string strEdelivTSAddr, ObjectParameter intExitName)
        {
            var strEdelivModeParameter = strEdelivMode != null ?
                new ObjectParameter("strEdelivMode", strEdelivMode) :
                new ObjectParameter("strEdelivMode", typeof(string));
    
            var strEdelivTSAddrParameter = strEdelivTSAddr != null ?
                new ObjectParameter("strEdelivTSAddr", strEdelivTSAddr) :
                new ObjectParameter("strEdelivTSAddr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_LOCLIBELECADDR", strEdelivModeParameter, strEdelivTSAddrParameter, intExitName);
        }
    
        public virtual int SP_ILL_CREATE_OUTGOINGREQUEST(Nullable<int> intResponderID, string strCreateDate, string strNeedBeforeDate, string strExpiredDate, Nullable<decimal> monyMaxCost, string strCurrencyCode, Nullable<int> intStatus, string strNote, Nullable<int> intDeliveryLocID, Nullable<int> intBillingLocID, Nullable<bool> bitReciprocalAgreement, Nullable<bool> bitWillPayFee, Nullable<bool> bitPaymentProvided, Nullable<int> intServiceType, Nullable<int> intCopyrightCompliance, Nullable<int> intPriority, Nullable<int> intPaymentType, Nullable<int> intItemType, Nullable<int> intMedium, Nullable<int> intDelivMode, Nullable<int> intEdelivModeID, string strTitle, string strPatronName, string strPatronCode, Nullable<int> intPatronGroupID, string strCallNumber, string strAuthor, string strPlaceOfPub, string strPublisher, string strSeriesTitleNumber, string strVolumeIssue, string strEdition, string strPubDate, string strComponentPubDate, string strArticleAuthor, string strArticleTitle, string strPagination, string strNationalBibNumber, string strISBN, string strISSN, string strSystemNumber, string strOtherNumbers, string strVerification, string strLocalNote, string strSponsoringBody, ObjectParameter intRetval)
        {
            var intResponderIDParameter = intResponderID.HasValue ?
                new ObjectParameter("intResponderID", intResponderID) :
                new ObjectParameter("intResponderID", typeof(int));
    
            var strCreateDateParameter = strCreateDate != null ?
                new ObjectParameter("strCreateDate", strCreateDate) :
                new ObjectParameter("strCreateDate", typeof(string));
    
            var strNeedBeforeDateParameter = strNeedBeforeDate != null ?
                new ObjectParameter("strNeedBeforeDate", strNeedBeforeDate) :
                new ObjectParameter("strNeedBeforeDate", typeof(string));
    
            var strExpiredDateParameter = strExpiredDate != null ?
                new ObjectParameter("strExpiredDate", strExpiredDate) :
                new ObjectParameter("strExpiredDate", typeof(string));
    
            var monyMaxCostParameter = monyMaxCost.HasValue ?
                new ObjectParameter("monyMaxCost", monyMaxCost) :
                new ObjectParameter("monyMaxCost", typeof(decimal));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intDeliveryLocIDParameter = intDeliveryLocID.HasValue ?
                new ObjectParameter("intDeliveryLocID", intDeliveryLocID) :
                new ObjectParameter("intDeliveryLocID", typeof(int));
    
            var intBillingLocIDParameter = intBillingLocID.HasValue ?
                new ObjectParameter("intBillingLocID", intBillingLocID) :
                new ObjectParameter("intBillingLocID", typeof(int));
    
            var bitReciprocalAgreementParameter = bitReciprocalAgreement.HasValue ?
                new ObjectParameter("bitReciprocalAgreement", bitReciprocalAgreement) :
                new ObjectParameter("bitReciprocalAgreement", typeof(bool));
    
            var bitWillPayFeeParameter = bitWillPayFee.HasValue ?
                new ObjectParameter("bitWillPayFee", bitWillPayFee) :
                new ObjectParameter("bitWillPayFee", typeof(bool));
    
            var bitPaymentProvidedParameter = bitPaymentProvided.HasValue ?
                new ObjectParameter("bitPaymentProvided", bitPaymentProvided) :
                new ObjectParameter("bitPaymentProvided", typeof(bool));
    
            var intServiceTypeParameter = intServiceType.HasValue ?
                new ObjectParameter("intServiceType", intServiceType) :
                new ObjectParameter("intServiceType", typeof(int));
    
            var intCopyrightComplianceParameter = intCopyrightCompliance.HasValue ?
                new ObjectParameter("intCopyrightCompliance", intCopyrightCompliance) :
                new ObjectParameter("intCopyrightCompliance", typeof(int));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(int));
    
            var intPaymentTypeParameter = intPaymentType.HasValue ?
                new ObjectParameter("intPaymentType", intPaymentType) :
                new ObjectParameter("intPaymentType", typeof(int));
    
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(int));
    
            var intMediumParameter = intMedium.HasValue ?
                new ObjectParameter("intMedium", intMedium) :
                new ObjectParameter("intMedium", typeof(int));
    
            var intDelivModeParameter = intDelivMode.HasValue ?
                new ObjectParameter("intDelivMode", intDelivMode) :
                new ObjectParameter("intDelivMode", typeof(int));
    
            var intEdelivModeIDParameter = intEdelivModeID.HasValue ?
                new ObjectParameter("intEdelivModeID", intEdelivModeID) :
                new ObjectParameter("intEdelivModeID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPlaceOfPubParameter = strPlaceOfPub != null ?
                new ObjectParameter("strPlaceOfPub", strPlaceOfPub) :
                new ObjectParameter("strPlaceOfPub", typeof(string));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var strSeriesTitleNumberParameter = strSeriesTitleNumber != null ?
                new ObjectParameter("strSeriesTitleNumber", strSeriesTitleNumber) :
                new ObjectParameter("strSeriesTitleNumber", typeof(string));
    
            var strVolumeIssueParameter = strVolumeIssue != null ?
                new ObjectParameter("strVolumeIssue", strVolumeIssue) :
                new ObjectParameter("strVolumeIssue", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var strPubDateParameter = strPubDate != null ?
                new ObjectParameter("strPubDate", strPubDate) :
                new ObjectParameter("strPubDate", typeof(string));
    
            var strComponentPubDateParameter = strComponentPubDate != null ?
                new ObjectParameter("strComponentPubDate", strComponentPubDate) :
                new ObjectParameter("strComponentPubDate", typeof(string));
    
            var strArticleAuthorParameter = strArticleAuthor != null ?
                new ObjectParameter("strArticleAuthor", strArticleAuthor) :
                new ObjectParameter("strArticleAuthor", typeof(string));
    
            var strArticleTitleParameter = strArticleTitle != null ?
                new ObjectParameter("strArticleTitle", strArticleTitle) :
                new ObjectParameter("strArticleTitle", typeof(string));
    
            var strPaginationParameter = strPagination != null ?
                new ObjectParameter("strPagination", strPagination) :
                new ObjectParameter("strPagination", typeof(string));
    
            var strNationalBibNumberParameter = strNationalBibNumber != null ?
                new ObjectParameter("strNationalBibNumber", strNationalBibNumber) :
                new ObjectParameter("strNationalBibNumber", typeof(string));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var strSystemNumberParameter = strSystemNumber != null ?
                new ObjectParameter("strSystemNumber", strSystemNumber) :
                new ObjectParameter("strSystemNumber", typeof(string));
    
            var strOtherNumbersParameter = strOtherNumbers != null ?
                new ObjectParameter("strOtherNumbers", strOtherNumbers) :
                new ObjectParameter("strOtherNumbers", typeof(string));
    
            var strVerificationParameter = strVerification != null ?
                new ObjectParameter("strVerification", strVerification) :
                new ObjectParameter("strVerification", typeof(string));
    
            var strLocalNoteParameter = strLocalNote != null ?
                new ObjectParameter("strLocalNote", strLocalNote) :
                new ObjectParameter("strLocalNote", typeof(string));
    
            var strSponsoringBodyParameter = strSponsoringBody != null ?
                new ObjectParameter("strSponsoringBody", strSponsoringBody) :
                new ObjectParameter("strSponsoringBody", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_OUTGOINGREQUEST", intResponderIDParameter, strCreateDateParameter, strNeedBeforeDateParameter, strExpiredDateParameter, monyMaxCostParameter, strCurrencyCodeParameter, intStatusParameter, strNoteParameter, intDeliveryLocIDParameter, intBillingLocIDParameter, bitReciprocalAgreementParameter, bitWillPayFeeParameter, bitPaymentProvidedParameter, intServiceTypeParameter, intCopyrightComplianceParameter, intPriorityParameter, intPaymentTypeParameter, intItemTypeParameter, intMediumParameter, intDelivModeParameter, intEdelivModeIDParameter, strTitleParameter, strPatronNameParameter, strPatronCodeParameter, intPatronGroupIDParameter, strCallNumberParameter, strAuthorParameter, strPlaceOfPubParameter, strPublisherParameter, strSeriesTitleNumberParameter, strVolumeIssueParameter, strEditionParameter, strPubDateParameter, strComponentPubDateParameter, strArticleAuthorParameter, strArticleTitleParameter, strPaginationParameter, strNationalBibNumberParameter, strISBNParameter, strISSNParameter, strSystemNumberParameter, strOtherNumbersParameter, strVerificationParameter, strLocalNoteParameter, strSponsoringBodyParameter, intRetval);
        }
    
        public virtual int SP_ILL_CREATE_PAYMENTYPES(string strType, ObjectParameter intOut)
        {
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_PAYMENTYPES", strTypeParameter, intOut);
        }
    
        public virtual int SP_ILL_CREATE_PAYPHYCOPYTYPE(string strSelectMode, string strType)
        {
            var strSelectModeParameter = strSelectMode != null ?
                new ObjectParameter("strSelectMode", strSelectMode) :
                new ObjectParameter("strSelectMode", typeof(string));
    
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_PAYPHYCOPYTYPE", strSelectModeParameter, strTypeParameter);
        }
    
        public virtual int SP_ILL_CREATE_PHYSICALMODE(string strDeliveryMode, ObjectParameter intOut)
        {
            var strDeliveryModeParameter = strDeliveryMode != null ?
                new ObjectParameter("strDeliveryMode", strDeliveryMode) :
                new ObjectParameter("strDeliveryMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_PHYSICALMODE", strDeliveryModeParameter, intOut);
        }
    
        public virtual int SP_ILL_CREATE_RESPONSES(string strCode, string strVietName, string strEngName, ObjectParameter intOut)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strVietNameParameter = strVietName != null ?
                new ObjectParameter("strVietName", strVietName) :
                new ObjectParameter("strVietName", typeof(string));
    
            var strEngNameParameter = strEngName != null ?
                new ObjectParameter("strEngName", strEngName) :
                new ObjectParameter("strEngName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_CREATE_RESPONSES", strCodeParameter, strVietNameParameter, strEngNameParameter, intOut);
        }
    
        public virtual int SP_ILL_DEL_INREQUEST(Nullable<int> intILLID)
        {
            var intILLIDParameter = intILLID.HasValue ?
                new ObjectParameter("intILLID", intILLID) :
                new ObjectParameter("intILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DEL_INREQUEST", intILLIDParameter);
        }
    
        public virtual int SP_ILL_DELETE_COPYPAYPHYTYPE(string strSelectMode, Nullable<int> intID, ObjectParameter intValue)
        {
            var strSelectModeParameter = strSelectMode != null ?
                new ObjectParameter("strSelectMode", strSelectMode) :
                new ObjectParameter("strSelectMode", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_COPYPAYPHYTYPE", strSelectModeParameter, intIDParameter, intValue);
        }
    
        public virtual int SP_ILL_DELETE_COPYRIGHT(Nullable<int> intID, ObjectParameter intValue)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_COPYRIGHT", intIDParameter, intValue);
        }
    
        public virtual int SP_ILL_DELETE_LIBRARY(Nullable<int> intLibID, ObjectParameter intOut)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_LIBRARY", intLibIDParameter, intOut);
        }
    
        public virtual int SP_ILL_DELETE_LOCLIBADDR(Nullable<int> intID, ObjectParameter intValue)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_LOCLIBADDR", intIDParameter, intValue);
        }
    
        public virtual int SP_ILL_DELETE_LOCLIBELECADDR(Nullable<int> intID, ObjectParameter intValue)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_LOCLIBELECADDR", intIDParameter, intValue);
        }
    
        public virtual int SP_ILL_DELETE_PAYMENTTYPES(Nullable<int> intID, ObjectParameter intValue)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_PAYMENTTYPES", intIDParameter, intValue);
        }
    
        public virtual int SP_ILL_DELETE_PHYSICALMODE(Nullable<int> intID, ObjectParameter intValue)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_PHYSICALMODE", intIDParameter, intValue);
        }
    
        public virtual int SP_ILL_DELETE_RESPONSES(Nullable<int> intID, ObjectParameter intValue)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_RESPONSES", intIDParameter, intValue);
        }
    
        public virtual int SP_ILL_DELETE_Z3950_DBS(Nullable<int> intDBID)
        {
            var intDBIDParameter = intDBID.HasValue ?
                new ObjectParameter("intDBID", intDBID) :
                new ObjectParameter("intDBID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_Z3950_DBS", intDBIDParameter);
        }
    
        public virtual int SP_ILL_DELETE_ZSERVER_LIST(Nullable<int> intServerID, ObjectParameter intValue)
        {
            var intServerIDParameter = intServerID.HasValue ?
                new ObjectParameter("intServerID", intServerID) :
                new ObjectParameter("intServerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_DELETE_ZSERVER_LIST", intServerIDParameter, intValue);
        }
    
        public virtual int SP_ILL_GET_COPYPAYPHYTYPE(string strSelectMode, Nullable<int> intID)
        {
            var strSelectModeParameter = strSelectMode != null ?
                new ObjectParameter("strSelectMode", strSelectMode) :
                new ObjectParameter("strSelectMode", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_COPYPAYPHYTYPE", strSelectModeParameter, intIDParameter);
        }
    
        public virtual int SP_ILL_GET_COPYRIGHT(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_COPYRIGHT", intIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_COUNTRY_Result> SP_ILL_GET_COUNTRY(Nullable<int> intCountryID)
        {
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_COUNTRY_Result>("SP_ILL_GET_COUNTRY", intCountryIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_INSERREPORT_Result> SP_ILL_GET_INSERREPORT(Nullable<int> intSelectMode)
        {
            var intSelectModeParameter = intSelectMode.HasValue ?
                new ObjectParameter("intSelectMode", intSelectMode) :
                new ObjectParameter("intSelectMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_INSERREPORT_Result>("SP_ILL_GET_INSERREPORT", intSelectModeParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_IR_DETAIL_Result> SP_ILL_GET_IR_DETAIL(Nullable<int> lngRequestID)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_IR_DETAIL_Result>("SP_ILL_GET_IR_DETAIL", lngRequestIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_IR_LIBADD_COUNTRY_Result> SP_ILL_GET_IR_LIBADD_COUNTRY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_IR_LIBADD_COUNTRY_Result>("SP_ILL_GET_IR_LIBADD_COUNTRY");
        }
    
        public virtual ObjectResult<SP_ILL_GET_IR_LOG_CANCEL_Result> SP_ILL_GET_IR_LOG_CANCEL(Nullable<int> intIllID, Nullable<int> intAPDUType)
        {
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            var intAPDUTypeParameter = intAPDUType.HasValue ?
                new ObjectParameter("intAPDUType", intAPDUType) :
                new ObjectParameter("intAPDUType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_IR_LOG_CANCEL_Result>("SP_ILL_GET_IR_LOG_CANCEL", intIllIDParameter, intAPDUTypeParameter);
        }
    
        public virtual int SP_ILL_GET_IR_RESPONSE(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_IR_RESPONSE", strIDsParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_IR_SHIPMESS_Result> SP_ILL_GET_IR_SHIPMESS(Nullable<int> intILLID)
        {
            var intILLIDParameter = intILLID.HasValue ?
                new ObjectParameter("intILLID", intILLID) :
                new ObjectParameter("intILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_IR_SHIPMESS_Result>("SP_ILL_GET_IR_SHIPMESS", intILLIDParameter);
        }
    
        public virtual int SP_ILL_GET_LIB_INFOR(Nullable<int> intLibID, Nullable<int> intType)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_LIB_INFOR", intLibIDParameter, intTypeParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_LIST_ZSERVER_Result> SP_ILL_GET_LIST_ZSERVER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_LIST_ZSERVER_Result>("SP_ILL_GET_LIST_ZSERVER");
        }
    
        public virtual int SP_ILL_GET_LOCAL_ELIBRARY_ADDR(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_LOCAL_ELIBRARY_ADDR", intIDParameter);
        }
    
        public virtual int SP_ILL_GET_LOCAL_LIBRARY_ADDR(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_LOCAL_LIBRARY_ADDR", intIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_LOCLIBADDR_Result> SP_ILL_GET_LOCLIBADDR(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_LOCLIBADDR_Result>("SP_ILL_GET_LOCLIBADDR", intIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_LOCLIBELECADDR_Result> SP_ILL_GET_LOCLIBELECADDR(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_LOCLIBELECADDR_Result>("SP_ILL_GET_LOCLIBELECADDR", intIDParameter);
        }
    
        public virtual int SP_ILL_GET_MEDIUM_TYPES(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_MEDIUM_TYPES", intIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_OR_DETAIL_Result> SP_ILL_GET_OR_DETAIL(Nullable<int> lngRequestID)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_OR_DETAIL_Result>("SP_ILL_GET_OR_DETAIL", lngRequestIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_OR_RENEW_LOG_Result> SP_ILL_GET_OR_RENEW_LOG(Nullable<int> lngILLID)
        {
            var lngILLIDParameter = lngILLID.HasValue ?
                new ObjectParameter("lngILLID", lngILLID) :
                new ObjectParameter("lngILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_OR_RENEW_LOG_Result>("SP_ILL_GET_OR_RENEW_LOG", lngILLIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_OREQUEST_ITEMS_Result> SP_ILL_GET_OREQUEST_ITEMS(Nullable<int> intID, Nullable<int> intExpandInfor)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intExpandInforParameter = intExpandInfor.HasValue ?
                new ObjectParameter("intExpandInfor", intExpandInfor) :
                new ObjectParameter("intExpandInfor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_OREQUEST_ITEMS_Result>("SP_ILL_GET_OREQUEST_ITEMS", intIDParameter, intExpandInforParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_OUTGOING_REQUEST_LOG_RECEIVE_Result> SP_ILL_GET_OUTGOING_REQUEST_LOG_RECEIVE(Nullable<int> intIllID)
        {
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_OUTGOING_REQUEST_LOG_RECEIVE_Result>("SP_ILL_GET_OUTGOING_REQUEST_LOG_RECEIVE", intIllIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_OUTGOING_REQUESTS_Result> SP_ILL_GET_OUTGOING_REQUESTS(Nullable<int> intOutRequestID)
        {
            var intOutRequestIDParameter = intOutRequestID.HasValue ?
                new ObjectParameter("intOutRequestID", intOutRequestID) :
                new ObjectParameter("intOutRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_OUTGOING_REQUESTS_Result>("SP_ILL_GET_OUTGOING_REQUESTS", intOutRequestIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_OUTOVERDUE_INFOR_Result> SP_ILL_GET_OUTOVERDUE_INFOR(Nullable<int> intILLID)
        {
            var intILLIDParameter = intILLID.HasValue ?
                new ObjectParameter("intILLID", intILLID) :
                new ObjectParameter("intILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_OUTOVERDUE_INFOR_Result>("SP_ILL_GET_OUTOVERDUE_INFOR", intILLIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_OUTSERREPORT_Result> SP_ILL_GET_OUTSERREPORT(Nullable<int> intSelectMode)
        {
            var intSelectModeParameter = intSelectMode.HasValue ?
                new ObjectParameter("intSelectMode", intSelectMode) :
                new ObjectParameter("intSelectMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_OUTSERREPORT_Result>("SP_ILL_GET_OUTSERREPORT", intSelectModeParameter);
        }
    
        public virtual int SP_ILL_GET_PACKAGE(string strSelectMode, Nullable<int> intID)
        {
            var strSelectModeParameter = strSelectMode != null ?
                new ObjectParameter("strSelectMode", strSelectMode) :
                new ObjectParameter("strSelectMode", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_PACKAGE", strSelectModeParameter, intIDParameter);
        }
    
        public virtual int SP_ILL_GET_PATRON_GROUP(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_PATRON_GROUP", intIDParameter);
        }
    
        public virtual int SP_ILL_GET_PAYMENTTYPES(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_PAYMENTTYPES", intIDParameter);
        }
    
        public virtual int SP_ILL_GET_PHYSICALMODE(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_PHYSICALMODE", intIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_REQITEM_INFOR_Result> SP_ILL_GET_REQITEM_INFOR(Nullable<int> lngID, Nullable<int> intType)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_REQITEM_INFOR_Result>("SP_ILL_GET_REQITEM_INFOR", lngIDParameter, intTypeParameter);
        }
    
        public virtual int SP_ILL_GET_REQUEST_ITEM(Nullable<int> intID, Nullable<int> intRequestType)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intRequestTypeParameter = intRequestType.HasValue ?
                new ObjectParameter("intRequestType", intRequestType) :
                new ObjectParameter("intRequestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_REQUEST_ITEM", intIDParameter, intRequestTypeParameter);
        }
    
        public virtual int SP_ILL_GET_REQUESTID_BY_INDEX(Nullable<int> intMode, Nullable<int> lngIndex)
        {
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var lngIndexParameter = lngIndex.HasValue ?
                new ObjectParameter("lngIndex", lngIndex) :
                new ObjectParameter("lngIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_GET_REQUESTID_BY_INDEX", intModeParameter, lngIndexParameter);
        }
    
        public virtual ObjectResult<SP_ILL_GET_RESPONSES_Result> SP_ILL_GET_RESPONSES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_RESPONSES_Result>("SP_ILL_GET_RESPONSES");
        }
    
        public virtual ObjectResult<SP_ILL_GET_SERREPORT_Result> SP_ILL_GET_SERREPORT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_SERREPORT_Result>("SP_ILL_GET_SERREPORT");
        }
    
        public virtual ObjectResult<SP_ILL_GET_ZSERVER_DBS_Result> SP_ILL_GET_ZSERVER_DBS(Nullable<int> intServerID, Nullable<bool> intShowAll)
        {
            var intServerIDParameter = intServerID.HasValue ?
                new ObjectParameter("intServerID", intServerID) :
                new ObjectParameter("intServerID", typeof(int));
    
            var intShowAllParameter = intShowAll.HasValue ?
                new ObjectParameter("intShowAll", intShowAll) :
                new ObjectParameter("intShowAll", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_GET_ZSERVER_DBS_Result>("SP_ILL_GET_ZSERVER_DBS", intServerIDParameter, intShowAllParameter);
        }
    
        public virtual ObjectResult<SP_ILL_INCOMMONREQUEST_Result> SP_ILL_INCOMMONREQUEST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_INCOMMONREQUEST_Result>("SP_ILL_INCOMMONREQUEST");
        }
    
        public virtual ObjectResult<SP_ILL_INGENERATEREPORT_Result> SP_ILL_INGENERATEREPORT(Nullable<int> intSelectMode)
        {
            var intSelectModeParameter = intSelectMode.HasValue ?
                new ObjectParameter("intSelectMode", intSelectMode) :
                new ObjectParameter("intSelectMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_INGENERATEREPORT_Result>("SP_ILL_INGENERATEREPORT", intSelectModeParameter);
        }
    
        public virtual int SP_ILL_INSERT_IN_REQUEST_ITEM(Nullable<int> intID, string strCallNumber, string strTitle, string strAuthor, string strPlaceOfPub, string strPublisher, string strSeriesTitleNumber, string strVolumeIssue, string strEdition, string strPubDate, string strComponentPubDate, string strArticleAuthor, string strArticleTitle, string strPagination, string strNationalBibNumber, string strISBN, string strISSN, Nullable<int> intItemType, string strSystemNumber, string strOtherNumbers, string strVerification, string strLocalNote, string strSponsoringBody, Nullable<int> intRequestType)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPlaceOfPubParameter = strPlaceOfPub != null ?
                new ObjectParameter("strPlaceOfPub", strPlaceOfPub) :
                new ObjectParameter("strPlaceOfPub", typeof(string));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var strSeriesTitleNumberParameter = strSeriesTitleNumber != null ?
                new ObjectParameter("strSeriesTitleNumber", strSeriesTitleNumber) :
                new ObjectParameter("strSeriesTitleNumber", typeof(string));
    
            var strVolumeIssueParameter = strVolumeIssue != null ?
                new ObjectParameter("strVolumeIssue", strVolumeIssue) :
                new ObjectParameter("strVolumeIssue", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var strPubDateParameter = strPubDate != null ?
                new ObjectParameter("strPubDate", strPubDate) :
                new ObjectParameter("strPubDate", typeof(string));
    
            var strComponentPubDateParameter = strComponentPubDate != null ?
                new ObjectParameter("strComponentPubDate", strComponentPubDate) :
                new ObjectParameter("strComponentPubDate", typeof(string));
    
            var strArticleAuthorParameter = strArticleAuthor != null ?
                new ObjectParameter("strArticleAuthor", strArticleAuthor) :
                new ObjectParameter("strArticleAuthor", typeof(string));
    
            var strArticleTitleParameter = strArticleTitle != null ?
                new ObjectParameter("strArticleTitle", strArticleTitle) :
                new ObjectParameter("strArticleTitle", typeof(string));
    
            var strPaginationParameter = strPagination != null ?
                new ObjectParameter("strPagination", strPagination) :
                new ObjectParameter("strPagination", typeof(string));
    
            var strNationalBibNumberParameter = strNationalBibNumber != null ?
                new ObjectParameter("strNationalBibNumber", strNationalBibNumber) :
                new ObjectParameter("strNationalBibNumber", typeof(string));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(int));
    
            var strSystemNumberParameter = strSystemNumber != null ?
                new ObjectParameter("strSystemNumber", strSystemNumber) :
                new ObjectParameter("strSystemNumber", typeof(string));
    
            var strOtherNumbersParameter = strOtherNumbers != null ?
                new ObjectParameter("strOtherNumbers", strOtherNumbers) :
                new ObjectParameter("strOtherNumbers", typeof(string));
    
            var strVerificationParameter = strVerification != null ?
                new ObjectParameter("strVerification", strVerification) :
                new ObjectParameter("strVerification", typeof(string));
    
            var strLocalNoteParameter = strLocalNote != null ?
                new ObjectParameter("strLocalNote", strLocalNote) :
                new ObjectParameter("strLocalNote", typeof(string));
    
            var strSponsoringBodyParameter = strSponsoringBody != null ?
                new ObjectParameter("strSponsoringBody", strSponsoringBody) :
                new ObjectParameter("strSponsoringBody", typeof(string));
    
            var intRequestTypeParameter = intRequestType.HasValue ?
                new ObjectParameter("intRequestType", intRequestType) :
                new ObjectParameter("intRequestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_IN_REQUEST_ITEM", intIDParameter, strCallNumberParameter, strTitleParameter, strAuthorParameter, strPlaceOfPubParameter, strPublisherParameter, strSeriesTitleNumberParameter, strVolumeIssueParameter, strEditionParameter, strPubDateParameter, strComponentPubDateParameter, strArticleAuthorParameter, strArticleTitleParameter, strPaginationParameter, strNationalBibNumberParameter, strISBNParameter, strISSNParameter, intItemTypeParameter, strSystemNumberParameter, strOtherNumbersParameter, strVerificationParameter, strLocalNoteParameter, strSponsoringBodyParameter, intRequestTypeParameter);
        }
    
        public virtual int SP_ILL_INSERT_IN_REQUESTS_BILINF(Nullable<int> intID, string strBillDelivName, string strBillDelivXAddress, string strBillDelivStreet, string strBillDelivBox, string strBillDelivCity, string strBillDelivRegion, Nullable<byte> intBillDelivCountry, string strBillDelivCode)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strBillDelivNameParameter = strBillDelivName != null ?
                new ObjectParameter("strBillDelivName", strBillDelivName) :
                new ObjectParameter("strBillDelivName", typeof(string));
    
            var strBillDelivXAddressParameter = strBillDelivXAddress != null ?
                new ObjectParameter("strBillDelivXAddress", strBillDelivXAddress) :
                new ObjectParameter("strBillDelivXAddress", typeof(string));
    
            var strBillDelivStreetParameter = strBillDelivStreet != null ?
                new ObjectParameter("strBillDelivStreet", strBillDelivStreet) :
                new ObjectParameter("strBillDelivStreet", typeof(string));
    
            var strBillDelivBoxParameter = strBillDelivBox != null ?
                new ObjectParameter("strBillDelivBox", strBillDelivBox) :
                new ObjectParameter("strBillDelivBox", typeof(string));
    
            var strBillDelivCityParameter = strBillDelivCity != null ?
                new ObjectParameter("strBillDelivCity", strBillDelivCity) :
                new ObjectParameter("strBillDelivCity", typeof(string));
    
            var strBillDelivRegionParameter = strBillDelivRegion != null ?
                new ObjectParameter("strBillDelivRegion", strBillDelivRegion) :
                new ObjectParameter("strBillDelivRegion", typeof(string));
    
            var intBillDelivCountryParameter = intBillDelivCountry.HasValue ?
                new ObjectParameter("intBillDelivCountry", intBillDelivCountry) :
                new ObjectParameter("intBillDelivCountry", typeof(byte));
    
            var strBillDelivCodeParameter = strBillDelivCode != null ?
                new ObjectParameter("strBillDelivCode", strBillDelivCode) :
                new ObjectParameter("strBillDelivCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_IN_REQUESTS_BILINF", intIDParameter, strBillDelivNameParameter, strBillDelivXAddressParameter, strBillDelivStreetParameter, strBillDelivBoxParameter, strBillDelivCityParameter, strBillDelivRegionParameter, intBillDelivCountryParameter, strBillDelivCodeParameter);
        }
    
        public virtual int SP_ILL_INSERT_IN_REQUESTS_DELINF(Nullable<int> intID, string strPostDelivName, string strBillDelivXAddress, string strPostDelivStreet, string strPostDelivBox, string strPostDelivCity, string strPostDelivRegion, Nullable<byte> intPostDelivCountry, string strPostDelivCode)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strPostDelivNameParameter = strPostDelivName != null ?
                new ObjectParameter("strPostDelivName", strPostDelivName) :
                new ObjectParameter("strPostDelivName", typeof(string));
    
            var strBillDelivXAddressParameter = strBillDelivXAddress != null ?
                new ObjectParameter("strBillDelivXAddress", strBillDelivXAddress) :
                new ObjectParameter("strBillDelivXAddress", typeof(string));
    
            var strPostDelivStreetParameter = strPostDelivStreet != null ?
                new ObjectParameter("strPostDelivStreet", strPostDelivStreet) :
                new ObjectParameter("strPostDelivStreet", typeof(string));
    
            var strPostDelivBoxParameter = strPostDelivBox != null ?
                new ObjectParameter("strPostDelivBox", strPostDelivBox) :
                new ObjectParameter("strPostDelivBox", typeof(string));
    
            var strPostDelivCityParameter = strPostDelivCity != null ?
                new ObjectParameter("strPostDelivCity", strPostDelivCity) :
                new ObjectParameter("strPostDelivCity", typeof(string));
    
            var strPostDelivRegionParameter = strPostDelivRegion != null ?
                new ObjectParameter("strPostDelivRegion", strPostDelivRegion) :
                new ObjectParameter("strPostDelivRegion", typeof(string));
    
            var intPostDelivCountryParameter = intPostDelivCountry.HasValue ?
                new ObjectParameter("intPostDelivCountry", intPostDelivCountry) :
                new ObjectParameter("intPostDelivCountry", typeof(byte));
    
            var strPostDelivCodeParameter = strPostDelivCode != null ?
                new ObjectParameter("strPostDelivCode", strPostDelivCode) :
                new ObjectParameter("strPostDelivCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_IN_REQUESTS_DELINF", intIDParameter, strPostDelivNameParameter, strBillDelivXAddressParameter, strPostDelivStreetParameter, strPostDelivBoxParameter, strPostDelivCityParameter, strPostDelivRegionParameter, intPostDelivCountryParameter, strPostDelivCodeParameter);
        }
    
        public virtual int SP_ILL_INSERT_INCOMING_REQUEST(Nullable<short> bitAlert, string strBarcode, string strCancelledDate, Nullable<short> intChargeableUnits, string strCheckedInDate, string strCheckedOutDate, Nullable<short> intCopyrightCompliance, Nullable<decimal> dbCost, string strCurrencyCode, string strCurrencyCode1, string strCurrencyCode2, string strCurrencyCode3, Nullable<short> intDelivConditionID, Nullable<short> bitDelivMode, string strDueDate, string strEDelivMode, string strEDelivTSAddr, string strEmailReplyAddress, string strExpiryDate, Nullable<decimal> dbInsuredForCost, string strInternalRefNumber, Nullable<short> intItemType, Nullable<short> intLoanTypeID, Nullable<decimal> dbMaxCost, Nullable<short> intMedium, string strNeedBeforeDate, string strNote, string strPatronID, string strPatronName, string strPatronStatus, Nullable<short> bitPaymentProvided, Nullable<short> intPaymentType, Nullable<short> intPriority, string strReceivedDate, Nullable<short> bitReciprocalAgreement, Nullable<short> bitRenewable, Nullable<short> intRenewals, string strRequestDate, Nullable<int> intRequesterID, string strRequestID, string strRespondDate, string strReturnedDate, Nullable<decimal> dbReturnInsuranceCost, Nullable<short> intReturnLocID, Nullable<short> intServiceType, string strShippedDate, string strIssueID, Nullable<short> intStatus, Nullable<int> intItemID, string strTitle, Nullable<short> intTransportationModeID, Nullable<short> bitWillPayFee, ObjectParameter intID)
        {
            var bitAlertParameter = bitAlert.HasValue ?
                new ObjectParameter("bitAlert", bitAlert) :
                new ObjectParameter("bitAlert", typeof(short));
    
            var strBarcodeParameter = strBarcode != null ?
                new ObjectParameter("strBarcode", strBarcode) :
                new ObjectParameter("strBarcode", typeof(string));
    
            var strCancelledDateParameter = strCancelledDate != null ?
                new ObjectParameter("strCancelledDate", strCancelledDate) :
                new ObjectParameter("strCancelledDate", typeof(string));
    
            var intChargeableUnitsParameter = intChargeableUnits.HasValue ?
                new ObjectParameter("intChargeableUnits", intChargeableUnits) :
                new ObjectParameter("intChargeableUnits", typeof(short));
    
            var strCheckedInDateParameter = strCheckedInDate != null ?
                new ObjectParameter("strCheckedInDate", strCheckedInDate) :
                new ObjectParameter("strCheckedInDate", typeof(string));
    
            var strCheckedOutDateParameter = strCheckedOutDate != null ?
                new ObjectParameter("strCheckedOutDate", strCheckedOutDate) :
                new ObjectParameter("strCheckedOutDate", typeof(string));
    
            var intCopyrightComplianceParameter = intCopyrightCompliance.HasValue ?
                new ObjectParameter("intCopyrightCompliance", intCopyrightCompliance) :
                new ObjectParameter("intCopyrightCompliance", typeof(short));
    
            var dbCostParameter = dbCost.HasValue ?
                new ObjectParameter("dbCost", dbCost) :
                new ObjectParameter("dbCost", typeof(decimal));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var strCurrencyCode1Parameter = strCurrencyCode1 != null ?
                new ObjectParameter("strCurrencyCode1", strCurrencyCode1) :
                new ObjectParameter("strCurrencyCode1", typeof(string));
    
            var strCurrencyCode2Parameter = strCurrencyCode2 != null ?
                new ObjectParameter("strCurrencyCode2", strCurrencyCode2) :
                new ObjectParameter("strCurrencyCode2", typeof(string));
    
            var strCurrencyCode3Parameter = strCurrencyCode3 != null ?
                new ObjectParameter("strCurrencyCode3", strCurrencyCode3) :
                new ObjectParameter("strCurrencyCode3", typeof(string));
    
            var intDelivConditionIDParameter = intDelivConditionID.HasValue ?
                new ObjectParameter("intDelivConditionID", intDelivConditionID) :
                new ObjectParameter("intDelivConditionID", typeof(short));
    
            var bitDelivModeParameter = bitDelivMode.HasValue ?
                new ObjectParameter("bitDelivMode", bitDelivMode) :
                new ObjectParameter("bitDelivMode", typeof(short));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            var strEDelivModeParameter = strEDelivMode != null ?
                new ObjectParameter("strEDelivMode", strEDelivMode) :
                new ObjectParameter("strEDelivMode", typeof(string));
    
            var strEDelivTSAddrParameter = strEDelivTSAddr != null ?
                new ObjectParameter("strEDelivTSAddr", strEDelivTSAddr) :
                new ObjectParameter("strEDelivTSAddr", typeof(string));
    
            var strEmailReplyAddressParameter = strEmailReplyAddress != null ?
                new ObjectParameter("strEmailReplyAddress", strEmailReplyAddress) :
                new ObjectParameter("strEmailReplyAddress", typeof(string));
    
            var strExpiryDateParameter = strExpiryDate != null ?
                new ObjectParameter("strExpiryDate", strExpiryDate) :
                new ObjectParameter("strExpiryDate", typeof(string));
    
            var dbInsuredForCostParameter = dbInsuredForCost.HasValue ?
                new ObjectParameter("dbInsuredForCost", dbInsuredForCost) :
                new ObjectParameter("dbInsuredForCost", typeof(decimal));
    
            var strInternalRefNumberParameter = strInternalRefNumber != null ?
                new ObjectParameter("strInternalRefNumber", strInternalRefNumber) :
                new ObjectParameter("strInternalRefNumber", typeof(string));
    
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(short));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(short));
    
            var dbMaxCostParameter = dbMaxCost.HasValue ?
                new ObjectParameter("dbMaxCost", dbMaxCost) :
                new ObjectParameter("dbMaxCost", typeof(decimal));
    
            var intMediumParameter = intMedium.HasValue ?
                new ObjectParameter("intMedium", intMedium) :
                new ObjectParameter("intMedium", typeof(short));
    
            var strNeedBeforeDateParameter = strNeedBeforeDate != null ?
                new ObjectParameter("strNeedBeforeDate", strNeedBeforeDate) :
                new ObjectParameter("strNeedBeforeDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strPatronIDParameter = strPatronID != null ?
                new ObjectParameter("strPatronID", strPatronID) :
                new ObjectParameter("strPatronID", typeof(string));
    
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronStatusParameter = strPatronStatus != null ?
                new ObjectParameter("strPatronStatus", strPatronStatus) :
                new ObjectParameter("strPatronStatus", typeof(string));
    
            var bitPaymentProvidedParameter = bitPaymentProvided.HasValue ?
                new ObjectParameter("bitPaymentProvided", bitPaymentProvided) :
                new ObjectParameter("bitPaymentProvided", typeof(short));
    
            var intPaymentTypeParameter = intPaymentType.HasValue ?
                new ObjectParameter("intPaymentType", intPaymentType) :
                new ObjectParameter("intPaymentType", typeof(short));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(short));
    
            var strReceivedDateParameter = strReceivedDate != null ?
                new ObjectParameter("strReceivedDate", strReceivedDate) :
                new ObjectParameter("strReceivedDate", typeof(string));
    
            var bitReciprocalAgreementParameter = bitReciprocalAgreement.HasValue ?
                new ObjectParameter("bitReciprocalAgreement", bitReciprocalAgreement) :
                new ObjectParameter("bitReciprocalAgreement", typeof(short));
    
            var bitRenewableParameter = bitRenewable.HasValue ?
                new ObjectParameter("bitRenewable", bitRenewable) :
                new ObjectParameter("bitRenewable", typeof(short));
    
            var intRenewalsParameter = intRenewals.HasValue ?
                new ObjectParameter("intRenewals", intRenewals) :
                new ObjectParameter("intRenewals", typeof(short));
    
            var strRequestDateParameter = strRequestDate != null ?
                new ObjectParameter("strRequestDate", strRequestDate) :
                new ObjectParameter("strRequestDate", typeof(string));
    
            var intRequesterIDParameter = intRequesterID.HasValue ?
                new ObjectParameter("intRequesterID", intRequesterID) :
                new ObjectParameter("intRequesterID", typeof(int));
    
            var strRequestIDParameter = strRequestID != null ?
                new ObjectParameter("strRequestID", strRequestID) :
                new ObjectParameter("strRequestID", typeof(string));
    
            var strRespondDateParameter = strRespondDate != null ?
                new ObjectParameter("strRespondDate", strRespondDate) :
                new ObjectParameter("strRespondDate", typeof(string));
    
            var strReturnedDateParameter = strReturnedDate != null ?
                new ObjectParameter("strReturnedDate", strReturnedDate) :
                new ObjectParameter("strReturnedDate", typeof(string));
    
            var dbReturnInsuranceCostParameter = dbReturnInsuranceCost.HasValue ?
                new ObjectParameter("dbReturnInsuranceCost", dbReturnInsuranceCost) :
                new ObjectParameter("dbReturnInsuranceCost", typeof(decimal));
    
            var intReturnLocIDParameter = intReturnLocID.HasValue ?
                new ObjectParameter("intReturnLocID", intReturnLocID) :
                new ObjectParameter("intReturnLocID", typeof(short));
    
            var intServiceTypeParameter = intServiceType.HasValue ?
                new ObjectParameter("intServiceType", intServiceType) :
                new ObjectParameter("intServiceType", typeof(short));
    
            var strShippedDateParameter = strShippedDate != null ?
                new ObjectParameter("strShippedDate", strShippedDate) :
                new ObjectParameter("strShippedDate", typeof(string));
    
            var strIssueIDParameter = strIssueID != null ?
                new ObjectParameter("strIssueID", strIssueID) :
                new ObjectParameter("strIssueID", typeof(string));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(short));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intTransportationModeIDParameter = intTransportationModeID.HasValue ?
                new ObjectParameter("intTransportationModeID", intTransportationModeID) :
                new ObjectParameter("intTransportationModeID", typeof(short));
    
            var bitWillPayFeeParameter = bitWillPayFee.HasValue ?
                new ObjectParameter("bitWillPayFee", bitWillPayFee) :
                new ObjectParameter("bitWillPayFee", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_INCOMING_REQUEST", bitAlertParameter, strBarcodeParameter, strCancelledDateParameter, intChargeableUnitsParameter, strCheckedInDateParameter, strCheckedOutDateParameter, intCopyrightComplianceParameter, dbCostParameter, strCurrencyCodeParameter, strCurrencyCode1Parameter, strCurrencyCode2Parameter, strCurrencyCode3Parameter, intDelivConditionIDParameter, bitDelivModeParameter, strDueDateParameter, strEDelivModeParameter, strEDelivTSAddrParameter, strEmailReplyAddressParameter, strExpiryDateParameter, dbInsuredForCostParameter, strInternalRefNumberParameter, intItemTypeParameter, intLoanTypeIDParameter, dbMaxCostParameter, intMediumParameter, strNeedBeforeDateParameter, strNoteParameter, strPatronIDParameter, strPatronNameParameter, strPatronStatusParameter, bitPaymentProvidedParameter, intPaymentTypeParameter, intPriorityParameter, strReceivedDateParameter, bitReciprocalAgreementParameter, bitRenewableParameter, intRenewalsParameter, strRequestDateParameter, intRequesterIDParameter, strRequestIDParameter, strRespondDateParameter, strReturnedDateParameter, dbReturnInsuranceCostParameter, intReturnLocIDParameter, intServiceTypeParameter, strShippedDateParameter, strIssueIDParameter, intStatusParameter, intItemIDParameter, strTitleParameter, intTransportationModeIDParameter, bitWillPayFeeParameter, intID);
        }
    
        public virtual int SP_ILL_INSERT_INCOMREQUEST_LOG(Nullable<int> intIllID, Nullable<int> intRequesterID, string strNote, Nullable<short> intAPDUType, Nullable<int> intReasonID, string strProvidedDate, string strResponderSpecReason, Nullable<short> intSendShipped, Nullable<short> intSendCheckedIn, Nullable<short> intSendReceived, Nullable<short> intSendReturned, Nullable<short> intTRE, Nullable<short> intMedium, Nullable<decimal> dbCost, string strCurrencyCode1, Nullable<bool> bitAnswer, string strDueDate, Nullable<bool> bitRenewable, Nullable<bool> bitAlert, Nullable<short> intServiceType, string strLocation, Nullable<short> intCopyrightCompliance, string strReturnedVia, Nullable<decimal> dbInsuredForCost, string strCurrencyCode2, Nullable<decimal> dbReturnInsuranceCost, string strCurrencyCode3)
        {
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            var intRequesterIDParameter = intRequesterID.HasValue ?
                new ObjectParameter("intRequesterID", intRequesterID) :
                new ObjectParameter("intRequesterID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intAPDUTypeParameter = intAPDUType.HasValue ?
                new ObjectParameter("intAPDUType", intAPDUType) :
                new ObjectParameter("intAPDUType", typeof(short));
    
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(int));
    
            var strProvidedDateParameter = strProvidedDate != null ?
                new ObjectParameter("strProvidedDate", strProvidedDate) :
                new ObjectParameter("strProvidedDate", typeof(string));
    
            var strResponderSpecReasonParameter = strResponderSpecReason != null ?
                new ObjectParameter("strResponderSpecReason", strResponderSpecReason) :
                new ObjectParameter("strResponderSpecReason", typeof(string));
    
            var intSendShippedParameter = intSendShipped.HasValue ?
                new ObjectParameter("intSendShipped", intSendShipped) :
                new ObjectParameter("intSendShipped", typeof(short));
    
            var intSendCheckedInParameter = intSendCheckedIn.HasValue ?
                new ObjectParameter("intSendCheckedIn", intSendCheckedIn) :
                new ObjectParameter("intSendCheckedIn", typeof(short));
    
            var intSendReceivedParameter = intSendReceived.HasValue ?
                new ObjectParameter("intSendReceived", intSendReceived) :
                new ObjectParameter("intSendReceived", typeof(short));
    
            var intSendReturnedParameter = intSendReturned.HasValue ?
                new ObjectParameter("intSendReturned", intSendReturned) :
                new ObjectParameter("intSendReturned", typeof(short));
    
            var intTREParameter = intTRE.HasValue ?
                new ObjectParameter("intTRE", intTRE) :
                new ObjectParameter("intTRE", typeof(short));
    
            var intMediumParameter = intMedium.HasValue ?
                new ObjectParameter("intMedium", intMedium) :
                new ObjectParameter("intMedium", typeof(short));
    
            var dbCostParameter = dbCost.HasValue ?
                new ObjectParameter("dbCost", dbCost) :
                new ObjectParameter("dbCost", typeof(decimal));
    
            var strCurrencyCode1Parameter = strCurrencyCode1 != null ?
                new ObjectParameter("strCurrencyCode1", strCurrencyCode1) :
                new ObjectParameter("strCurrencyCode1", typeof(string));
    
            var bitAnswerParameter = bitAnswer.HasValue ?
                new ObjectParameter("bitAnswer", bitAnswer) :
                new ObjectParameter("bitAnswer", typeof(bool));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            var bitRenewableParameter = bitRenewable.HasValue ?
                new ObjectParameter("bitRenewable", bitRenewable) :
                new ObjectParameter("bitRenewable", typeof(bool));
    
            var bitAlertParameter = bitAlert.HasValue ?
                new ObjectParameter("bitAlert", bitAlert) :
                new ObjectParameter("bitAlert", typeof(bool));
    
            var intServiceTypeParameter = intServiceType.HasValue ?
                new ObjectParameter("intServiceType", intServiceType) :
                new ObjectParameter("intServiceType", typeof(short));
    
            var strLocationParameter = strLocation != null ?
                new ObjectParameter("strLocation", strLocation) :
                new ObjectParameter("strLocation", typeof(string));
    
            var intCopyrightComplianceParameter = intCopyrightCompliance.HasValue ?
                new ObjectParameter("intCopyrightCompliance", intCopyrightCompliance) :
                new ObjectParameter("intCopyrightCompliance", typeof(short));
    
            var strReturnedViaParameter = strReturnedVia != null ?
                new ObjectParameter("strReturnedVia", strReturnedVia) :
                new ObjectParameter("strReturnedVia", typeof(string));
    
            var dbInsuredForCostParameter = dbInsuredForCost.HasValue ?
                new ObjectParameter("dbInsuredForCost", dbInsuredForCost) :
                new ObjectParameter("dbInsuredForCost", typeof(decimal));
    
            var strCurrencyCode2Parameter = strCurrencyCode2 != null ?
                new ObjectParameter("strCurrencyCode2", strCurrencyCode2) :
                new ObjectParameter("strCurrencyCode2", typeof(string));
    
            var dbReturnInsuranceCostParameter = dbReturnInsuranceCost.HasValue ?
                new ObjectParameter("dbReturnInsuranceCost", dbReturnInsuranceCost) :
                new ObjectParameter("dbReturnInsuranceCost", typeof(decimal));
    
            var strCurrencyCode3Parameter = strCurrencyCode3 != null ?
                new ObjectParameter("strCurrencyCode3", strCurrencyCode3) :
                new ObjectParameter("strCurrencyCode3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_INCOMREQUEST_LOG", intIllIDParameter, intRequesterIDParameter, strNoteParameter, intAPDUTypeParameter, intReasonIDParameter, strProvidedDateParameter, strResponderSpecReasonParameter, intSendShippedParameter, intSendCheckedInParameter, intSendReceivedParameter, intSendReturnedParameter, intTREParameter, intMediumParameter, dbCostParameter, strCurrencyCode1Parameter, bitAnswerParameter, strDueDateParameter, bitRenewableParameter, bitAlertParameter, intServiceTypeParameter, strLocationParameter, intCopyrightComplianceParameter, strReturnedViaParameter, dbInsuredForCostParameter, strCurrencyCode2Parameter, dbReturnInsuranceCostParameter, strCurrencyCode3Parameter);
        }
    
        public virtual int SP_ILL_INSERT_IR_DENIED(Nullable<int> intIllID, string strRequestDate, Nullable<int> intRequesterID, Nullable<short> intReasonID, string strRespondDate, string strNote)
        {
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            var strRequestDateParameter = strRequestDate != null ?
                new ObjectParameter("strRequestDate", strRequestDate) :
                new ObjectParameter("strRequestDate", typeof(string));
    
            var intRequesterIDParameter = intRequesterID.HasValue ?
                new ObjectParameter("intRequesterID", intRequesterID) :
                new ObjectParameter("intRequesterID", typeof(int));
    
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(short));
    
            var strRespondDateParameter = strRespondDate != null ?
                new ObjectParameter("strRespondDate", strRespondDate) :
                new ObjectParameter("strRespondDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_IR_DENIED", intIllIDParameter, strRequestDateParameter, intRequesterIDParameter, intReasonIDParameter, strRespondDateParameter, strNoteParameter);
        }
    
        public virtual int SP_ILL_INSERT_OR_DENIED(Nullable<int> intIllID, string strRequestDate, Nullable<int> intResponderID, Nullable<short> intReasonID, string strRespondDate, string strNote)
        {
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            var strRequestDateParameter = strRequestDate != null ?
                new ObjectParameter("strRequestDate", strRequestDate) :
                new ObjectParameter("strRequestDate", typeof(string));
    
            var intResponderIDParameter = intResponderID.HasValue ?
                new ObjectParameter("intResponderID", intResponderID) :
                new ObjectParameter("intResponderID", typeof(int));
    
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(short));
    
            var strRespondDateParameter = strRespondDate != null ?
                new ObjectParameter("strRespondDate", strRespondDate) :
                new ObjectParameter("strRespondDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_OR_DENIED", intIllIDParameter, strRequestDateParameter, intResponderIDParameter, intReasonIDParameter, strRespondDateParameter, strNoteParameter);
        }
    
        public virtual int SP_ILL_INSERT_OUTGOING_REQUESTS_LOG(Nullable<int> intIllID, Nullable<int> intResponderID, string strTransactionDate, string strNote, Nullable<int> intAPDUType, Nullable<int> intReasonID, string strProvidedDate, string strResponderSpecReason, Nullable<int> intSendShipped, Nullable<int> intSendCheckedIn, Nullable<int> intSendReceived, Nullable<int> intSendReturned, Nullable<int> intTRE, Nullable<int> intMedium, Nullable<double> dbCost, string strCurrencyCode1, Nullable<bool> intAnswer, string strDueDate, Nullable<bool> intRenewable, Nullable<bool> intAlert, Nullable<int> intServiceType, string strLocation, Nullable<int> intCopyrightCompliance, string strReturnedVia, Nullable<double> dbInsuredForCost, string strCurrencyCode2, Nullable<double> dbReturnInsuranceCost, string strCurrencyCode3, string strTransportationMode)
        {
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            var intResponderIDParameter = intResponderID.HasValue ?
                new ObjectParameter("intResponderID", intResponderID) :
                new ObjectParameter("intResponderID", typeof(int));
    
            var strTransactionDateParameter = strTransactionDate != null ?
                new ObjectParameter("strTransactionDate", strTransactionDate) :
                new ObjectParameter("strTransactionDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intAPDUTypeParameter = intAPDUType.HasValue ?
                new ObjectParameter("intAPDUType", intAPDUType) :
                new ObjectParameter("intAPDUType", typeof(int));
    
            var intReasonIDParameter = intReasonID.HasValue ?
                new ObjectParameter("intReasonID", intReasonID) :
                new ObjectParameter("intReasonID", typeof(int));
    
            var strProvidedDateParameter = strProvidedDate != null ?
                new ObjectParameter("strProvidedDate", strProvidedDate) :
                new ObjectParameter("strProvidedDate", typeof(string));
    
            var strResponderSpecReasonParameter = strResponderSpecReason != null ?
                new ObjectParameter("strResponderSpecReason", strResponderSpecReason) :
                new ObjectParameter("strResponderSpecReason", typeof(string));
    
            var intSendShippedParameter = intSendShipped.HasValue ?
                new ObjectParameter("intSendShipped", intSendShipped) :
                new ObjectParameter("intSendShipped", typeof(int));
    
            var intSendCheckedInParameter = intSendCheckedIn.HasValue ?
                new ObjectParameter("intSendCheckedIn", intSendCheckedIn) :
                new ObjectParameter("intSendCheckedIn", typeof(int));
    
            var intSendReceivedParameter = intSendReceived.HasValue ?
                new ObjectParameter("intSendReceived", intSendReceived) :
                new ObjectParameter("intSendReceived", typeof(int));
    
            var intSendReturnedParameter = intSendReturned.HasValue ?
                new ObjectParameter("intSendReturned", intSendReturned) :
                new ObjectParameter("intSendReturned", typeof(int));
    
            var intTREParameter = intTRE.HasValue ?
                new ObjectParameter("intTRE", intTRE) :
                new ObjectParameter("intTRE", typeof(int));
    
            var intMediumParameter = intMedium.HasValue ?
                new ObjectParameter("intMedium", intMedium) :
                new ObjectParameter("intMedium", typeof(int));
    
            var dbCostParameter = dbCost.HasValue ?
                new ObjectParameter("dbCost", dbCost) :
                new ObjectParameter("dbCost", typeof(double));
    
            var strCurrencyCode1Parameter = strCurrencyCode1 != null ?
                new ObjectParameter("strCurrencyCode1", strCurrencyCode1) :
                new ObjectParameter("strCurrencyCode1", typeof(string));
    
            var intAnswerParameter = intAnswer.HasValue ?
                new ObjectParameter("intAnswer", intAnswer) :
                new ObjectParameter("intAnswer", typeof(bool));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            var intRenewableParameter = intRenewable.HasValue ?
                new ObjectParameter("intRenewable", intRenewable) :
                new ObjectParameter("intRenewable", typeof(bool));
    
            var intAlertParameter = intAlert.HasValue ?
                new ObjectParameter("intAlert", intAlert) :
                new ObjectParameter("intAlert", typeof(bool));
    
            var intServiceTypeParameter = intServiceType.HasValue ?
                new ObjectParameter("intServiceType", intServiceType) :
                new ObjectParameter("intServiceType", typeof(int));
    
            var strLocationParameter = strLocation != null ?
                new ObjectParameter("strLocation", strLocation) :
                new ObjectParameter("strLocation", typeof(string));
    
            var intCopyrightComplianceParameter = intCopyrightCompliance.HasValue ?
                new ObjectParameter("intCopyrightCompliance", intCopyrightCompliance) :
                new ObjectParameter("intCopyrightCompliance", typeof(int));
    
            var strReturnedViaParameter = strReturnedVia != null ?
                new ObjectParameter("strReturnedVia", strReturnedVia) :
                new ObjectParameter("strReturnedVia", typeof(string));
    
            var dbInsuredForCostParameter = dbInsuredForCost.HasValue ?
                new ObjectParameter("dbInsuredForCost", dbInsuredForCost) :
                new ObjectParameter("dbInsuredForCost", typeof(double));
    
            var strCurrencyCode2Parameter = strCurrencyCode2 != null ?
                new ObjectParameter("strCurrencyCode2", strCurrencyCode2) :
                new ObjectParameter("strCurrencyCode2", typeof(string));
    
            var dbReturnInsuranceCostParameter = dbReturnInsuranceCost.HasValue ?
                new ObjectParameter("dbReturnInsuranceCost", dbReturnInsuranceCost) :
                new ObjectParameter("dbReturnInsuranceCost", typeof(double));
    
            var strCurrencyCode3Parameter = strCurrencyCode3 != null ?
                new ObjectParameter("strCurrencyCode3", strCurrencyCode3) :
                new ObjectParameter("strCurrencyCode3", typeof(string));
    
            var strTransportationModeParameter = strTransportationMode != null ?
                new ObjectParameter("strTransportationMode", strTransportationMode) :
                new ObjectParameter("strTransportationMode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_OUTGOING_REQUESTS_LOG", intIllIDParameter, intResponderIDParameter, strTransactionDateParameter, strNoteParameter, intAPDUTypeParameter, intReasonIDParameter, strProvidedDateParameter, strResponderSpecReasonParameter, intSendShippedParameter, intSendCheckedInParameter, intSendReceivedParameter, intSendReturnedParameter, intTREParameter, intMediumParameter, dbCostParameter, strCurrencyCode1Parameter, intAnswerParameter, strDueDateParameter, intRenewableParameter, intAlertParameter, intServiceTypeParameter, strLocationParameter, intCopyrightComplianceParameter, strReturnedViaParameter, dbInsuredForCostParameter, strCurrencyCode2Parameter, dbReturnInsuranceCostParameter, strCurrencyCode3Parameter, strTransportationModeParameter);
        }
    
        public virtual int SP_ILL_INSERT_Z3950_DBS(Nullable<int> intServerID, string strDBName, string strDescription, ObjectParameter intResult)
        {
            var intServerIDParameter = intServerID.HasValue ?
                new ObjectParameter("intServerID", intServerID) :
                new ObjectParameter("intServerID", typeof(int));
    
            var strDBNameParameter = strDBName != null ?
                new ObjectParameter("strDBName", strDBName) :
                new ObjectParameter("strDBName", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_Z3950_DBS", intServerIDParameter, strDBNameParameter, strDescriptionParameter, intResult);
        }
    
        public virtual int SP_ILL_INSERT_ZSERVER_LIST(string strName, string strHost, Nullable<int> intPort, string strAccount, string strPassword, Nullable<bool> bytPrefer, ObjectParameter intResult)
        {
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strHostParameter = strHost != null ?
                new ObjectParameter("strHost", strHost) :
                new ObjectParameter("strHost", typeof(string));
    
            var intPortParameter = intPort.HasValue ?
                new ObjectParameter("intPort", intPort) :
                new ObjectParameter("intPort", typeof(int));
    
            var strAccountParameter = strAccount != null ?
                new ObjectParameter("strAccount", strAccount) :
                new ObjectParameter("strAccount", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var bytPreferParameter = bytPrefer.HasValue ?
                new ObjectParameter("bytPrefer", bytPrefer) :
                new ObjectParameter("bytPrefer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_INSERT_ZSERVER_LIST", strNameParameter, strHostParameter, intPortParameter, strAccountParameter, strPasswordParameter, bytPreferParameter, intResult);
        }
    
        public virtual int SP_ILL_OR_CHANGE_STATUS(Nullable<int> lngID, string strNote, Nullable<int> intType)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_OR_CHANGE_STATUS", lngIDParameter, strNoteParameter, intTypeParameter);
        }
    
        public virtual int SP_ILL_OR_LOG_INS(Nullable<int> lngID, string strNote, Nullable<int> intAPDUType)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intAPDUTypeParameter = intAPDUType.HasValue ?
                new ObjectParameter("intAPDUType", intAPDUType) :
                new ObjectParameter("intAPDUType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_OR_LOG_INS", lngIDParameter, strNoteParameter, intAPDUTypeParameter);
        }
    
        public virtual int SP_ILL_OR_RENEW(Nullable<int> lngILLID, Nullable<int> lngLogID, string strDesiredDueDate, string strNote)
        {
            var lngILLIDParameter = lngILLID.HasValue ?
                new ObjectParameter("lngILLID", lngILLID) :
                new ObjectParameter("lngILLID", typeof(int));
    
            var lngLogIDParameter = lngLogID.HasValue ?
                new ObjectParameter("lngLogID", lngLogID) :
                new ObjectParameter("lngLogID", typeof(int));
    
            var strDesiredDueDateParameter = strDesiredDueDate != null ?
                new ObjectParameter("strDesiredDueDate", strDesiredDueDate) :
                new ObjectParameter("strDesiredDueDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_OR_RENEW", lngILLIDParameter, lngLogIDParameter, strDesiredDueDateParameter, strNoteParameter);
        }
    
        public virtual int SP_ILL_OR_SEND_REG(Nullable<int> lngILLID)
        {
            var lngILLIDParameter = lngILLID.HasValue ?
                new ObjectParameter("lngILLID", lngILLID) :
                new ObjectParameter("lngILLID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_OR_SEND_REG", lngILLIDParameter);
        }
    
        public virtual int SP_ILL_OUT_ANSWERCONDITION(Nullable<int> intAnswer, Nullable<int> lngID, string strNote)
        {
            var intAnswerParameter = intAnswer.HasValue ?
                new ObjectParameter("intAnswer", intAnswer) :
                new ObjectParameter("intAnswer", typeof(int));
    
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_OUT_ANSWERCONDITION", intAnswerParameter, lngIDParameter, strNoteParameter);
        }
    
        public virtual int SP_ILL_OUT_CANCEL(Nullable<int> lngID, string strNote)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_OUT_CANCEL", lngIDParameter, strNoteParameter);
        }
    
        public virtual ObjectResult<SP_ILL_OUTGENERATEREPORT_Result> SP_ILL_OUTGENERATEREPORT(Nullable<int> intSelectMode)
        {
            var intSelectModeParameter = intSelectMode.HasValue ?
                new ObjectParameter("intSelectMode", intSelectMode) :
                new ObjectParameter("intSelectMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_OUTGENERATEREPORT_Result>("SP_ILL_OUTGENERATEREPORT", intSelectModeParameter);
        }
    
        public virtual int SP_ILL_OUTGOING_REQUEST_LOG_DEL(Nullable<int> intIllID)
        {
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_OUTGOING_REQUEST_LOG_DEL", intIllIDParameter);
        }
    
        public virtual int SP_ILL_RECALLIT(Nullable<int> intILLID, Nullable<int> intRequesterID, string strNote)
        {
            var intILLIDParameter = intILLID.HasValue ?
                new ObjectParameter("intILLID", intILLID) :
                new ObjectParameter("intILLID", typeof(int));
    
            var intRequesterIDParameter = intRequesterID.HasValue ?
                new ObjectParameter("intRequesterID", intRequesterID) :
                new ObjectParameter("intRequesterID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_RECALLIT", intILLIDParameter, intRequesterIDParameter, strNoteParameter);
        }
    
        public virtual ObjectResult<SP_ILL_RESPONSES_GET_DENIED_Result> SP_ILL_RESPONSES_GET_DENIED(Nullable<int> intRequestID)
        {
            var intRequestIDParameter = intRequestID.HasValue ?
                new ObjectParameter("intRequestID", intRequestID) :
                new ObjectParameter("intRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_RESPONSES_GET_DENIED_Result>("SP_ILL_RESPONSES_GET_DENIED", intRequestIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_RESPONSES_GET_GENDENIED_Result> SP_ILL_RESPONSES_GET_GENDENIED(Nullable<int> intRequestID)
        {
            var intRequestIDParameter = intRequestID.HasValue ?
                new ObjectParameter("intRequestID", intRequestID) :
                new ObjectParameter("intRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_RESPONSES_GET_GENDENIED_Result>("SP_ILL_RESPONSES_GET_GENDENIED", intRequestIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_RESPONSES_GET_PATDENIED_Result> SP_ILL_RESPONSES_GET_PATDENIED()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_RESPONSES_GET_PATDENIED_Result>("SP_ILL_RESPONSES_GET_PATDENIED");
        }
    
        public virtual int SP_ILL_SEARCH_PATRON(string strPatronName, string strPatronCode)
        {
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_SEARCH_PATRON", strPatronNameParameter, strPatronCodeParameter);
        }
    
        public virtual int SP_ILL_SET_IN_ITEM(Nullable<int> lngILLID, Nullable<int> lngItemID, string strIssueID)
        {
            var lngILLIDParameter = lngILLID.HasValue ?
                new ObjectParameter("lngILLID", lngILLID) :
                new ObjectParameter("lngILLID", typeof(int));
    
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var strIssueIDParameter = strIssueID != null ?
                new ObjectParameter("strIssueID", strIssueID) :
                new ObjectParameter("strIssueID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_SET_IN_ITEM", lngILLIDParameter, lngItemIDParameter, strIssueIDParameter);
        }
    
        public virtual ObjectResult<SP_ILL_STAT_QUICKVIEW_Result> SP_ILL_STAT_QUICKVIEW(Nullable<int> intOption)
        {
            var intOptionParameter = intOption.HasValue ?
                new ObjectParameter("intOption", intOption) :
                new ObjectParameter("intOption", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_STAT_QUICKVIEW_Result>("SP_ILL_STAT_QUICKVIEW", intOptionParameter);
        }
    
        public virtual ObjectResult<SP_ILL_STATISTIC_SERVICE_Result> SP_ILL_STATISTIC_SERVICE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_STATISTIC_SERVICE_Result>("SP_ILL_STATISTIC_SERVICE");
        }
    
        public virtual int SP_ILL_UPDATE_COPYPAYPHYTYPE(string strSelectMode, string strType, Nullable<int> intID)
        {
            var strSelectModeParameter = strSelectMode != null ?
                new ObjectParameter("strSelectMode", strSelectMode) :
                new ObjectParameter("strSelectMode", typeof(string));
    
            var strTypeParameter = strType != null ?
                new ObjectParameter("strType", strType) :
                new ObjectParameter("strType", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_COPYPAYPHYTYPE", strSelectModeParameter, strTypeParameter, intIDParameter);
        }
    
        public virtual int SP_ILL_UPDATE_COPYRIGHT(string strCopyrightCompliance, Nullable<int> intID, ObjectParameter intOut)
        {
            var strCopyrightComplianceParameter = strCopyrightCompliance != null ?
                new ObjectParameter("strCopyrightCompliance", strCopyrightCompliance) :
                new ObjectParameter("strCopyrightCompliance", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_COPYRIGHT", strCopyrightComplianceParameter, intIDParameter, intOut);
        }
    
        public virtual int SP_ILL_UPDATE_INCOMING_REQUEST(Nullable<short> bitAlert, string strBarcode, string strCancelledDate, Nullable<short> intChargeableUnits, string strCheckedInDate, string strCheckedOutDate, Nullable<short> intCopyrightCompliance, Nullable<decimal> dbCost, string strCurrencyCode, string strCurrencyCode1, string strCurrencyCode2, string strCurrencyCode3, Nullable<short> intDelivConditionID, Nullable<short> bitDelivMode, string strDueDate, string strEDelivMode, string strEDelivTSAddr, string strEmailReplyAddress, string strExpiryDate, Nullable<int> intIllID, Nullable<decimal> dbInsuredForCost, string strInternalRefNumber, Nullable<short> intItemType, Nullable<short> intLoanTypeID, Nullable<decimal> dbMaxCost, Nullable<short> intMedium, string strNeedBeforeDate, string strNote, string strPatronID, string strPatronName, string strPatronStatus, Nullable<short> bitPaymentProvided, Nullable<short> intPaymentType, Nullable<short> intPriority, string strReceivedDate, Nullable<short> bitReciprocalAgreement, Nullable<short> bitRenewable, Nullable<short> intRenewals, string strRequestDate, Nullable<int> intRequesterID, string strRequestID, string strRespondDate, string strReturnedDate, Nullable<decimal> dbReturnInsuranceCost, Nullable<short> intReturnLocID, Nullable<short> intServiceType, string strShippedDate, string strIssueID, Nullable<short> intStatus, Nullable<int> intItemID, string strTitle, Nullable<short> intTransportationModeID, Nullable<short> bitWillPayFee, string strBoolSQL)
        {
            var bitAlertParameter = bitAlert.HasValue ?
                new ObjectParameter("bitAlert", bitAlert) :
                new ObjectParameter("bitAlert", typeof(short));
    
            var strBarcodeParameter = strBarcode != null ?
                new ObjectParameter("strBarcode", strBarcode) :
                new ObjectParameter("strBarcode", typeof(string));
    
            var strCancelledDateParameter = strCancelledDate != null ?
                new ObjectParameter("strCancelledDate", strCancelledDate) :
                new ObjectParameter("strCancelledDate", typeof(string));
    
            var intChargeableUnitsParameter = intChargeableUnits.HasValue ?
                new ObjectParameter("intChargeableUnits", intChargeableUnits) :
                new ObjectParameter("intChargeableUnits", typeof(short));
    
            var strCheckedInDateParameter = strCheckedInDate != null ?
                new ObjectParameter("strCheckedInDate", strCheckedInDate) :
                new ObjectParameter("strCheckedInDate", typeof(string));
    
            var strCheckedOutDateParameter = strCheckedOutDate != null ?
                new ObjectParameter("strCheckedOutDate", strCheckedOutDate) :
                new ObjectParameter("strCheckedOutDate", typeof(string));
    
            var intCopyrightComplianceParameter = intCopyrightCompliance.HasValue ?
                new ObjectParameter("intCopyrightCompliance", intCopyrightCompliance) :
                new ObjectParameter("intCopyrightCompliance", typeof(short));
    
            var dbCostParameter = dbCost.HasValue ?
                new ObjectParameter("dbCost", dbCost) :
                new ObjectParameter("dbCost", typeof(decimal));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var strCurrencyCode1Parameter = strCurrencyCode1 != null ?
                new ObjectParameter("strCurrencyCode1", strCurrencyCode1) :
                new ObjectParameter("strCurrencyCode1", typeof(string));
    
            var strCurrencyCode2Parameter = strCurrencyCode2 != null ?
                new ObjectParameter("strCurrencyCode2", strCurrencyCode2) :
                new ObjectParameter("strCurrencyCode2", typeof(string));
    
            var strCurrencyCode3Parameter = strCurrencyCode3 != null ?
                new ObjectParameter("strCurrencyCode3", strCurrencyCode3) :
                new ObjectParameter("strCurrencyCode3", typeof(string));
    
            var intDelivConditionIDParameter = intDelivConditionID.HasValue ?
                new ObjectParameter("intDelivConditionID", intDelivConditionID) :
                new ObjectParameter("intDelivConditionID", typeof(short));
    
            var bitDelivModeParameter = bitDelivMode.HasValue ?
                new ObjectParameter("bitDelivMode", bitDelivMode) :
                new ObjectParameter("bitDelivMode", typeof(short));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            var strEDelivModeParameter = strEDelivMode != null ?
                new ObjectParameter("strEDelivMode", strEDelivMode) :
                new ObjectParameter("strEDelivMode", typeof(string));
    
            var strEDelivTSAddrParameter = strEDelivTSAddr != null ?
                new ObjectParameter("strEDelivTSAddr", strEDelivTSAddr) :
                new ObjectParameter("strEDelivTSAddr", typeof(string));
    
            var strEmailReplyAddressParameter = strEmailReplyAddress != null ?
                new ObjectParameter("strEmailReplyAddress", strEmailReplyAddress) :
                new ObjectParameter("strEmailReplyAddress", typeof(string));
    
            var strExpiryDateParameter = strExpiryDate != null ?
                new ObjectParameter("strExpiryDate", strExpiryDate) :
                new ObjectParameter("strExpiryDate", typeof(string));
    
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            var dbInsuredForCostParameter = dbInsuredForCost.HasValue ?
                new ObjectParameter("dbInsuredForCost", dbInsuredForCost) :
                new ObjectParameter("dbInsuredForCost", typeof(decimal));
    
            var strInternalRefNumberParameter = strInternalRefNumber != null ?
                new ObjectParameter("strInternalRefNumber", strInternalRefNumber) :
                new ObjectParameter("strInternalRefNumber", typeof(string));
    
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(short));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(short));
    
            var dbMaxCostParameter = dbMaxCost.HasValue ?
                new ObjectParameter("dbMaxCost", dbMaxCost) :
                new ObjectParameter("dbMaxCost", typeof(decimal));
    
            var intMediumParameter = intMedium.HasValue ?
                new ObjectParameter("intMedium", intMedium) :
                new ObjectParameter("intMedium", typeof(short));
    
            var strNeedBeforeDateParameter = strNeedBeforeDate != null ?
                new ObjectParameter("strNeedBeforeDate", strNeedBeforeDate) :
                new ObjectParameter("strNeedBeforeDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strPatronIDParameter = strPatronID != null ?
                new ObjectParameter("strPatronID", strPatronID) :
                new ObjectParameter("strPatronID", typeof(string));
    
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronStatusParameter = strPatronStatus != null ?
                new ObjectParameter("strPatronStatus", strPatronStatus) :
                new ObjectParameter("strPatronStatus", typeof(string));
    
            var bitPaymentProvidedParameter = bitPaymentProvided.HasValue ?
                new ObjectParameter("bitPaymentProvided", bitPaymentProvided) :
                new ObjectParameter("bitPaymentProvided", typeof(short));
    
            var intPaymentTypeParameter = intPaymentType.HasValue ?
                new ObjectParameter("intPaymentType", intPaymentType) :
                new ObjectParameter("intPaymentType", typeof(short));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(short));
    
            var strReceivedDateParameter = strReceivedDate != null ?
                new ObjectParameter("strReceivedDate", strReceivedDate) :
                new ObjectParameter("strReceivedDate", typeof(string));
    
            var bitReciprocalAgreementParameter = bitReciprocalAgreement.HasValue ?
                new ObjectParameter("bitReciprocalAgreement", bitReciprocalAgreement) :
                new ObjectParameter("bitReciprocalAgreement", typeof(short));
    
            var bitRenewableParameter = bitRenewable.HasValue ?
                new ObjectParameter("bitRenewable", bitRenewable) :
                new ObjectParameter("bitRenewable", typeof(short));
    
            var intRenewalsParameter = intRenewals.HasValue ?
                new ObjectParameter("intRenewals", intRenewals) :
                new ObjectParameter("intRenewals", typeof(short));
    
            var strRequestDateParameter = strRequestDate != null ?
                new ObjectParameter("strRequestDate", strRequestDate) :
                new ObjectParameter("strRequestDate", typeof(string));
    
            var intRequesterIDParameter = intRequesterID.HasValue ?
                new ObjectParameter("intRequesterID", intRequesterID) :
                new ObjectParameter("intRequesterID", typeof(int));
    
            var strRequestIDParameter = strRequestID != null ?
                new ObjectParameter("strRequestID", strRequestID) :
                new ObjectParameter("strRequestID", typeof(string));
    
            var strRespondDateParameter = strRespondDate != null ?
                new ObjectParameter("strRespondDate", strRespondDate) :
                new ObjectParameter("strRespondDate", typeof(string));
    
            var strReturnedDateParameter = strReturnedDate != null ?
                new ObjectParameter("strReturnedDate", strReturnedDate) :
                new ObjectParameter("strReturnedDate", typeof(string));
    
            var dbReturnInsuranceCostParameter = dbReturnInsuranceCost.HasValue ?
                new ObjectParameter("dbReturnInsuranceCost", dbReturnInsuranceCost) :
                new ObjectParameter("dbReturnInsuranceCost", typeof(decimal));
    
            var intReturnLocIDParameter = intReturnLocID.HasValue ?
                new ObjectParameter("intReturnLocID", intReturnLocID) :
                new ObjectParameter("intReturnLocID", typeof(short));
    
            var intServiceTypeParameter = intServiceType.HasValue ?
                new ObjectParameter("intServiceType", intServiceType) :
                new ObjectParameter("intServiceType", typeof(short));
    
            var strShippedDateParameter = strShippedDate != null ?
                new ObjectParameter("strShippedDate", strShippedDate) :
                new ObjectParameter("strShippedDate", typeof(string));
    
            var strIssueIDParameter = strIssueID != null ?
                new ObjectParameter("strIssueID", strIssueID) :
                new ObjectParameter("strIssueID", typeof(string));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(short));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var intTransportationModeIDParameter = intTransportationModeID.HasValue ?
                new ObjectParameter("intTransportationModeID", intTransportationModeID) :
                new ObjectParameter("intTransportationModeID", typeof(short));
    
            var bitWillPayFeeParameter = bitWillPayFee.HasValue ?
                new ObjectParameter("bitWillPayFee", bitWillPayFee) :
                new ObjectParameter("bitWillPayFee", typeof(short));
    
            var strBoolSQLParameter = strBoolSQL != null ?
                new ObjectParameter("strBoolSQL", strBoolSQL) :
                new ObjectParameter("strBoolSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_INCOMING_REQUEST", bitAlertParameter, strBarcodeParameter, strCancelledDateParameter, intChargeableUnitsParameter, strCheckedInDateParameter, strCheckedOutDateParameter, intCopyrightComplianceParameter, dbCostParameter, strCurrencyCodeParameter, strCurrencyCode1Parameter, strCurrencyCode2Parameter, strCurrencyCode3Parameter, intDelivConditionIDParameter, bitDelivModeParameter, strDueDateParameter, strEDelivModeParameter, strEDelivTSAddrParameter, strEmailReplyAddressParameter, strExpiryDateParameter, intIllIDParameter, dbInsuredForCostParameter, strInternalRefNumberParameter, intItemTypeParameter, intLoanTypeIDParameter, dbMaxCostParameter, intMediumParameter, strNeedBeforeDateParameter, strNoteParameter, strPatronIDParameter, strPatronNameParameter, strPatronStatusParameter, bitPaymentProvidedParameter, intPaymentTypeParameter, intPriorityParameter, strReceivedDateParameter, bitReciprocalAgreementParameter, bitRenewableParameter, intRenewalsParameter, strRequestDateParameter, intRequesterIDParameter, strRequestIDParameter, strRespondDateParameter, strReturnedDateParameter, dbReturnInsuranceCostParameter, intReturnLocIDParameter, intServiceTypeParameter, strShippedDateParameter, strIssueIDParameter, intStatusParameter, intItemIDParameter, strTitleParameter, intTransportationModeIDParameter, bitWillPayFeeParameter, strBoolSQLParameter);
        }
    
        public virtual int SP_ILL_UPDATE_IR_LOGID_CANCEL(Nullable<int> intLogID)
        {
            var intLogIDParameter = intLogID.HasValue ?
                new ObjectParameter("intLogID", intLogID) :
                new ObjectParameter("intLogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_IR_LOGID_CANCEL", intLogIDParameter);
        }
    
        public virtual int SP_ILL_UPDATE_IR_STATUS(Nullable<int> intStatus, Nullable<int> intIllID)
        {
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var intIllIDParameter = intIllID.HasValue ?
                new ObjectParameter("intIllID", intIllID) :
                new ObjectParameter("intIllID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_IR_STATUS", intStatusParameter, intIllIDParameter);
        }
    
        public virtual int SP_ILL_UPDATE_LIBRARY(Nullable<int> intLibID, string strSymbol, string strName, string strEmailAddress, string strTelephone, string strCode, string strNote, string strEDelivMode, string strEDelivTSAddr, string strBillDelivName, string strBillDelivXAddr, string strBillDelivStreet, string strBillDelivBox, string strBillDelivCity, string strBillDelivRegion, Nullable<byte> intBillDelivCountry, string strBillDelivCode, string strPostDelivName, string strPostDelivXAddr, string strPostDelivStreet, string strPostDelivBox, string strPostDelivCity, string strPostDelivRegion, Nullable<byte> intPostDelivCountry, string strPostDelivCode, Nullable<byte> intEncodingScheme, ObjectParameter intOut)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var strSymbolParameter = strSymbol != null ?
                new ObjectParameter("strSymbol", strSymbol) :
                new ObjectParameter("strSymbol", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strEmailAddressParameter = strEmailAddress != null ?
                new ObjectParameter("strEmailAddress", strEmailAddress) :
                new ObjectParameter("strEmailAddress", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strEDelivModeParameter = strEDelivMode != null ?
                new ObjectParameter("strEDelivMode", strEDelivMode) :
                new ObjectParameter("strEDelivMode", typeof(string));
    
            var strEDelivTSAddrParameter = strEDelivTSAddr != null ?
                new ObjectParameter("strEDelivTSAddr", strEDelivTSAddr) :
                new ObjectParameter("strEDelivTSAddr", typeof(string));
    
            var strBillDelivNameParameter = strBillDelivName != null ?
                new ObjectParameter("strBillDelivName", strBillDelivName) :
                new ObjectParameter("strBillDelivName", typeof(string));
    
            var strBillDelivXAddrParameter = strBillDelivXAddr != null ?
                new ObjectParameter("strBillDelivXAddr", strBillDelivXAddr) :
                new ObjectParameter("strBillDelivXAddr", typeof(string));
    
            var strBillDelivStreetParameter = strBillDelivStreet != null ?
                new ObjectParameter("strBillDelivStreet", strBillDelivStreet) :
                new ObjectParameter("strBillDelivStreet", typeof(string));
    
            var strBillDelivBoxParameter = strBillDelivBox != null ?
                new ObjectParameter("strBillDelivBox", strBillDelivBox) :
                new ObjectParameter("strBillDelivBox", typeof(string));
    
            var strBillDelivCityParameter = strBillDelivCity != null ?
                new ObjectParameter("strBillDelivCity", strBillDelivCity) :
                new ObjectParameter("strBillDelivCity", typeof(string));
    
            var strBillDelivRegionParameter = strBillDelivRegion != null ?
                new ObjectParameter("strBillDelivRegion", strBillDelivRegion) :
                new ObjectParameter("strBillDelivRegion", typeof(string));
    
            var intBillDelivCountryParameter = intBillDelivCountry.HasValue ?
                new ObjectParameter("intBillDelivCountry", intBillDelivCountry) :
                new ObjectParameter("intBillDelivCountry", typeof(byte));
    
            var strBillDelivCodeParameter = strBillDelivCode != null ?
                new ObjectParameter("strBillDelivCode", strBillDelivCode) :
                new ObjectParameter("strBillDelivCode", typeof(string));
    
            var strPostDelivNameParameter = strPostDelivName != null ?
                new ObjectParameter("strPostDelivName", strPostDelivName) :
                new ObjectParameter("strPostDelivName", typeof(string));
    
            var strPostDelivXAddrParameter = strPostDelivXAddr != null ?
                new ObjectParameter("strPostDelivXAddr", strPostDelivXAddr) :
                new ObjectParameter("strPostDelivXAddr", typeof(string));
    
            var strPostDelivStreetParameter = strPostDelivStreet != null ?
                new ObjectParameter("strPostDelivStreet", strPostDelivStreet) :
                new ObjectParameter("strPostDelivStreet", typeof(string));
    
            var strPostDelivBoxParameter = strPostDelivBox != null ?
                new ObjectParameter("strPostDelivBox", strPostDelivBox) :
                new ObjectParameter("strPostDelivBox", typeof(string));
    
            var strPostDelivCityParameter = strPostDelivCity != null ?
                new ObjectParameter("strPostDelivCity", strPostDelivCity) :
                new ObjectParameter("strPostDelivCity", typeof(string));
    
            var strPostDelivRegionParameter = strPostDelivRegion != null ?
                new ObjectParameter("strPostDelivRegion", strPostDelivRegion) :
                new ObjectParameter("strPostDelivRegion", typeof(string));
    
            var intPostDelivCountryParameter = intPostDelivCountry.HasValue ?
                new ObjectParameter("intPostDelivCountry", intPostDelivCountry) :
                new ObjectParameter("intPostDelivCountry", typeof(byte));
    
            var strPostDelivCodeParameter = strPostDelivCode != null ?
                new ObjectParameter("strPostDelivCode", strPostDelivCode) :
                new ObjectParameter("strPostDelivCode", typeof(string));
    
            var intEncodingSchemeParameter = intEncodingScheme.HasValue ?
                new ObjectParameter("intEncodingScheme", intEncodingScheme) :
                new ObjectParameter("intEncodingScheme", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_LIBRARY", intLibIDParameter, strSymbolParameter, strNameParameter, strEmailAddressParameter, strTelephoneParameter, strCodeParameter, strNoteParameter, strEDelivModeParameter, strEDelivTSAddrParameter, strBillDelivNameParameter, strBillDelivXAddrParameter, strBillDelivStreetParameter, strBillDelivBoxParameter, strBillDelivCityParameter, strBillDelivRegionParameter, intBillDelivCountryParameter, strBillDelivCodeParameter, strPostDelivNameParameter, strPostDelivXAddrParameter, strPostDelivStreetParameter, strPostDelivBoxParameter, strPostDelivCityParameter, strPostDelivRegionParameter, intPostDelivCountryParameter, strPostDelivCodeParameter, intEncodingSchemeParameter, intOut);
        }
    
        public virtual int SP_ILL_UPDATE_LOCLIBADDR(Nullable<int> intID, string strAddress, string strCity, Nullable<int> intCountryID, string strPOBox, string strPostCode, string strRegion, string strStreet, string strXAddress, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strPOBoxParameter = strPOBox != null ?
                new ObjectParameter("strPOBox", strPOBox) :
                new ObjectParameter("strPOBox", typeof(string));
    
            var strPostCodeParameter = strPostCode != null ?
                new ObjectParameter("strPostCode", strPostCode) :
                new ObjectParameter("strPostCode", typeof(string));
    
            var strRegionParameter = strRegion != null ?
                new ObjectParameter("strRegion", strRegion) :
                new ObjectParameter("strRegion", typeof(string));
    
            var strStreetParameter = strStreet != null ?
                new ObjectParameter("strStreet", strStreet) :
                new ObjectParameter("strStreet", typeof(string));
    
            var strXAddressParameter = strXAddress != null ?
                new ObjectParameter("strXAddress", strXAddress) :
                new ObjectParameter("strXAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_LOCLIBADDR", intIDParameter, strAddressParameter, strCityParameter, intCountryIDParameter, strPOBoxParameter, strPostCodeParameter, strRegionParameter, strStreetParameter, strXAddressParameter, intOut);
        }
    
        public virtual int SP_ILL_UPDATE_LOCLIBELECADDR(Nullable<int> intID, string strEdelivMode, string strEdelivTSAddr, ObjectParameter intExitName)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strEdelivModeParameter = strEdelivMode != null ?
                new ObjectParameter("strEdelivMode", strEdelivMode) :
                new ObjectParameter("strEdelivMode", typeof(string));
    
            var strEdelivTSAddrParameter = strEdelivTSAddr != null ?
                new ObjectParameter("strEdelivTSAddr", strEdelivTSAddr) :
                new ObjectParameter("strEdelivTSAddr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_LOCLIBELECADDR", intIDParameter, strEdelivModeParameter, strEdelivTSAddrParameter, intExitName);
        }
    
        public virtual int SP_ILL_UPDATE_OUTGOINGREQUEST(Nullable<int> intID, string strRequestID, Nullable<int> intResponderID, string strCreatedDate, string strRequestDate, string strNeedBeforeDate, string strExpiredDate, string strRespondDate, string strCancelledDate, string strShippedDate, string strReceivedDate, string strReturnedDate, string strCheckedInDate, string strDueDate, string strLocalDueDate, string strLocalCheckedInDate, string strLocalCheckedOutDate, Nullable<int> intRenewals, Nullable<int> intRenewable, Nullable<int> intLoanTypeID, string strBarcode, Nullable<int> bitNoticePatron, Nullable<decimal> monyCost, string strCurrencyCode1, Nullable<decimal> monyInsuredForCost, string strCurrencyCode2, Nullable<int> intReturnInsuranceCost, string strCurrencyCode3, Nullable<int> intChageableUnits, Nullable<decimal> monyMaxCost, string strCurrencyCode, Nullable<int> intStatus, string strNote, Nullable<int> intDeliveryLocID, Nullable<int> intBillingLocID, Nullable<int> bitReciprocalAgreement, Nullable<int> bitWillPayFee, Nullable<int> bitPaymentProvided, Nullable<int> intServiceType, Nullable<int> intCopyrightCompliance, Nullable<int> intPriority, Nullable<int> intPaymentType, Nullable<int> intItemType, Nullable<int> intMedium, Nullable<int> intDelivMode, Nullable<int> intEdelivModeID, Nullable<int> bitAlert, string strTitle, string strPatronName, string strPatronCode, Nullable<int> intPatronGroupID, string strCallNumber, string strAuthor, string strPlaceOfPub, string strPublisher, string strSeriesTitleNumber, string strVolumeIssue, string strEdition, string strPubDate, string strComponentPubDate, string strArticleAuthor, string strArticleTitle, string strPagination, string strNationalBibNumber, string strISBN, string strISSN, string strSystemNumber, string strOtherNumbers, string strVerification, string strLocalNote, string strSponsoringBody, string strAccountNumber, string strPostDelivName, string strPostDelivXAddr, string strPostDelivStreet, string strPostDelivBox, string strPostDelivCity, string strPostDelivRegion, Nullable<int> intPostDelivCountry, string strPostDelivCode, string strBillDelivName, string strBillDelivXAddr, string strBillDelivStreet, string strBillDelivBox, string strBillDelivCity, string strBillDelivRegion, Nullable<int> intBillDelivCountry, string strBillDelivCode, string strSubSQL, ObjectParameter intRetval)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strRequestIDParameter = strRequestID != null ?
                new ObjectParameter("strRequestID", strRequestID) :
                new ObjectParameter("strRequestID", typeof(string));
    
            var intResponderIDParameter = intResponderID.HasValue ?
                new ObjectParameter("intResponderID", intResponderID) :
                new ObjectParameter("intResponderID", typeof(int));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var strRequestDateParameter = strRequestDate != null ?
                new ObjectParameter("strRequestDate", strRequestDate) :
                new ObjectParameter("strRequestDate", typeof(string));
    
            var strNeedBeforeDateParameter = strNeedBeforeDate != null ?
                new ObjectParameter("strNeedBeforeDate", strNeedBeforeDate) :
                new ObjectParameter("strNeedBeforeDate", typeof(string));
    
            var strExpiredDateParameter = strExpiredDate != null ?
                new ObjectParameter("strExpiredDate", strExpiredDate) :
                new ObjectParameter("strExpiredDate", typeof(string));
    
            var strRespondDateParameter = strRespondDate != null ?
                new ObjectParameter("strRespondDate", strRespondDate) :
                new ObjectParameter("strRespondDate", typeof(string));
    
            var strCancelledDateParameter = strCancelledDate != null ?
                new ObjectParameter("strCancelledDate", strCancelledDate) :
                new ObjectParameter("strCancelledDate", typeof(string));
    
            var strShippedDateParameter = strShippedDate != null ?
                new ObjectParameter("strShippedDate", strShippedDate) :
                new ObjectParameter("strShippedDate", typeof(string));
    
            var strReceivedDateParameter = strReceivedDate != null ?
                new ObjectParameter("strReceivedDate", strReceivedDate) :
                new ObjectParameter("strReceivedDate", typeof(string));
    
            var strReturnedDateParameter = strReturnedDate != null ?
                new ObjectParameter("strReturnedDate", strReturnedDate) :
                new ObjectParameter("strReturnedDate", typeof(string));
    
            var strCheckedInDateParameter = strCheckedInDate != null ?
                new ObjectParameter("strCheckedInDate", strCheckedInDate) :
                new ObjectParameter("strCheckedInDate", typeof(string));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            var strLocalDueDateParameter = strLocalDueDate != null ?
                new ObjectParameter("strLocalDueDate", strLocalDueDate) :
                new ObjectParameter("strLocalDueDate", typeof(string));
    
            var strLocalCheckedInDateParameter = strLocalCheckedInDate != null ?
                new ObjectParameter("strLocalCheckedInDate", strLocalCheckedInDate) :
                new ObjectParameter("strLocalCheckedInDate", typeof(string));
    
            var strLocalCheckedOutDateParameter = strLocalCheckedOutDate != null ?
                new ObjectParameter("strLocalCheckedOutDate", strLocalCheckedOutDate) :
                new ObjectParameter("strLocalCheckedOutDate", typeof(string));
    
            var intRenewalsParameter = intRenewals.HasValue ?
                new ObjectParameter("intRenewals", intRenewals) :
                new ObjectParameter("intRenewals", typeof(int));
    
            var intRenewableParameter = intRenewable.HasValue ?
                new ObjectParameter("intRenewable", intRenewable) :
                new ObjectParameter("intRenewable", typeof(int));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            var strBarcodeParameter = strBarcode != null ?
                new ObjectParameter("strBarcode", strBarcode) :
                new ObjectParameter("strBarcode", typeof(string));
    
            var bitNoticePatronParameter = bitNoticePatron.HasValue ?
                new ObjectParameter("bitNoticePatron", bitNoticePatron) :
                new ObjectParameter("bitNoticePatron", typeof(int));
    
            var monyCostParameter = monyCost.HasValue ?
                new ObjectParameter("monyCost", monyCost) :
                new ObjectParameter("monyCost", typeof(decimal));
    
            var strCurrencyCode1Parameter = strCurrencyCode1 != null ?
                new ObjectParameter("strCurrencyCode1", strCurrencyCode1) :
                new ObjectParameter("strCurrencyCode1", typeof(string));
    
            var monyInsuredForCostParameter = monyInsuredForCost.HasValue ?
                new ObjectParameter("monyInsuredForCost", monyInsuredForCost) :
                new ObjectParameter("monyInsuredForCost", typeof(decimal));
    
            var strCurrencyCode2Parameter = strCurrencyCode2 != null ?
                new ObjectParameter("strCurrencyCode2", strCurrencyCode2) :
                new ObjectParameter("strCurrencyCode2", typeof(string));
    
            var intReturnInsuranceCostParameter = intReturnInsuranceCost.HasValue ?
                new ObjectParameter("intReturnInsuranceCost", intReturnInsuranceCost) :
                new ObjectParameter("intReturnInsuranceCost", typeof(int));
    
            var strCurrencyCode3Parameter = strCurrencyCode3 != null ?
                new ObjectParameter("strCurrencyCode3", strCurrencyCode3) :
                new ObjectParameter("strCurrencyCode3", typeof(string));
    
            var intChageableUnitsParameter = intChageableUnits.HasValue ?
                new ObjectParameter("intChageableUnits", intChageableUnits) :
                new ObjectParameter("intChageableUnits", typeof(int));
    
            var monyMaxCostParameter = monyMaxCost.HasValue ?
                new ObjectParameter("monyMaxCost", monyMaxCost) :
                new ObjectParameter("monyMaxCost", typeof(decimal));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intDeliveryLocIDParameter = intDeliveryLocID.HasValue ?
                new ObjectParameter("intDeliveryLocID", intDeliveryLocID) :
                new ObjectParameter("intDeliveryLocID", typeof(int));
    
            var intBillingLocIDParameter = intBillingLocID.HasValue ?
                new ObjectParameter("intBillingLocID", intBillingLocID) :
                new ObjectParameter("intBillingLocID", typeof(int));
    
            var bitReciprocalAgreementParameter = bitReciprocalAgreement.HasValue ?
                new ObjectParameter("bitReciprocalAgreement", bitReciprocalAgreement) :
                new ObjectParameter("bitReciprocalAgreement", typeof(int));
    
            var bitWillPayFeeParameter = bitWillPayFee.HasValue ?
                new ObjectParameter("bitWillPayFee", bitWillPayFee) :
                new ObjectParameter("bitWillPayFee", typeof(int));
    
            var bitPaymentProvidedParameter = bitPaymentProvided.HasValue ?
                new ObjectParameter("bitPaymentProvided", bitPaymentProvided) :
                new ObjectParameter("bitPaymentProvided", typeof(int));
    
            var intServiceTypeParameter = intServiceType.HasValue ?
                new ObjectParameter("intServiceType", intServiceType) :
                new ObjectParameter("intServiceType", typeof(int));
    
            var intCopyrightComplianceParameter = intCopyrightCompliance.HasValue ?
                new ObjectParameter("intCopyrightCompliance", intCopyrightCompliance) :
                new ObjectParameter("intCopyrightCompliance", typeof(int));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(int));
    
            var intPaymentTypeParameter = intPaymentType.HasValue ?
                new ObjectParameter("intPaymentType", intPaymentType) :
                new ObjectParameter("intPaymentType", typeof(int));
    
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(int));
    
            var intMediumParameter = intMedium.HasValue ?
                new ObjectParameter("intMedium", intMedium) :
                new ObjectParameter("intMedium", typeof(int));
    
            var intDelivModeParameter = intDelivMode.HasValue ?
                new ObjectParameter("intDelivMode", intDelivMode) :
                new ObjectParameter("intDelivMode", typeof(int));
    
            var intEdelivModeIDParameter = intEdelivModeID.HasValue ?
                new ObjectParameter("intEdelivModeID", intEdelivModeID) :
                new ObjectParameter("intEdelivModeID", typeof(int));
    
            var bitAlertParameter = bitAlert.HasValue ?
                new ObjectParameter("bitAlert", bitAlert) :
                new ObjectParameter("bitAlert", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPlaceOfPubParameter = strPlaceOfPub != null ?
                new ObjectParameter("strPlaceOfPub", strPlaceOfPub) :
                new ObjectParameter("strPlaceOfPub", typeof(string));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var strSeriesTitleNumberParameter = strSeriesTitleNumber != null ?
                new ObjectParameter("strSeriesTitleNumber", strSeriesTitleNumber) :
                new ObjectParameter("strSeriesTitleNumber", typeof(string));
    
            var strVolumeIssueParameter = strVolumeIssue != null ?
                new ObjectParameter("strVolumeIssue", strVolumeIssue) :
                new ObjectParameter("strVolumeIssue", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var strPubDateParameter = strPubDate != null ?
                new ObjectParameter("strPubDate", strPubDate) :
                new ObjectParameter("strPubDate", typeof(string));
    
            var strComponentPubDateParameter = strComponentPubDate != null ?
                new ObjectParameter("strComponentPubDate", strComponentPubDate) :
                new ObjectParameter("strComponentPubDate", typeof(string));
    
            var strArticleAuthorParameter = strArticleAuthor != null ?
                new ObjectParameter("strArticleAuthor", strArticleAuthor) :
                new ObjectParameter("strArticleAuthor", typeof(string));
    
            var strArticleTitleParameter = strArticleTitle != null ?
                new ObjectParameter("strArticleTitle", strArticleTitle) :
                new ObjectParameter("strArticleTitle", typeof(string));
    
            var strPaginationParameter = strPagination != null ?
                new ObjectParameter("strPagination", strPagination) :
                new ObjectParameter("strPagination", typeof(string));
    
            var strNationalBibNumberParameter = strNationalBibNumber != null ?
                new ObjectParameter("strNationalBibNumber", strNationalBibNumber) :
                new ObjectParameter("strNationalBibNumber", typeof(string));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var strSystemNumberParameter = strSystemNumber != null ?
                new ObjectParameter("strSystemNumber", strSystemNumber) :
                new ObjectParameter("strSystemNumber", typeof(string));
    
            var strOtherNumbersParameter = strOtherNumbers != null ?
                new ObjectParameter("strOtherNumbers", strOtherNumbers) :
                new ObjectParameter("strOtherNumbers", typeof(string));
    
            var strVerificationParameter = strVerification != null ?
                new ObjectParameter("strVerification", strVerification) :
                new ObjectParameter("strVerification", typeof(string));
    
            var strLocalNoteParameter = strLocalNote != null ?
                new ObjectParameter("strLocalNote", strLocalNote) :
                new ObjectParameter("strLocalNote", typeof(string));
    
            var strSponsoringBodyParameter = strSponsoringBody != null ?
                new ObjectParameter("strSponsoringBody", strSponsoringBody) :
                new ObjectParameter("strSponsoringBody", typeof(string));
    
            var strAccountNumberParameter = strAccountNumber != null ?
                new ObjectParameter("strAccountNumber", strAccountNumber) :
                new ObjectParameter("strAccountNumber", typeof(string));
    
            var strPostDelivNameParameter = strPostDelivName != null ?
                new ObjectParameter("strPostDelivName", strPostDelivName) :
                new ObjectParameter("strPostDelivName", typeof(string));
    
            var strPostDelivXAddrParameter = strPostDelivXAddr != null ?
                new ObjectParameter("strPostDelivXAddr", strPostDelivXAddr) :
                new ObjectParameter("strPostDelivXAddr", typeof(string));
    
            var strPostDelivStreetParameter = strPostDelivStreet != null ?
                new ObjectParameter("strPostDelivStreet", strPostDelivStreet) :
                new ObjectParameter("strPostDelivStreet", typeof(string));
    
            var strPostDelivBoxParameter = strPostDelivBox != null ?
                new ObjectParameter("strPostDelivBox", strPostDelivBox) :
                new ObjectParameter("strPostDelivBox", typeof(string));
    
            var strPostDelivCityParameter = strPostDelivCity != null ?
                new ObjectParameter("strPostDelivCity", strPostDelivCity) :
                new ObjectParameter("strPostDelivCity", typeof(string));
    
            var strPostDelivRegionParameter = strPostDelivRegion != null ?
                new ObjectParameter("strPostDelivRegion", strPostDelivRegion) :
                new ObjectParameter("strPostDelivRegion", typeof(string));
    
            var intPostDelivCountryParameter = intPostDelivCountry.HasValue ?
                new ObjectParameter("intPostDelivCountry", intPostDelivCountry) :
                new ObjectParameter("intPostDelivCountry", typeof(int));
    
            var strPostDelivCodeParameter = strPostDelivCode != null ?
                new ObjectParameter("strPostDelivCode", strPostDelivCode) :
                new ObjectParameter("strPostDelivCode", typeof(string));
    
            var strBillDelivNameParameter = strBillDelivName != null ?
                new ObjectParameter("strBillDelivName", strBillDelivName) :
                new ObjectParameter("strBillDelivName", typeof(string));
    
            var strBillDelivXAddrParameter = strBillDelivXAddr != null ?
                new ObjectParameter("strBillDelivXAddr", strBillDelivXAddr) :
                new ObjectParameter("strBillDelivXAddr", typeof(string));
    
            var strBillDelivStreetParameter = strBillDelivStreet != null ?
                new ObjectParameter("strBillDelivStreet", strBillDelivStreet) :
                new ObjectParameter("strBillDelivStreet", typeof(string));
    
            var strBillDelivBoxParameter = strBillDelivBox != null ?
                new ObjectParameter("strBillDelivBox", strBillDelivBox) :
                new ObjectParameter("strBillDelivBox", typeof(string));
    
            var strBillDelivCityParameter = strBillDelivCity != null ?
                new ObjectParameter("strBillDelivCity", strBillDelivCity) :
                new ObjectParameter("strBillDelivCity", typeof(string));
    
            var strBillDelivRegionParameter = strBillDelivRegion != null ?
                new ObjectParameter("strBillDelivRegion", strBillDelivRegion) :
                new ObjectParameter("strBillDelivRegion", typeof(string));
    
            var intBillDelivCountryParameter = intBillDelivCountry.HasValue ?
                new ObjectParameter("intBillDelivCountry", intBillDelivCountry) :
                new ObjectParameter("intBillDelivCountry", typeof(int));
    
            var strBillDelivCodeParameter = strBillDelivCode != null ?
                new ObjectParameter("strBillDelivCode", strBillDelivCode) :
                new ObjectParameter("strBillDelivCode", typeof(string));
    
            var strSubSQLParameter = strSubSQL != null ?
                new ObjectParameter("strSubSQL", strSubSQL) :
                new ObjectParameter("strSubSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_OUTGOINGREQUEST", intIDParameter, strRequestIDParameter, intResponderIDParameter, strCreatedDateParameter, strRequestDateParameter, strNeedBeforeDateParameter, strExpiredDateParameter, strRespondDateParameter, strCancelledDateParameter, strShippedDateParameter, strReceivedDateParameter, strReturnedDateParameter, strCheckedInDateParameter, strDueDateParameter, strLocalDueDateParameter, strLocalCheckedInDateParameter, strLocalCheckedOutDateParameter, intRenewalsParameter, intRenewableParameter, intLoanTypeIDParameter, strBarcodeParameter, bitNoticePatronParameter, monyCostParameter, strCurrencyCode1Parameter, monyInsuredForCostParameter, strCurrencyCode2Parameter, intReturnInsuranceCostParameter, strCurrencyCode3Parameter, intChageableUnitsParameter, monyMaxCostParameter, strCurrencyCodeParameter, intStatusParameter, strNoteParameter, intDeliveryLocIDParameter, intBillingLocIDParameter, bitReciprocalAgreementParameter, bitWillPayFeeParameter, bitPaymentProvidedParameter, intServiceTypeParameter, intCopyrightComplianceParameter, intPriorityParameter, intPaymentTypeParameter, intItemTypeParameter, intMediumParameter, intDelivModeParameter, intEdelivModeIDParameter, bitAlertParameter, strTitleParameter, strPatronNameParameter, strPatronCodeParameter, intPatronGroupIDParameter, strCallNumberParameter, strAuthorParameter, strPlaceOfPubParameter, strPublisherParameter, strSeriesTitleNumberParameter, strVolumeIssueParameter, strEditionParameter, strPubDateParameter, strComponentPubDateParameter, strArticleAuthorParameter, strArticleTitleParameter, strPaginationParameter, strNationalBibNumberParameter, strISBNParameter, strISSNParameter, strSystemNumberParameter, strOtherNumbersParameter, strVerificationParameter, strLocalNoteParameter, strSponsoringBodyParameter, strAccountNumberParameter, strPostDelivNameParameter, strPostDelivXAddrParameter, strPostDelivStreetParameter, strPostDelivBoxParameter, strPostDelivCityParameter, strPostDelivRegionParameter, intPostDelivCountryParameter, strPostDelivCodeParameter, strBillDelivNameParameter, strBillDelivXAddrParameter, strBillDelivStreetParameter, strBillDelivBoxParameter, strBillDelivCityParameter, strBillDelivRegionParameter, intBillDelivCountryParameter, strBillDelivCodeParameter, strSubSQLParameter, intRetval);
        }
    
        public virtual int SP_ILL_UPDATE_PAYMENTTYPES(string strPaymentType, Nullable<int> intID, ObjectParameter intOut)
        {
            var strPaymentTypeParameter = strPaymentType != null ?
                new ObjectParameter("strPaymentType", strPaymentType) :
                new ObjectParameter("strPaymentType", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_PAYMENTTYPES", strPaymentTypeParameter, intIDParameter, intOut);
        }
    
        public virtual int SP_ILL_UPDATE_PHYSICALMODE(string strDeliveryMode, Nullable<int> intID, ObjectParameter intOut)
        {
            var strDeliveryModeParameter = strDeliveryMode != null ?
                new ObjectParameter("strDeliveryMode", strDeliveryMode) :
                new ObjectParameter("strDeliveryMode", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_PHYSICALMODE", strDeliveryModeParameter, intIDParameter, intOut);
        }
    
        public virtual int SP_ILL_UPDATE_RESPONSES(Nullable<int> intID, string strCode, string strVietName, string strEngName, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strVietNameParameter = strVietName != null ?
                new ObjectParameter("strVietName", strVietName) :
                new ObjectParameter("strVietName", typeof(string));
    
            var strEngNameParameter = strEngName != null ?
                new ObjectParameter("strEngName", strEngName) :
                new ObjectParameter("strEngName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_RESPONSES", intIDParameter, strCodeParameter, strVietNameParameter, strEngNameParameter, intOut);
        }
    
        public virtual int SP_ILL_UPDATE_Z3950_DBS(Nullable<int> intDBID, Nullable<int> intServerID, string strDBName, string strDescription, ObjectParameter intResult)
        {
            var intDBIDParameter = intDBID.HasValue ?
                new ObjectParameter("intDBID", intDBID) :
                new ObjectParameter("intDBID", typeof(int));
    
            var intServerIDParameter = intServerID.HasValue ?
                new ObjectParameter("intServerID", intServerID) :
                new ObjectParameter("intServerID", typeof(int));
    
            var strDBNameParameter = strDBName != null ?
                new ObjectParameter("strDBName", strDBName) :
                new ObjectParameter("strDBName", typeof(string));
    
            var strDescriptionParameter = strDescription != null ?
                new ObjectParameter("strDescription", strDescription) :
                new ObjectParameter("strDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_Z3950_DBS", intDBIDParameter, intServerIDParameter, strDBNameParameter, strDescriptionParameter, intResult);
        }
    
        public virtual int SP_ILL_UPDATE_ZSERVER_LIST(Nullable<int> intServerID, string strName, string strHost, Nullable<int> intPort, string strAccount, string strPassword, Nullable<bool> bytPrefer, ObjectParameter intResult)
        {
            var intServerIDParameter = intServerID.HasValue ?
                new ObjectParameter("intServerID", intServerID) :
                new ObjectParameter("intServerID", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strHostParameter = strHost != null ?
                new ObjectParameter("strHost", strHost) :
                new ObjectParameter("strHost", typeof(string));
    
            var intPortParameter = intPort.HasValue ?
                new ObjectParameter("intPort", intPort) :
                new ObjectParameter("intPort", typeof(int));
    
            var strAccountParameter = strAccount != null ?
                new ObjectParameter("strAccount", strAccount) :
                new ObjectParameter("strAccount", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var bytPreferParameter = bytPrefer.HasValue ?
                new ObjectParameter("bytPrefer", bytPrefer) :
                new ObjectParameter("bytPrefer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ILL_UPDATE_ZSERVER_LIST", intServerIDParameter, strNameParameter, strHostParameter, intPortParameter, strAccountParameter, strPasswordParameter, bytPreferParameter, intResult);
        }
    
        public virtual ObjectResult<SP_ILL_ZDBs_SEL_Result> SP_ILL_ZDBs_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ILL_ZDBs_SEL_Result>("SP_ILL_ZDBs_SEL");
        }
    
        public virtual int SP_IMPORT_CLASSIFICATION_RANDOM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMPORT_CLASSIFICATION_RANDOM");
        }
    
        public virtual int SP_INSERT_ARTICLE(Nullable<int> intID, Nullable<int> intIssueID, string strName, string strAuthor, string strPage, string strNote, string subject)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intIssueIDParameter = intIssueID.HasValue ?
                new ObjectParameter("intIssueID", intIssueID) :
                new ObjectParameter("intIssueID", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPageParameter = strPage != null ?
                new ObjectParameter("strPage", strPage) :
                new ObjectParameter("strPage", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_ARTICLE", intIDParameter, intIssueIDParameter, strNameParameter, strAuthorParameter, strPageParameter, strNoteParameter, subjectParameter);
        }
    
        public virtual int SP_INSERT_REGULARITY_OUT(string strCreateDate, string strPatronCode, Nullable<int> intLocationID, string strNote)
        {
            var strCreateDateParameter = strCreateDate != null ?
                new ObjectParameter("strCreateDate", strCreateDate) :
                new ObjectParameter("strCreateDate", typeof(string));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_REGULARITY_OUT", strCreateDateParameter, strPatronCodeParameter, intLocationIDParameter, strNoteParameter);
        }
    
        public virtual int SP_INVENTORY_COPY_INS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INVENTORY_COPY_INS");
        }
    
        public virtual ObjectResult<SP_INVENTORY_DETAIL_SEL_Result> SP_INVENTORY_DETAIL_SEL(Nullable<int> intUserID, Nullable<int> intInventoryID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_INVENTORY_DETAIL_SEL_Result>("SP_INVENTORY_DETAIL_SEL", intUserIDParameter, intInventoryIDParameter);
        }
    
        public virtual int SP_INVENTORY_REMOVED_INS(string strRemovedDate, Nullable<int> intInventoryID)
        {
            var strRemovedDateParameter = strRemovedDate != null ?
                new ObjectParameter("strRemovedDate", strRemovedDate) :
                new ObjectParameter("strRemovedDate", typeof(string));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INVENTORY_REMOVED_INS", strRemovedDateParameter, intInventoryIDParameter);
        }
    
        public virtual ObjectResult<SP_INVENTORY_SEL_Result> SP_INVENTORY_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_INVENTORY_SEL_Result>("SP_INVENTORY_SEL");
        }
    
        public virtual int SP_INVENTORY_UPD(string strClosedDate, Nullable<int> intInventoryID)
        {
            var strClosedDateParameter = strClosedDate != null ?
                new ObjectParameter("strClosedDate", strClosedDate) :
                new ObjectParameter("strClosedDate", typeof(string));
    
            var intInventoryIDParameter = intInventoryID.HasValue ?
                new ObjectParameter("intInventoryID", intInventoryID) :
                new ObjectParameter("intInventoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INVENTORY_UPD", strClosedDateParameter, intInventoryIDParameter);
        }
    
        public virtual int SP_ITEM_AVAILABLE_SEL(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_AVAILABLE_SEL", strItemIDsParameter);
        }
    
        public virtual ObjectResult<SP_ITEM_CAT_QUEUE_SEL_Result> SP_ITEM_CAT_QUEUE_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ITEM_CAT_QUEUE_SEL_Result>("SP_ITEM_CAT_QUEUE_SEL");
        }
    
        public virtual int SP_ITEM_COUNT_SEL(string strItemIDs)
        {
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_COUNT_SEL", strItemIDsParameter);
        }
    
        public virtual int SP_ITEM_DETAIL_SEL(string strSelectMode, string strIDs)
        {
            var strSelectModeParameter = strSelectMode != null ?
                new ObjectParameter("strSelectMode", strSelectMode) :
                new ObjectParameter("strSelectMode", typeof(string));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_DETAIL_SEL", strSelectModeParameter, strIDsParameter);
        }
    
        public virtual int SP_ITEM_DICTIONARY_INS(Nullable<int> intItemID, string strTableName, string strFieldCode, Nullable<int> intDicID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strTableNameParameter = strTableName != null ?
                new ObjectParameter("strTableName", strTableName) :
                new ObjectParameter("strTableName", typeof(string));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_DICTIONARY_INS", intItemIDParameter, strTableNameParameter, strFieldCodeParameter, intDicIDParameter);
        }
    
        public virtual int SP_ITEM_FIELD200_BY_DURATION_SEL(string strFormDate, string strToDate, Nullable<int> intReviewed)
        {
            var strFormDateParameter = strFormDate != null ?
                new ObjectParameter("strFormDate", strFormDate) :
                new ObjectParameter("strFormDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var intReviewedParameter = intReviewed.HasValue ?
                new ObjectParameter("intReviewed", intReviewed) :
                new ObjectParameter("intReviewed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_FIELD200_BY_DURATION_SEL", strFormDateParameter, strToDateParameter, intReviewedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ITEM_GETTOPNUM_BY_ID(Nullable<int> intID, Nullable<int> intIsAuthority)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ITEM_GETTOPNUM_BY_ID", intIDParameter, intIsAuthorityParameter);
        }
    
        public virtual ObjectResult<SP_ITEM_ODERED_SEL_Result> SP_ITEM_ODERED_SEL(string strTitle)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ITEM_ODERED_SEL_Result>("SP_ITEM_ODERED_SEL", strTitleParameter);
        }
    
        public virtual int SP_ITEM_PROCESS(string strSQLStatement)
        {
            var strSQLStatementParameter = strSQLStatement != null ?
                new ObjectParameter("strSQLStatement", strSQLStatement) :
                new ObjectParameter("strSQLStatement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_PROCESS", strSQLStatementParameter);
        }
    
        public virtual int SP_ITEM_QUEUE_SEL_INPUTDATE(string inputDate, Nullable<int> intReviewed)
        {
            var inputDateParameter = inputDate != null ?
                new ObjectParameter("InputDate", inputDate) :
                new ObjectParameter("InputDate", typeof(string));
    
            var intReviewedParameter = intReviewed.HasValue ?
                new ObjectParameter("intReviewed", intReviewed) :
                new ObjectParameter("intReviewed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_QUEUE_SEL_INPUTDATE", inputDateParameter, intReviewedParameter);
        }
    
        public virtual int SP_ITEM_SEL(string strSQLStatement)
        {
            var strSQLStatementParameter = strSQLStatement != null ?
                new ObjectParameter("strSQLStatement", strSQLStatement) :
                new ObjectParameter("strSQLStatement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_SEL", strSQLStatementParameter);
        }
    
        public virtual ObjectResult<SP_ITEM_SELECT_Result> SP_ITEM_SELECT(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ITEM_SELECT_Result>("SP_ITEM_SELECT", intIDParameter);
        }
    
        public virtual int SP_ITEM_SELECT_IDS(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ITEM_SELECT_IDS", strIDsParameter);
        }
    
        public virtual int SP_LIB_STORE_SEL(string strSQL)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LIB_STORE_SEL", strSQLParameter);
        }
    
        public virtual int SP_LOCK_PATRON_CARD(string strPatronCode, Nullable<int> intLockedDays, string strStartedDate, string strNote)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intLockedDaysParameter = intLockedDays.HasValue ?
                new ObjectParameter("intLockedDays", intLockedDays) :
                new ObjectParameter("intLockedDays", typeof(int));
    
            var strStartedDateParameter = strStartedDate != null ?
                new ObjectParameter("strStartedDate", strStartedDate) :
                new ObjectParameter("strStartedDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LOCK_PATRON_CARD", strPatronCodeParameter, intLockedDaysParameter, strStartedDateParameter, strNoteParameter);
        }
    
        public virtual int SP_LOCK_PATRON_CARD_UPDATE(string strPatronCode, Nullable<int> intLockedDays, string strStartedDate, string strNote)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var intLockedDaysParameter = intLockedDays.HasValue ?
                new ObjectParameter("intLockedDays", intLockedDays) :
                new ObjectParameter("intLockedDays", typeof(int));
    
            var strStartedDateParameter = strStartedDate != null ?
                new ObjectParameter("strStartedDate", strStartedDate) :
                new ObjectParameter("strStartedDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LOCK_PATRON_CARD_UPDATE", strPatronCodeParameter, intLockedDaysParameter, strStartedDateParameter, strNoteParameter);
        }
    
        public virtual int SP_LOG_FINE_FEES(string strTransactionIDs)
        {
            var strTransactionIDsParameter = strTransactionIDs != null ?
                new ObjectParameter("strTransactionIDs", strTransactionIDs) :
                new ObjectParameter("strTransactionIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LOG_FINE_FEES", strTransactionIDsParameter);
        }
    
        public virtual ObjectResult<SP_MARC_BLOCK_SEL_Result> SP_MARC_BLOCK_SEL(Nullable<int> intIsAuthority)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MARC_BLOCK_SEL_Result>("SP_MARC_BLOCK_SEL", intIsAuthorityParameter);
        }
    
        public virtual ObjectResult<SP_MARC_FIELD_GETPROPERTIES_Result> SP_MARC_FIELD_GETPROPERTIES(Nullable<int> intIsAuthority, string strFieldCode)
        {
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            var strFieldCodeParameter = strFieldCode != null ?
                new ObjectParameter("strFieldCode", strFieldCode) :
                new ObjectParameter("strFieldCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MARC_FIELD_GETPROPERTIES_Result>("SP_MARC_FIELD_GETPROPERTIES", intIsAuthorityParameter, strFieldCodeParameter);
        }
    
        public virtual ObjectResult<SP_MARC_FIELD_TYPE_SEL_Result> SP_MARC_FIELD_TYPE_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MARC_FIELD_TYPE_SEL_Result>("SP_MARC_FIELD_TYPE_SEL");
        }
    
        public virtual ObjectResult<SP_MARC_FUNCTION_SEL_Result> SP_MARC_FUNCTION_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MARC_FUNCTION_SEL_Result>("SP_MARC_FUNCTION_SEL");
        }
    
        public virtual int SP_MERGELOANTYPE(string strGroupLoanTypeID, Nullable<int> intID)
        {
            var strGroupLoanTypeIDParameter = strGroupLoanTypeID != null ?
                new ObjectParameter("strGroupLoanTypeID", strGroupLoanTypeID) :
                new ObjectParameter("strGroupLoanTypeID", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MERGELOANTYPE", strGroupLoanTypeIDParameter, intIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_ACTIVE_ACCOUNT_Result> SP_OPAC_ACTIVE_ACCOUNT(string strPatronCode, string strValidDate, string strDOB, string strPassword)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strDOBParameter = strDOB != null ?
                new ObjectParameter("strDOB", strDOB) :
                new ObjectParameter("strDOB", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_ACTIVE_ACCOUNT_Result>("SP_OPAC_ACTIVE_ACCOUNT", strPatronCodeParameter, strValidDateParameter, strDOBParameter, strPasswordParameter);
        }
    
        public virtual int SP_OPAC_CANCEL_PENDING_REQUEST(Nullable<int> lngRequestID)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CANCEL_PENDING_REQUEST", lngRequestIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_CHECK_EDELIV_USER_Result> SP_OPAC_CHECK_EDELIV_USER(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_CHECK_EDELIV_USER_Result>("SP_OPAC_CHECK_EDELIV_USER", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_CHECK_EDELIV_USER_DOWNLOAD_Result> SP_OPAC_CHECK_EDELIV_USER_DOWNLOAD(Nullable<int> intUserID, Nullable<int> intFileID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intFileIDParameter = intFileID.HasValue ?
                new ObjectParameter("intFileID", intFileID) :
                new ObjectParameter("intFileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_CHECK_EDELIV_USER_DOWNLOAD_Result>("SP_OPAC_CHECK_EDELIV_USER_DOWNLOAD", intUserIDParameter, intFileIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_CHECK_PATRON_CARD_Result> SP_OPAC_CHECK_PATRON_CARD(string strPatronCode, string strPassword)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_CHECK_PATRON_CARD_Result>("SP_OPAC_CHECK_PATRON_CARD", strPatronCodeParameter, strPasswordParameter);
        }
    
        public virtual int SP_OPAC_CRE_ILL_INCOMING_REQUEST(Nullable<int> intLibID, string strEDelivMode, string strEDelivTSAddr, string strEmailReplyAddress, string strAccountNumber, string strLibraryName, string strLibrarySymbol, string strBillDelivBox, string strBillDelivCity, string strBillDelivCode, Nullable<byte> intBillDelivCountry, string strBillDelivName, string strBillDelivRegion, string strBillDelivStreet, string strBillDelivXAddr, string strCode, Nullable<bool> blnDublicate, string strPostDelivBox, string strPostDelivCity, string strPostDelivCode, Nullable<byte> intPostDelivCountry, string strPostDelivName, string strPostDelivRegion, string strPostDelivStreet, string strPostDelivXAddr, string strTelephone, Nullable<byte> intEncodingScheme, string strRequestID, string strNeedBeforeDate, string strExpiryDate, Nullable<byte> intServiceType, Nullable<byte> intCopyrightCompliance, Nullable<byte> intPriority, Nullable<decimal> dblMaxCost, string strCurrencyCode, Nullable<byte> intPaymentType, Nullable<byte> intItemType, Nullable<bool> blnReciprocalAgreement, Nullable<bool> blnWillPayFee, Nullable<bool> blnPaymentProvided, Nullable<byte> intMedium, Nullable<bool> blnDelivMode, string strNote, string strPatronName, string strPatronID, string strPatronStatus, Nullable<int> intStatus, string strTitle, string strCallNumber, string strAuthor, string strPlaceOfPub, string strPublisher, string strSeriesTitleNumber, string strVolumeIssue, string strEdition, string strPubDate, string strComponentPubDate, string strArticleAuthor, string strArticleTitle, string strPagination, string strNationalBibNumber, string strISBN, string strISSN, string strSystemNumber, string strOtherNumbers, string strVerification, Nullable<bool> blnRequestType, ObjectParameter intRetval)
        {
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var strEDelivModeParameter = strEDelivMode != null ?
                new ObjectParameter("strEDelivMode", strEDelivMode) :
                new ObjectParameter("strEDelivMode", typeof(string));
    
            var strEDelivTSAddrParameter = strEDelivTSAddr != null ?
                new ObjectParameter("strEDelivTSAddr", strEDelivTSAddr) :
                new ObjectParameter("strEDelivTSAddr", typeof(string));
    
            var strEmailReplyAddressParameter = strEmailReplyAddress != null ?
                new ObjectParameter("strEmailReplyAddress", strEmailReplyAddress) :
                new ObjectParameter("strEmailReplyAddress", typeof(string));
    
            var strAccountNumberParameter = strAccountNumber != null ?
                new ObjectParameter("strAccountNumber", strAccountNumber) :
                new ObjectParameter("strAccountNumber", typeof(string));
    
            var strLibraryNameParameter = strLibraryName != null ?
                new ObjectParameter("strLibraryName", strLibraryName) :
                new ObjectParameter("strLibraryName", typeof(string));
    
            var strLibrarySymbolParameter = strLibrarySymbol != null ?
                new ObjectParameter("strLibrarySymbol", strLibrarySymbol) :
                new ObjectParameter("strLibrarySymbol", typeof(string));
    
            var strBillDelivBoxParameter = strBillDelivBox != null ?
                new ObjectParameter("strBillDelivBox", strBillDelivBox) :
                new ObjectParameter("strBillDelivBox", typeof(string));
    
            var strBillDelivCityParameter = strBillDelivCity != null ?
                new ObjectParameter("strBillDelivCity", strBillDelivCity) :
                new ObjectParameter("strBillDelivCity", typeof(string));
    
            var strBillDelivCodeParameter = strBillDelivCode != null ?
                new ObjectParameter("strBillDelivCode", strBillDelivCode) :
                new ObjectParameter("strBillDelivCode", typeof(string));
    
            var intBillDelivCountryParameter = intBillDelivCountry.HasValue ?
                new ObjectParameter("intBillDelivCountry", intBillDelivCountry) :
                new ObjectParameter("intBillDelivCountry", typeof(byte));
    
            var strBillDelivNameParameter = strBillDelivName != null ?
                new ObjectParameter("strBillDelivName", strBillDelivName) :
                new ObjectParameter("strBillDelivName", typeof(string));
    
            var strBillDelivRegionParameter = strBillDelivRegion != null ?
                new ObjectParameter("strBillDelivRegion", strBillDelivRegion) :
                new ObjectParameter("strBillDelivRegion", typeof(string));
    
            var strBillDelivStreetParameter = strBillDelivStreet != null ?
                new ObjectParameter("strBillDelivStreet", strBillDelivStreet) :
                new ObjectParameter("strBillDelivStreet", typeof(string));
    
            var strBillDelivXAddrParameter = strBillDelivXAddr != null ?
                new ObjectParameter("strBillDelivXAddr", strBillDelivXAddr) :
                new ObjectParameter("strBillDelivXAddr", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var blnDublicateParameter = blnDublicate.HasValue ?
                new ObjectParameter("blnDublicate", blnDublicate) :
                new ObjectParameter("blnDublicate", typeof(bool));
    
            var strPostDelivBoxParameter = strPostDelivBox != null ?
                new ObjectParameter("strPostDelivBox", strPostDelivBox) :
                new ObjectParameter("strPostDelivBox", typeof(string));
    
            var strPostDelivCityParameter = strPostDelivCity != null ?
                new ObjectParameter("strPostDelivCity", strPostDelivCity) :
                new ObjectParameter("strPostDelivCity", typeof(string));
    
            var strPostDelivCodeParameter = strPostDelivCode != null ?
                new ObjectParameter("strPostDelivCode", strPostDelivCode) :
                new ObjectParameter("strPostDelivCode", typeof(string));
    
            var intPostDelivCountryParameter = intPostDelivCountry.HasValue ?
                new ObjectParameter("intPostDelivCountry", intPostDelivCountry) :
                new ObjectParameter("intPostDelivCountry", typeof(byte));
    
            var strPostDelivNameParameter = strPostDelivName != null ?
                new ObjectParameter("strPostDelivName", strPostDelivName) :
                new ObjectParameter("strPostDelivName", typeof(string));
    
            var strPostDelivRegionParameter = strPostDelivRegion != null ?
                new ObjectParameter("strPostDelivRegion", strPostDelivRegion) :
                new ObjectParameter("strPostDelivRegion", typeof(string));
    
            var strPostDelivStreetParameter = strPostDelivStreet != null ?
                new ObjectParameter("strPostDelivStreet", strPostDelivStreet) :
                new ObjectParameter("strPostDelivStreet", typeof(string));
    
            var strPostDelivXAddrParameter = strPostDelivXAddr != null ?
                new ObjectParameter("strPostDelivXAddr", strPostDelivXAddr) :
                new ObjectParameter("strPostDelivXAddr", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var intEncodingSchemeParameter = intEncodingScheme.HasValue ?
                new ObjectParameter("intEncodingScheme", intEncodingScheme) :
                new ObjectParameter("intEncodingScheme", typeof(byte));
    
            var strRequestIDParameter = strRequestID != null ?
                new ObjectParameter("strRequestID", strRequestID) :
                new ObjectParameter("strRequestID", typeof(string));
    
            var strNeedBeforeDateParameter = strNeedBeforeDate != null ?
                new ObjectParameter("strNeedBeforeDate", strNeedBeforeDate) :
                new ObjectParameter("strNeedBeforeDate", typeof(string));
    
            var strExpiryDateParameter = strExpiryDate != null ?
                new ObjectParameter("strExpiryDate", strExpiryDate) :
                new ObjectParameter("strExpiryDate", typeof(string));
    
            var intServiceTypeParameter = intServiceType.HasValue ?
                new ObjectParameter("intServiceType", intServiceType) :
                new ObjectParameter("intServiceType", typeof(byte));
    
            var intCopyrightComplianceParameter = intCopyrightCompliance.HasValue ?
                new ObjectParameter("intCopyrightCompliance", intCopyrightCompliance) :
                new ObjectParameter("intCopyrightCompliance", typeof(byte));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(byte));
    
            var dblMaxCostParameter = dblMaxCost.HasValue ?
                new ObjectParameter("dblMaxCost", dblMaxCost) :
                new ObjectParameter("dblMaxCost", typeof(decimal));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var intPaymentTypeParameter = intPaymentType.HasValue ?
                new ObjectParameter("intPaymentType", intPaymentType) :
                new ObjectParameter("intPaymentType", typeof(byte));
    
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(byte));
    
            var blnReciprocalAgreementParameter = blnReciprocalAgreement.HasValue ?
                new ObjectParameter("blnReciprocalAgreement", blnReciprocalAgreement) :
                new ObjectParameter("blnReciprocalAgreement", typeof(bool));
    
            var blnWillPayFeeParameter = blnWillPayFee.HasValue ?
                new ObjectParameter("blnWillPayFee", blnWillPayFee) :
                new ObjectParameter("blnWillPayFee", typeof(bool));
    
            var blnPaymentProvidedParameter = blnPaymentProvided.HasValue ?
                new ObjectParameter("blnPaymentProvided", blnPaymentProvided) :
                new ObjectParameter("blnPaymentProvided", typeof(bool));
    
            var intMediumParameter = intMedium.HasValue ?
                new ObjectParameter("intMedium", intMedium) :
                new ObjectParameter("intMedium", typeof(byte));
    
            var blnDelivModeParameter = blnDelivMode.HasValue ?
                new ObjectParameter("blnDelivMode", blnDelivMode) :
                new ObjectParameter("blnDelivMode", typeof(bool));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strPatronNameParameter = strPatronName != null ?
                new ObjectParameter("strPatronName", strPatronName) :
                new ObjectParameter("strPatronName", typeof(string));
    
            var strPatronIDParameter = strPatronID != null ?
                new ObjectParameter("strPatronID", strPatronID) :
                new ObjectParameter("strPatronID", typeof(string));
    
            var strPatronStatusParameter = strPatronStatus != null ?
                new ObjectParameter("strPatronStatus", strPatronStatus) :
                new ObjectParameter("strPatronStatus", typeof(string));
    
            var intStatusParameter = intStatus.HasValue ?
                new ObjectParameter("intStatus", intStatus) :
                new ObjectParameter("intStatus", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strCallNumberParameter = strCallNumber != null ?
                new ObjectParameter("strCallNumber", strCallNumber) :
                new ObjectParameter("strCallNumber", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPlaceOfPubParameter = strPlaceOfPub != null ?
                new ObjectParameter("strPlaceOfPub", strPlaceOfPub) :
                new ObjectParameter("strPlaceOfPub", typeof(string));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var strSeriesTitleNumberParameter = strSeriesTitleNumber != null ?
                new ObjectParameter("strSeriesTitleNumber", strSeriesTitleNumber) :
                new ObjectParameter("strSeriesTitleNumber", typeof(string));
    
            var strVolumeIssueParameter = strVolumeIssue != null ?
                new ObjectParameter("strVolumeIssue", strVolumeIssue) :
                new ObjectParameter("strVolumeIssue", typeof(string));
    
            var strEditionParameter = strEdition != null ?
                new ObjectParameter("strEdition", strEdition) :
                new ObjectParameter("strEdition", typeof(string));
    
            var strPubDateParameter = strPubDate != null ?
                new ObjectParameter("strPubDate", strPubDate) :
                new ObjectParameter("strPubDate", typeof(string));
    
            var strComponentPubDateParameter = strComponentPubDate != null ?
                new ObjectParameter("strComponentPubDate", strComponentPubDate) :
                new ObjectParameter("strComponentPubDate", typeof(string));
    
            var strArticleAuthorParameter = strArticleAuthor != null ?
                new ObjectParameter("strArticleAuthor", strArticleAuthor) :
                new ObjectParameter("strArticleAuthor", typeof(string));
    
            var strArticleTitleParameter = strArticleTitle != null ?
                new ObjectParameter("strArticleTitle", strArticleTitle) :
                new ObjectParameter("strArticleTitle", typeof(string));
    
            var strPaginationParameter = strPagination != null ?
                new ObjectParameter("strPagination", strPagination) :
                new ObjectParameter("strPagination", typeof(string));
    
            var strNationalBibNumberParameter = strNationalBibNumber != null ?
                new ObjectParameter("strNationalBibNumber", strNationalBibNumber) :
                new ObjectParameter("strNationalBibNumber", typeof(string));
    
            var strISBNParameter = strISBN != null ?
                new ObjectParameter("strISBN", strISBN) :
                new ObjectParameter("strISBN", typeof(string));
    
            var strISSNParameter = strISSN != null ?
                new ObjectParameter("strISSN", strISSN) :
                new ObjectParameter("strISSN", typeof(string));
    
            var strSystemNumberParameter = strSystemNumber != null ?
                new ObjectParameter("strSystemNumber", strSystemNumber) :
                new ObjectParameter("strSystemNumber", typeof(string));
    
            var strOtherNumbersParameter = strOtherNumbers != null ?
                new ObjectParameter("strOtherNumbers", strOtherNumbers) :
                new ObjectParameter("strOtherNumbers", typeof(string));
    
            var strVerificationParameter = strVerification != null ?
                new ObjectParameter("strVerification", strVerification) :
                new ObjectParameter("strVerification", typeof(string));
    
            var blnRequestTypeParameter = blnRequestType.HasValue ?
                new ObjectParameter("blnRequestType", blnRequestType) :
                new ObjectParameter("blnRequestType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CRE_ILL_INCOMING_REQUEST", intLibIDParameter, strEDelivModeParameter, strEDelivTSAddrParameter, strEmailReplyAddressParameter, strAccountNumberParameter, strLibraryNameParameter, strLibrarySymbolParameter, strBillDelivBoxParameter, strBillDelivCityParameter, strBillDelivCodeParameter, intBillDelivCountryParameter, strBillDelivNameParameter, strBillDelivRegionParameter, strBillDelivStreetParameter, strBillDelivXAddrParameter, strCodeParameter, blnDublicateParameter, strPostDelivBoxParameter, strPostDelivCityParameter, strPostDelivCodeParameter, intPostDelivCountryParameter, strPostDelivNameParameter, strPostDelivRegionParameter, strPostDelivStreetParameter, strPostDelivXAddrParameter, strTelephoneParameter, intEncodingSchemeParameter, strRequestIDParameter, strNeedBeforeDateParameter, strExpiryDateParameter, intServiceTypeParameter, intCopyrightComplianceParameter, intPriorityParameter, dblMaxCostParameter, strCurrencyCodeParameter, intPaymentTypeParameter, intItemTypeParameter, blnReciprocalAgreementParameter, blnWillPayFeeParameter, blnPaymentProvidedParameter, intMediumParameter, blnDelivModeParameter, strNoteParameter, strPatronNameParameter, strPatronIDParameter, strPatronStatusParameter, intStatusParameter, strTitleParameter, strCallNumberParameter, strAuthorParameter, strPlaceOfPubParameter, strPublisherParameter, strSeriesTitleNumberParameter, strVolumeIssueParameter, strEditionParameter, strPubDateParameter, strComponentPubDateParameter, strArticleAuthorParameter, strArticleTitleParameter, strPaginationParameter, strNationalBibNumberParameter, strISBNParameter, strISSNParameter, strSystemNumberParameter, strOtherNumbersParameter, strVerificationParameter, blnRequestTypeParameter, intRetval);
        }
    
        public virtual int SP_OPAC_CRE_ILL_OUTGOING_REQUEST(Nullable<int> intType, string strPatronCode, string strPassword, string strNeedBeforeDate, Nullable<decimal> dblMaxCost, string strCurrencyCode, string strNote, string strTitle, string strAuthor, string strPubDate, string strArticleAuthor, string strArticleTitle, string strPagination, string strPublisher, string strVerification, string strSponsoringBody, string strSeriesTitleNumber, string strVolumeIssue, ObjectParameter intRetval)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var strNeedBeforeDateParameter = strNeedBeforeDate != null ?
                new ObjectParameter("strNeedBeforeDate", strNeedBeforeDate) :
                new ObjectParameter("strNeedBeforeDate", typeof(string));
    
            var dblMaxCostParameter = dblMaxCost.HasValue ?
                new ObjectParameter("dblMaxCost", dblMaxCost) :
                new ObjectParameter("dblMaxCost", typeof(decimal));
    
            var strCurrencyCodeParameter = strCurrencyCode != null ?
                new ObjectParameter("strCurrencyCode", strCurrencyCode) :
                new ObjectParameter("strCurrencyCode", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPubDateParameter = strPubDate != null ?
                new ObjectParameter("strPubDate", strPubDate) :
                new ObjectParameter("strPubDate", typeof(string));
    
            var strArticleAuthorParameter = strArticleAuthor != null ?
                new ObjectParameter("strArticleAuthor", strArticleAuthor) :
                new ObjectParameter("strArticleAuthor", typeof(string));
    
            var strArticleTitleParameter = strArticleTitle != null ?
                new ObjectParameter("strArticleTitle", strArticleTitle) :
                new ObjectParameter("strArticleTitle", typeof(string));
    
            var strPaginationParameter = strPagination != null ?
                new ObjectParameter("strPagination", strPagination) :
                new ObjectParameter("strPagination", typeof(string));
    
            var strPublisherParameter = strPublisher != null ?
                new ObjectParameter("strPublisher", strPublisher) :
                new ObjectParameter("strPublisher", typeof(string));
    
            var strVerificationParameter = strVerification != null ?
                new ObjectParameter("strVerification", strVerification) :
                new ObjectParameter("strVerification", typeof(string));
    
            var strSponsoringBodyParameter = strSponsoringBody != null ?
                new ObjectParameter("strSponsoringBody", strSponsoringBody) :
                new ObjectParameter("strSponsoringBody", typeof(string));
    
            var strSeriesTitleNumberParameter = strSeriesTitleNumber != null ?
                new ObjectParameter("strSeriesTitleNumber", strSeriesTitleNumber) :
                new ObjectParameter("strSeriesTitleNumber", typeof(string));
    
            var strVolumeIssueParameter = strVolumeIssue != null ?
                new ObjectParameter("strVolumeIssue", strVolumeIssue) :
                new ObjectParameter("strVolumeIssue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CRE_ILL_OUTGOING_REQUEST", intTypeParameter, strPatronCodeParameter, strPasswordParameter, strNeedBeforeDateParameter, dblMaxCostParameter, strCurrencyCodeParameter, strNoteParameter, strTitleParameter, strAuthorParameter, strPubDateParameter, strArticleAuthorParameter, strArticleTitleParameter, strPaginationParameter, strPublisherParameter, strVerificationParameter, strSponsoringBodyParameter, strSeriesTitleNumberParameter, strVolumeIssueParameter, intRetval);
        }
    
        public virtual int SP_OPAC_CREATE_EDELIV_ACCOUNT(string strUserName, string strName, string strDelivName, string strDelivXAddr, string strDelivStreet, string strDelivBox, string strDelivCity, string strDelivRegion, Nullable<byte> intDelivCountry, string strDelivCode, string strTelephone, string strEmailAddress, string strPassword, string strFax, string strContactPerson, Nullable<int> intSecretLevel, ObjectParameter intOutPut)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strDelivNameParameter = strDelivName != null ?
                new ObjectParameter("strDelivName", strDelivName) :
                new ObjectParameter("strDelivName", typeof(string));
    
            var strDelivXAddrParameter = strDelivXAddr != null ?
                new ObjectParameter("strDelivXAddr", strDelivXAddr) :
                new ObjectParameter("strDelivXAddr", typeof(string));
    
            var strDelivStreetParameter = strDelivStreet != null ?
                new ObjectParameter("strDelivStreet", strDelivStreet) :
                new ObjectParameter("strDelivStreet", typeof(string));
    
            var strDelivBoxParameter = strDelivBox != null ?
                new ObjectParameter("strDelivBox", strDelivBox) :
                new ObjectParameter("strDelivBox", typeof(string));
    
            var strDelivCityParameter = strDelivCity != null ?
                new ObjectParameter("strDelivCity", strDelivCity) :
                new ObjectParameter("strDelivCity", typeof(string));
    
            var strDelivRegionParameter = strDelivRegion != null ?
                new ObjectParameter("strDelivRegion", strDelivRegion) :
                new ObjectParameter("strDelivRegion", typeof(string));
    
            var intDelivCountryParameter = intDelivCountry.HasValue ?
                new ObjectParameter("intDelivCountry", intDelivCountry) :
                new ObjectParameter("intDelivCountry", typeof(byte));
    
            var strDelivCodeParameter = strDelivCode != null ?
                new ObjectParameter("strDelivCode", strDelivCode) :
                new ObjectParameter("strDelivCode", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strEmailAddressParameter = strEmailAddress != null ?
                new ObjectParameter("strEmailAddress", strEmailAddress) :
                new ObjectParameter("strEmailAddress", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var strFaxParameter = strFax != null ?
                new ObjectParameter("strFax", strFax) :
                new ObjectParameter("strFax", typeof(string));
    
            var strContactPersonParameter = strContactPerson != null ?
                new ObjectParameter("strContactPerson", strContactPerson) :
                new ObjectParameter("strContactPerson", typeof(string));
    
            var intSecretLevelParameter = intSecretLevel.HasValue ?
                new ObjectParameter("intSecretLevel", intSecretLevel) :
                new ObjectParameter("intSecretLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CREATE_EDELIV_ACCOUNT", strUserNameParameter, strNameParameter, strDelivNameParameter, strDelivXAddrParameter, strDelivStreetParameter, strDelivBoxParameter, strDelivCityParameter, strDelivRegionParameter, intDelivCountryParameter, strDelivCodeParameter, strTelephoneParameter, strEmailAddressParameter, strPasswordParameter, strFaxParameter, strContactPersonParameter, intSecretLevelParameter, intOutPut);
        }
    
        public virtual int SP_OPAC_CREATE_EDELIV_REQUEST(string strExpireDate, Nullable<int> intUserID, Nullable<int> intFileID, Nullable<int> intDevModeID, string strCurrency, Nullable<decimal> mnyAmount, string strNote, Nullable<double> fltRate, Nullable<int> intRequestGroupID)
        {
            var strExpireDateParameter = strExpireDate != null ?
                new ObjectParameter("strExpireDate", strExpireDate) :
                new ObjectParameter("strExpireDate", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var intFileIDParameter = intFileID.HasValue ?
                new ObjectParameter("intFileID", intFileID) :
                new ObjectParameter("intFileID", typeof(int));
    
            var intDevModeIDParameter = intDevModeID.HasValue ?
                new ObjectParameter("intDevModeID", intDevModeID) :
                new ObjectParameter("intDevModeID", typeof(int));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var fltRateParameter = fltRate.HasValue ?
                new ObjectParameter("fltRate", fltRate) :
                new ObjectParameter("fltRate", typeof(double));
    
            var intRequestGroupIDParameter = intRequestGroupID.HasValue ?
                new ObjectParameter("intRequestGroupID", intRequestGroupID) :
                new ObjectParameter("intRequestGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CREATE_EDELIV_REQUEST", strExpireDateParameter, intUserIDParameter, intFileIDParameter, intDevModeIDParameter, strCurrencyParameter, mnyAmountParameter, strNoteParameter, fltRateParameter, intRequestGroupIDParameter);
        }
    
        public virtual int SP_OPAC_CREATE_HOLDING(Nullable<int> intItemID, string strCardNo, string strPassWord, string strValidDate, string strCopyNumber, ObjectParameter intRET)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            var strPassWordParameter = strPassWord != null ?
                new ObjectParameter("strPassWord", strPassWord) :
                new ObjectParameter("strPassWord", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CREATE_HOLDING", intItemIDParameter, strCardNoParameter, strPassWordParameter, strValidDateParameter, strCopyNumberParameter, intRET);
        }
    
        public virtual int SP_OPAC_CREATE_RESERVATION(Nullable<int> intItemID, string strCardNo, string strPassWord, string strValidDate, string strCopyNumber, ObjectParameter intRET)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            var strPassWordParameter = strPassWord != null ?
                new ObjectParameter("strPassWord", strPassWord) :
                new ObjectParameter("strPassWord", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CREATE_RESERVATION", intItemIDParameter, strCardNoParameter, strPassWordParameter, strValidDateParameter, strCopyNumberParameter, intRET);
        }
    
        public virtual int SP_OPAC_CREATED_COMMENTS(string strComment, string strSubject, Nullable<int> intRanking, Nullable<int> intItemID, string strCode, Nullable<int> intSelect, ObjectParameter intSucess)
        {
            var strCommentParameter = strComment != null ?
                new ObjectParameter("strComment", strComment) :
                new ObjectParameter("strComment", typeof(string));
    
            var strSubjectParameter = strSubject != null ?
                new ObjectParameter("strSubject", strSubject) :
                new ObjectParameter("strSubject", typeof(string));
    
            var intRankingParameter = intRanking.HasValue ?
                new ObjectParameter("intRanking", intRanking) :
                new ObjectParameter("intRanking", typeof(int));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var intSelectParameter = intSelect.HasValue ?
                new ObjectParameter("intSelect", intSelect) :
                new ObjectParameter("intSelect", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CREATED_COMMENTS", strCommentParameter, strSubjectParameter, intRankingParameter, intItemIDParameter, strCodeParameter, intSelectParameter, intSucess);
        }
    
        public virtual int SP_OPAC_CURSOR_CIRHOLDING(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_CURSOR_CIRHOLDING", strIDsParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SP_OPAC_DEL_RESERVATION(Nullable<int> intCirID, string strCardNo)
        {
            var intCirIDParameter = intCirID.HasValue ?
                new ObjectParameter("intCirID", intCirID) :
                new ObjectParameter("intCirID", typeof(int));
    
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SP_OPAC_DEL_RESERVATION", intCirIDParameter, strCardNoParameter);
        }
    
        public virtual int SP_OPAC_DELETE_COMMENTS(Nullable<int> intCo_ID, Nullable<int> intSucess)
        {
            var intCo_IDParameter = intCo_ID.HasValue ?
                new ObjectParameter("intCo_ID", intCo_ID) :
                new ObjectParameter("intCo_ID", typeof(int));
    
            var intSucessParameter = intSucess.HasValue ?
                new ObjectParameter("intSucess", intSucess) :
                new ObjectParameter("intSucess", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_DELETE_COMMENTS", intCo_IDParameter, intSucessParameter);
        }
    
        public virtual int SP_OPAC_DICTIONARY(string strSQL)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_DICTIONARY", strSQLParameter);
        }
    
        public virtual ObjectResult<string> SP_OPAC_EDATA_GET_DUB_TITLE(Nullable<int> lngID)
        {
            var lngIDParameter = lngID.HasValue ?
                new ObjectParameter("lngID", lngID) :
                new ObjectParameter("lngID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_OPAC_EDATA_GET_DUB_TITLE", lngIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_EDATA_GET_METADATA_Result> SP_OPAC_EDATA_GET_METADATA(Nullable<int> lngobjID)
        {
            var lngobjIDParameter = lngobjID.HasValue ?
                new ObjectParameter("lngobjID", lngobjID) :
                new ObjectParameter("lngobjID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_EDATA_GET_METADATA_Result>("SP_OPAC_EDATA_GET_METADATA", lngobjIDParameter);
        }
    
        public virtual int SP_OPAC_EDIT_COMMENTS(string strComment, string strSubject, string intRanking, string strCode, string strPass, Nullable<int> intSelect, Nullable<int> intCo_ID, ObjectParameter intSucess)
        {
            var strCommentParameter = strComment != null ?
                new ObjectParameter("strComment", strComment) :
                new ObjectParameter("strComment", typeof(string));
    
            var strSubjectParameter = strSubject != null ?
                new ObjectParameter("strSubject", strSubject) :
                new ObjectParameter("strSubject", typeof(string));
    
            var intRankingParameter = intRanking != null ?
                new ObjectParameter("intRanking", intRanking) :
                new ObjectParameter("intRanking", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strPassParameter = strPass != null ?
                new ObjectParameter("strPass", strPass) :
                new ObjectParameter("strPass", typeof(string));
    
            var intSelectParameter = intSelect.HasValue ?
                new ObjectParameter("intSelect", intSelect) :
                new ObjectParameter("intSelect", typeof(int));
    
            var intCo_IDParameter = intCo_ID.HasValue ?
                new ObjectParameter("intCo_ID", intCo_ID) :
                new ObjectParameter("intCo_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_EDIT_COMMENTS", strCommentParameter, strSubjectParameter, intRankingParameter, strCodeParameter, strPassParameter, intSelectParameter, intCo_IDParameter, intSucess);
        }
    
        public virtual ObjectResult<SP_OPAC_FULLTEXT_SEARCH_Result> SP_OPAC_FULLTEXT_SEARCH(string strURL)
        {
            var strURLParameter = strURL != null ?
                new ObjectParameter("strURL", strURL) :
                new ObjectParameter("strURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_FULLTEXT_SEARCH_Result>("SP_OPAC_FULLTEXT_SEARCH", strURLParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_ACCAUTHOR_Result> SP_OPAC_GET_ACCAUTHOR(string strAccessEntry)
        {
            var strAccessEntryParameter = strAccessEntry != null ?
                new ObjectParameter("strAccessEntry", strAccessEntry) :
                new ObjectParameter("strAccessEntry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_ACCAUTHOR_Result>("SP_OPAC_GET_ACCAUTHOR", strAccessEntryParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_BEST_ITEMS_Result> SP_OPAC_GET_BEST_ITEMS(Nullable<bool> bitSECUREDOPAC, Nullable<int> intAccessLevel, Nullable<int> intTOP, Nullable<int> intNumberDay)
        {
            var bitSECUREDOPACParameter = bitSECUREDOPAC.HasValue ?
                new ObjectParameter("bitSECUREDOPAC", bitSECUREDOPAC) :
                new ObjectParameter("bitSECUREDOPAC", typeof(bool));
    
            var intAccessLevelParameter = intAccessLevel.HasValue ?
                new ObjectParameter("intAccessLevel", intAccessLevel) :
                new ObjectParameter("intAccessLevel", typeof(int));
    
            var intTOPParameter = intTOP.HasValue ?
                new ObjectParameter("intTOP", intTOP) :
                new ObjectParameter("intTOP", typeof(int));
    
            var intNumberDayParameter = intNumberDay.HasValue ?
                new ObjectParameter("intNumberDay", intNumberDay) :
                new ObjectParameter("intNumberDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_BEST_ITEMS_Result>("SP_OPAC_GET_BEST_ITEMS", bitSECUREDOPACParameter, intAccessLevelParameter, intTOPParameter, intNumberDayParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_COMMENTS_Result> SP_OPAC_GET_COMMENTS(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_COMMENTS_Result>("SP_OPAC_GET_COMMENTS", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_DIC_ITEM_TYPE_Result> SP_OPAC_GET_DIC_ITEM_TYPE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_DIC_ITEM_TYPE_Result>("SP_OPAC_GET_DIC_ITEM_TYPE");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SP_OPAC_GET_DUEDATE(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SP_OPAC_GET_DUEDATE", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_EDATA_Result> SP_OPAC_GET_EDATA(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_EDATA_Result>("SP_OPAC_GET_EDATA", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_EDATA_DETAIL_Result> SP_OPAC_GET_EDATA_DETAIL(Nullable<int> intFileID)
        {
            var intFileIDParameter = intFileID.HasValue ?
                new ObjectParameter("intFileID", intFileID) :
                new ObjectParameter("intFileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_EDATA_DETAIL_Result>("SP_OPAC_GET_EDATA_DETAIL", intFileIDParameter);
        }
    
        public virtual int SP_OPAC_GET_EDATA_IMAGE(string strTitle, string strAuthor, string strKeyWord, string strBitmapType, string strColorModel, string strMinWidth, string strMaxWidth, string strMinHeight, string strMaxHeight, string strMinRes, string strMaxRes, string strMinSize, string strMaxSize, string strSort)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strKeyWordParameter = strKeyWord != null ?
                new ObjectParameter("strKeyWord", strKeyWord) :
                new ObjectParameter("strKeyWord", typeof(string));
    
            var strBitmapTypeParameter = strBitmapType != null ?
                new ObjectParameter("strBitmapType", strBitmapType) :
                new ObjectParameter("strBitmapType", typeof(string));
    
            var strColorModelParameter = strColorModel != null ?
                new ObjectParameter("strColorModel", strColorModel) :
                new ObjectParameter("strColorModel", typeof(string));
    
            var strMinWidthParameter = strMinWidth != null ?
                new ObjectParameter("strMinWidth", strMinWidth) :
                new ObjectParameter("strMinWidth", typeof(string));
    
            var strMaxWidthParameter = strMaxWidth != null ?
                new ObjectParameter("strMaxWidth", strMaxWidth) :
                new ObjectParameter("strMaxWidth", typeof(string));
    
            var strMinHeightParameter = strMinHeight != null ?
                new ObjectParameter("strMinHeight", strMinHeight) :
                new ObjectParameter("strMinHeight", typeof(string));
    
            var strMaxHeightParameter = strMaxHeight != null ?
                new ObjectParameter("strMaxHeight", strMaxHeight) :
                new ObjectParameter("strMaxHeight", typeof(string));
    
            var strMinResParameter = strMinRes != null ?
                new ObjectParameter("strMinRes", strMinRes) :
                new ObjectParameter("strMinRes", typeof(string));
    
            var strMaxResParameter = strMaxRes != null ?
                new ObjectParameter("strMaxRes", strMaxRes) :
                new ObjectParameter("strMaxRes", typeof(string));
    
            var strMinSizeParameter = strMinSize != null ?
                new ObjectParameter("strMinSize", strMinSize) :
                new ObjectParameter("strMinSize", typeof(string));
    
            var strMaxSizeParameter = strMaxSize != null ?
                new ObjectParameter("strMaxSize", strMaxSize) :
                new ObjectParameter("strMaxSize", typeof(string));
    
            var strSortParameter = strSort != null ?
                new ObjectParameter("strSort", strSort) :
                new ObjectParameter("strSort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_EDATA_IMAGE", strTitleParameter, strAuthorParameter, strKeyWordParameter, strBitmapTypeParameter, strColorModelParameter, strMinWidthParameter, strMaxWidthParameter, strMinHeightParameter, strMaxHeightParameter, strMinResParameter, strMaxResParameter, strMinSizeParameter, strMaxSizeParameter, strSortParameter);
        }
    
        public virtual int SP_OPAC_GET_EDATA_INFOR(Nullable<int> intType, Nullable<int> lngStartID, Nullable<int> intPageSize, string strParam, string strSort, string strIDs)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var lngStartIDParameter = lngStartID.HasValue ?
                new ObjectParameter("lngStartID", lngStartID) :
                new ObjectParameter("lngStartID", typeof(int));
    
            var intPageSizeParameter = intPageSize.HasValue ?
                new ObjectParameter("intPageSize", intPageSize) :
                new ObjectParameter("intPageSize", typeof(int));
    
            var strParamParameter = strParam != null ?
                new ObjectParameter("strParam", strParam) :
                new ObjectParameter("strParam", typeof(string));
    
            var strSortParameter = strSort != null ?
                new ObjectParameter("strSort", strSort) :
                new ObjectParameter("strSort", typeof(string));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_EDATA_INFOR", intTypeParameter, lngStartIDParameter, intPageSizeParameter, strParamParameter, strSortParameter, strIDsParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_EDELIV_INFOR_Result> SP_OPAC_GET_EDELIV_INFOR(string strFileIDs)
        {
            var strFileIDsParameter = strFileIDs != null ?
                new ObjectParameter("strFileIDs", strFileIDs) :
                new ObjectParameter("strFileIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_EDELIV_INFOR_Result>("SP_OPAC_GET_EDELIV_INFOR", strFileIDsParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_EDELIV_INFOR_BY_GROUP_Result> SP_OPAC_GET_EDELIV_INFOR_BY_GROUP(Nullable<int> intRequestGroupID, ObjectParameter mnyTotal)
        {
            var intRequestGroupIDParameter = intRequestGroupID.HasValue ?
                new ObjectParameter("intRequestGroupID", intRequestGroupID) :
                new ObjectParameter("intRequestGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_EDELIV_INFOR_BY_GROUP_Result>("SP_OPAC_GET_EDELIV_INFOR_BY_GROUP", intRequestGroupIDParameter, mnyTotal);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_EDUCATION_Result> SP_OPAC_GET_EDUCATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_EDUCATION_Result>("SP_OPAC_GET_EDUCATION");
        }
    
        public virtual ObjectResult<SP_OPAC_GET_GENERATELINFOR_Result> SP_OPAC_GET_GENERATELINFOR(string strFlage, Nullable<int> intAccessLevel, Nullable<int> intTop, Nullable<int> intNumberDay)
        {
            var strFlageParameter = strFlage != null ?
                new ObjectParameter("strFlage", strFlage) :
                new ObjectParameter("strFlage", typeof(string));
    
            var intAccessLevelParameter = intAccessLevel.HasValue ?
                new ObjectParameter("intAccessLevel", intAccessLevel) :
                new ObjectParameter("intAccessLevel", typeof(int));
    
            var intTopParameter = intTop.HasValue ?
                new ObjectParameter("intTop", intTop) :
                new ObjectParameter("intTop", typeof(int));
    
            var intNumberDayParameter = intNumberDay.HasValue ?
                new ObjectParameter("intNumberDay", intNumberDay) :
                new ObjectParameter("intNumberDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_GENERATELINFOR_Result>("SP_OPAC_GET_GENERATELINFOR", strFlageParameter, intAccessLevelParameter, intTopParameter, intNumberDayParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_HOLDINGINFO_Result> SP_OPAC_GET_HOLDINGINFO(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_HOLDINGINFO_Result>("SP_OPAC_GET_HOLDINGINFO", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_HOLDINGS_Result> SP_OPAC_GET_HOLDINGS(Nullable<int> intItemID, Nullable<int> intSerID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intSerIDParameter = intSerID.HasValue ?
                new ObjectParameter("intSerID", intSerID) :
                new ObjectParameter("intSerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_HOLDINGS_Result>("SP_OPAC_GET_HOLDINGS", intItemIDParameter, intSerIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_ILL_DUE_ITEM_Result> SP_OPAC_GET_ILL_DUE_ITEM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_ILL_DUE_ITEM_Result>("SP_OPAC_GET_ILL_DUE_ITEM");
        }
    
        public virtual ObjectResult<SP_OPAC_GET_ILL_REC_ITEM_Result> SP_OPAC_GET_ILL_REC_ITEM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_ILL_REC_ITEM_Result>("SP_OPAC_GET_ILL_REC_ITEM");
        }
    
        public virtual ObjectResult<SP_OPAC_GET_ILLREQUEST_Result> SP_OPAC_GET_ILLREQUEST(string strCardNo)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_ILLREQUEST_Result>("SP_OPAC_GET_ILLREQUEST", strCardNoParameter);
        }
    
        public virtual int SP_OPAC_GET_INDEXSUBJECT(string strfield, string strIDs)
        {
            var strfieldParameter = strfield != null ?
                new ObjectParameter("strfield", strfield) :
                new ObjectParameter("strfield", typeof(string));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_INDEXSUBJECT", strfieldParameter, strIDsParameter);
        }
    
        public virtual int SP_OPAC_GET_INTERESTEDSUBJECT(string strfield, string strCardNo, string strPassword)
        {
            var strfieldParameter = strfield != null ?
                new ObjectParameter("strfield", strfield) :
                new ObjectParameter("strfield", typeof(string));
    
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_INTERESTEDSUBJECT", strfieldParameter, strCardNoParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OPAC_GET_ISSUEID(string strIssueNo, Nullable<int> intItemID)
        {
            var strIssueNoParameter = strIssueNo != null ?
                new ObjectParameter("strIssueNo", strIssueNo) :
                new ObjectParameter("strIssueNo", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OPAC_GET_ISSUEID", strIssueNoParameter, intItemIDParameter);
        }
    
        public virtual int SP_OPAC_GET_ITEM_BY_OAI(string strOAISet, string strFromDate, string strToDate)
        {
            var strOAISetParameter = strOAISet != null ?
                new ObjectParameter("strOAISet", strOAISet) :
                new ObjectParameter("strOAISet", typeof(string));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_ITEM_BY_OAI", strOAISetParameter, strFromDateParameter, strToDateParameter);
        }
    
        public virtual ObjectResult<string> SP_OPAC_GET_ITEM_TITLE(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_OPAC_GET_ITEM_TITLE", intItemIDParameter);
        }
    
        public virtual int SP_OPAC_GET_MAXID_BY_TOPNUM(Nullable<int> lngTopNum, string strParam, Nullable<int> intFree)
        {
            var lngTopNumParameter = lngTopNum.HasValue ?
                new ObjectParameter("lngTopNum", lngTopNum) :
                new ObjectParameter("lngTopNum", typeof(int));
    
            var strParamParameter = strParam != null ?
                new ObjectParameter("strParam", strParam) :
                new ObjectParameter("strParam", typeof(string));
    
            var intFreeParameter = intFree.HasValue ?
                new ObjectParameter("intFree", intFree) :
                new ObjectParameter("intFree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_MAXID_BY_TOPNUM", lngTopNumParameter, strParamParameter, intFreeParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_NEW_ITEMS_Result> SP_OPAC_GET_NEW_ITEMS(Nullable<bool> bitSECUREDOPAC, Nullable<int> intAccessLevel, Nullable<int> intTOP, Nullable<int> intNumberDay)
        {
            var bitSECUREDOPACParameter = bitSECUREDOPAC.HasValue ?
                new ObjectParameter("bitSECUREDOPAC", bitSECUREDOPAC) :
                new ObjectParameter("bitSECUREDOPAC", typeof(bool));
    
            var intAccessLevelParameter = intAccessLevel.HasValue ?
                new ObjectParameter("intAccessLevel", intAccessLevel) :
                new ObjectParameter("intAccessLevel", typeof(int));
    
            var intTOPParameter = intTOP.HasValue ?
                new ObjectParameter("intTOP", intTOP) :
                new ObjectParameter("intTOP", typeof(int));
    
            var intNumberDayParameter = intNumberDay.HasValue ?
                new ObjectParameter("intNumberDay", intNumberDay) :
                new ObjectParameter("intNumberDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_NEW_ITEMS_Result>("SP_OPAC_GET_NEW_ITEMS", bitSECUREDOPACParameter, intAccessLevelParameter, intTOPParameter, intNumberDayParameter);
        }
    
        public virtual int SP_OPAC_GET_NEW_REQUEST_GROUP_ID(ObjectParameter intNewRequestGroupID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_NEW_REQUEST_GROUP_ID", intNewRequestGroupID);
        }
    
        public virtual int SP_OPAC_GET_NUM_OF_REQGROUP(Nullable<int> intUserID, ObjectParameter intNumOfReq)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_NUM_OF_REQGROUP", intUserIDParameter, intNumOfReq);
        }
    
        public virtual int SP_OPAC_GET_OAI_ITEM_INFOR(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_OAI_ITEM_INFOR", strIDsParameter);
        }
    
        public virtual int SP_OPAC_GET_OAI_ITEM_LEADER(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_OAI_ITEM_LEADER", strIDsParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_OCCUPATION_Result> SP_OPAC_GET_OCCUPATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_OCCUPATION_Result>("SP_OPAC_GET_OCCUPATION");
        }
    
        public virtual ObjectResult<SP_OPAC_GET_ONHOLDING_Result> SP_OPAC_GET_ONHOLDING(string strCardNo)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_ONHOLDING_Result>("SP_OPAC_GET_ONHOLDING", strCardNoParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_RELATED_ANALYTICS_Result> SP_OPAC_GET_RELATED_ANALYTICS(Nullable<int> intItemID, Nullable<int> intSerID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intSerIDParameter = intSerID.HasValue ?
                new ObjectParameter("intSerID", intSerID) :
                new ObjectParameter("intSerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_RELATED_ANALYTICS_Result>("SP_OPAC_GET_RELATED_ANALYTICS", intItemIDParameter, intSerIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_RELATION_TITLES_Result> SP_OPAC_GET_RELATION_TITLES(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_RELATION_TITLES_Result>("SP_OPAC_GET_RELATION_TITLES", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_REQUEST_GROUP_Result> SP_OPAC_GET_REQUEST_GROUP(string strRequestGroupID, string strCreatedDate, Nullable<int> intUserID)
        {
            var strRequestGroupIDParameter = strRequestGroupID != null ?
                new ObjectParameter("strRequestGroupID", strRequestGroupID) :
                new ObjectParameter("strRequestGroupID", typeof(string));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_REQUEST_GROUP_Result>("SP_OPAC_GET_REQUEST_GROUP", strRequestGroupIDParameter, strCreatedDateParameter, intUserIDParameter);
        }
    
        public virtual int SP_OPAC_GET_RESERVATION(string strCardNo)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GET_RESERVATION", strCardNoParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_SER_HOLDINGS_Result> SP_OPAC_GET_SER_HOLDINGS(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_SER_HOLDINGS_Result>("SP_OPAC_GET_SER_HOLDINGS", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_GET_STAS_INFOR_Result> SP_OPAC_GET_STAS_INFOR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_STAS_INFOR_Result>("SP_OPAC_GET_STAS_INFOR");
        }
    
        public virtual ObjectResult<SP_OPAC_GET_TITLES_RELATION_Result> SP_OPAC_GET_TITLES_RELATION(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_GET_TITLES_RELATION_Result>("SP_OPAC_GET_TITLES_RELATION", intItemIDParameter);
        }
    
        public virtual int SP_OPAC_GETALLLOCATIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GETALLLOCATIONS");
        }
    
        public virtual int SP_OPAC_GETINTERESTITEM(string strfield, string strNumber, string strNow)
        {
            var strfieldParameter = strfield != null ?
                new ObjectParameter("strfield", strfield) :
                new ObjectParameter("strfield", typeof(string));
    
            var strNumberParameter = strNumber != null ?
                new ObjectParameter("strNumber", strNumber) :
                new ObjectParameter("strNumber", typeof(string));
    
            var strNowParameter = strNow != null ?
                new ObjectParameter("strNow", strNow) :
                new ObjectParameter("strNow", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GETINTERESTITEM", strfieldParameter, strNumberParameter, strNowParameter);
        }
    
        public virtual int SP_OPAC_GETOFFDAY(Nullable<int> intMonth, Nullable<int> intYear, Nullable<int> intLocationID)
        {
            var intMonthParameter = intMonth.HasValue ?
                new ObjectParameter("intMonth", intMonth) :
                new ObjectParameter("intMonth", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GETOFFDAY", intMonthParameter, intYearParameter, intLocationIDParameter);
        }
    
        public virtual int SP_OPAC_GETSCHEDULE(Nullable<int> intLocationID)
        {
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_GETSCHEDULE", intLocationIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_RELATED_TERMS_Result> SP_OPAC_RELATED_TERMS(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_RELATED_TERMS_Result>("SP_OPAC_RELATED_TERMS", intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_OPAC_RELATION_BOOKS_Result> SP_OPAC_RELATION_BOOKS(Nullable<int> intItemID, Nullable<int> intTop)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intTopParameter = intTop.HasValue ?
                new ObjectParameter("intTop", intTop) :
                new ObjectParameter("intTop", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OPAC_RELATION_BOOKS_Result>("SP_OPAC_RELATION_BOOKS", intItemIDParameter, intTopParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OPAC_SELECTSUBJBROWSEBYID(Nullable<int> intDicID, Nullable<int> intID)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OPAC_SELECTSUBJBROWSEBYID", intDicIDParameter, intIDParameter);
        }
    
        public virtual int SP_OPAC_SUBJBROWSE(Nullable<int> intDicID, string strWord)
        {
            var intDicIDParameter = intDicID.HasValue ?
                new ObjectParameter("intDicID", intDicID) :
                new ObjectParameter("intDicID", typeof(int));
    
            var strWordParameter = strWord != null ?
                new ObjectParameter("strWord", strWord) :
                new ObjectParameter("strWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_SUBJBROWSE", intDicIDParameter, strWordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OPAC_SUM_HOLDREQUEST(Nullable<int> intItemID, Nullable<byte> bytInturn)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var bytInturnParameter = bytInturn.HasValue ?
                new ObjectParameter("bytInturn", bytInturn) :
                new ObjectParameter("bytInturn", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OPAC_SUM_HOLDREQUEST", intItemIDParameter, bytInturnParameter);
        }
    
        public virtual int SP_OPAC_TOP_CHECKOUTED_ITEM(Nullable<int> intTop)
        {
            var intTopParameter = intTop.HasValue ?
                new ObjectParameter("intTop", intTop) :
                new ObjectParameter("intTop", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_TOP_CHECKOUTED_ITEM", intTopParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OPAC_TOTAL_HOLDREQUEST(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OPAC_TOTAL_HOLDREQUEST", intItemIDParameter);
        }
    
        public virtual int SP_OPAC_UPDATE_EDELIV_DEBT(Nullable<int> intUserID, Nullable<decimal> mnyAddDebt)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var mnyAddDebtParameter = mnyAddDebt.HasValue ?
                new ObjectParameter("mnyAddDebt", mnyAddDebt) :
                new ObjectParameter("mnyAddDebt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_UPDATE_EDELIV_DEBT", intUserIDParameter, mnyAddDebtParameter);
        }
    
        public virtual int SP_OPAC_UPDATE_EDOWNLOADTIME(Nullable<int> intFileID)
        {
            var intFileIDParameter = intFileID.HasValue ?
                new ObjectParameter("intFileID", intFileID) :
                new ObjectParameter("intFileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_UPDATE_EDOWNLOADTIME", intFileIDParameter);
        }
    
        public virtual int SP_OPAC_UPDATE_INTERESTEDSUBJECT(Nullable<int> intPatronID, string strInterestedSubjectField, string strInterestedSubjectValue)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var strInterestedSubjectFieldParameter = strInterestedSubjectField != null ?
                new ObjectParameter("strInterestedSubjectField", strInterestedSubjectField) :
                new ObjectParameter("strInterestedSubjectField", typeof(string));
    
            var strInterestedSubjectValueParameter = strInterestedSubjectValue != null ?
                new ObjectParameter("strInterestedSubjectValue", strInterestedSubjectValue) :
                new ObjectParameter("strInterestedSubjectValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_UPDATE_INTERESTEDSUBJECT", intPatronIDParameter, strInterestedSubjectFieldParameter, strInterestedSubjectValueParameter);
        }
    
        public virtual int SP_OPAC_UPDATE_PATRON(string strCardNo, Nullable<int> intEducationID, Nullable<int> intOccupationID, string strWorkPlace, string strAddress, string strTelephone, string strMobile, string strPassword, string strEmail)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            var intEducationIDParameter = intEducationID.HasValue ?
                new ObjectParameter("intEducationID", intEducationID) :
                new ObjectParameter("intEducationID", typeof(int));
    
            var intOccupationIDParameter = intOccupationID.HasValue ?
                new ObjectParameter("intOccupationID", intOccupationID) :
                new ObjectParameter("intOccupationID", typeof(int));
    
            var strWorkPlaceParameter = strWorkPlace != null ?
                new ObjectParameter("strWorkPlace", strWorkPlace) :
                new ObjectParameter("strWorkPlace", typeof(string));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strMobileParameter = strMobile != null ?
                new ObjectParameter("strMobile", strMobile) :
                new ObjectParameter("strMobile", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OPAC_UPDATE_PATRON", strCardNoParameter, intEducationIDParameter, intOccupationIDParameter, strWorkPlaceParameter, strAddressParameter, strTelephoneParameter, strMobileParameter, strPasswordParameter, strEmailParameter);
        }
    
        public virtual int SP_PAIDOVERDUE(string strPatronCode, Nullable<float> dblAmount, Nullable<float> dblAmount1, string strCreatedDate, string strCurrency, string strReason, Nullable<float> dblRate)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var dblAmountParameter = dblAmount.HasValue ?
                new ObjectParameter("dblAmount", dblAmount) :
                new ObjectParameter("dblAmount", typeof(float));
    
            var dblAmount1Parameter = dblAmount1.HasValue ?
                new ObjectParameter("dblAmount1", dblAmount1) :
                new ObjectParameter("dblAmount1", typeof(float));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            var dblRateParameter = dblRate.HasValue ?
                new ObjectParameter("dblRate", dblRate) :
                new ObjectParameter("dblRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAIDOVERDUE", strPatronCodeParameter, dblAmountParameter, dblAmount1Parameter, strCreatedDateParameter, strCurrencyParameter, strReasonParameter, dblRateParameter);
        }
    
        public virtual int SP_PAT_BATCH_UPDATE(string strSQL, ObjectParameter intRetval)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_BATCH_UPDATE", strSQLParameter, intRetval);
        }
    
        public virtual int SP_PAT_CHECK_IMPORT_PATRON(string strCode, string strDOB, string strIDCard)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strDOBParameter = strDOB != null ?
                new ObjectParameter("strDOB", strDOB) :
                new ObjectParameter("strDOB", typeof(string));
    
            var strIDCardParameter = strIDCard != null ?
                new ObjectParameter("strIDCard", strIDCard) :
                new ObjectParameter("strIDCard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CHECK_IMPORT_PATRON", strCodeParameter, strDOBParameter, strIDCardParameter);
        }
    
        public virtual int SP_PAT_CREATE_COLLEGE(string strCollege, ObjectParameter intOut)
        {
            var strCollegeParameter = strCollege != null ?
                new ObjectParameter("strCollege", strCollege) :
                new ObjectParameter("strCollege", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_COLLEGE", strCollegeParameter, intOut);
        }
    
        public virtual int SP_PAT_CREATE_EDUCATION(string strEducationLevel, ObjectParameter intOut)
        {
            var strEducationLevelParameter = strEducationLevel != null ?
                new ObjectParameter("strEducationLevel", strEducationLevel) :
                new ObjectParameter("strEducationLevel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_EDUCATION", strEducationLevelParameter, intOut);
        }
    
        public virtual int SP_PAT_CREATE_ETHNIC(string strEthnic, ObjectParameter intOut)
        {
            var strEthnicParameter = strEthnic != null ?
                new ObjectParameter("strEthnic", strEthnic) :
                new ObjectParameter("strEthnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_ETHNIC", strEthnicParameter, intOut);
        }
    
        public virtual int SP_PAT_CREATE_FACULTY(Nullable<int> intCollegeID, string strFaculty, ObjectParameter intOut)
        {
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            var strFacultyParameter = strFaculty != null ?
                new ObjectParameter("strFaculty", strFaculty) :
                new ObjectParameter("strFaculty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_FACULTY", intCollegeIDParameter, strFacultyParameter, intOut);
        }
    
        public virtual int SP_PAT_CREATE_OCCUPATION(string strOccupation, ObjectParameter intOut)
        {
            var strOccupationParameter = strOccupation != null ?
                new ObjectParameter("strOccupation", strOccupation) :
                new ObjectParameter("strOccupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_OCCUPATION", strOccupationParameter, intOut);
        }
    
        public virtual int SP_PAT_CREATE_OTHERADDRESS(Nullable<int> intPatronID, string strAddress, Nullable<int> intProvinceID, string strCity, Nullable<int> intCountryID, string strZip, Nullable<int> intisActive)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var intProvinceIDParameter = intProvinceID.HasValue ?
                new ObjectParameter("intProvinceID", intProvinceID) :
                new ObjectParameter("intProvinceID", typeof(int));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var intisActiveParameter = intisActive.HasValue ?
                new ObjectParameter("intisActive", intisActive) :
                new ObjectParameter("intisActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_OTHERADDRESS", intPatronIDParameter, strAddressParameter, intProvinceIDParameter, strCityParameter, intCountryIDParameter, strZipParameter, intisActiveParameter);
        }
    
        public virtual int SP_PAT_CREATE_PATRON(string strCode, string strValidDate, string strExpiredDate, string strLastIssuedDate, string strLastName, string strFirstName, string strMiddleName, Nullable<bool> blnSex, string strDOB, Nullable<int> intEthnicID, Nullable<int> intEducationID, Nullable<int> intOccupationID, string strWorkPlace, string strTelephone, string strMobile, string strEmail, string strPortrait, Nullable<int> intPatronGroupID, string strNote, Nullable<int> intIsQue, string strIDCard, ObjectParameter intRetval)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strExpiredDateParameter = strExpiredDate != null ?
                new ObjectParameter("strExpiredDate", strExpiredDate) :
                new ObjectParameter("strExpiredDate", typeof(string));
    
            var strLastIssuedDateParameter = strLastIssuedDate != null ?
                new ObjectParameter("strLastIssuedDate", strLastIssuedDate) :
                new ObjectParameter("strLastIssuedDate", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strMiddleNameParameter = strMiddleName != null ?
                new ObjectParameter("strMiddleName", strMiddleName) :
                new ObjectParameter("strMiddleName", typeof(string));
    
            var blnSexParameter = blnSex.HasValue ?
                new ObjectParameter("blnSex", blnSex) :
                new ObjectParameter("blnSex", typeof(bool));
    
            var strDOBParameter = strDOB != null ?
                new ObjectParameter("strDOB", strDOB) :
                new ObjectParameter("strDOB", typeof(string));
    
            var intEthnicIDParameter = intEthnicID.HasValue ?
                new ObjectParameter("intEthnicID", intEthnicID) :
                new ObjectParameter("intEthnicID", typeof(int));
    
            var intEducationIDParameter = intEducationID.HasValue ?
                new ObjectParameter("intEducationID", intEducationID) :
                new ObjectParameter("intEducationID", typeof(int));
    
            var intOccupationIDParameter = intOccupationID.HasValue ?
                new ObjectParameter("intOccupationID", intOccupationID) :
                new ObjectParameter("intOccupationID", typeof(int));
    
            var strWorkPlaceParameter = strWorkPlace != null ?
                new ObjectParameter("strWorkPlace", strWorkPlace) :
                new ObjectParameter("strWorkPlace", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strMobileParameter = strMobile != null ?
                new ObjectParameter("strMobile", strMobile) :
                new ObjectParameter("strMobile", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strPortraitParameter = strPortrait != null ?
                new ObjectParameter("strPortrait", strPortrait) :
                new ObjectParameter("strPortrait", typeof(string));
    
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intIsQueParameter = intIsQue.HasValue ?
                new ObjectParameter("intIsQue", intIsQue) :
                new ObjectParameter("intIsQue", typeof(int));
    
            var strIDCardParameter = strIDCard != null ?
                new ObjectParameter("strIDCard", strIDCard) :
                new ObjectParameter("strIDCard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_PATRON", strCodeParameter, strValidDateParameter, strExpiredDateParameter, strLastIssuedDateParameter, strLastNameParameter, strFirstNameParameter, strMiddleNameParameter, blnSexParameter, strDOBParameter, intEthnicIDParameter, intEducationIDParameter, intOccupationIDParameter, strWorkPlaceParameter, strTelephoneParameter, strMobileParameter, strEmailParameter, strPortraitParameter, intPatronGroupIDParameter, strNoteParameter, intIsQueParameter, strIDCardParameter, intRetval);
        }
    
        public virtual int SP_PAT_CREATE_PATRON_UNIV(Nullable<int> intPatronID, Nullable<int> intFacultyID, Nullable<int> intCollegeID, string strGrade, string strClass)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var intFacultyIDParameter = intFacultyID.HasValue ?
                new ObjectParameter("intFacultyID", intFacultyID) :
                new ObjectParameter("intFacultyID", typeof(int));
    
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            var strGradeParameter = strGrade != null ?
                new ObjectParameter("strGrade", strGrade) :
                new ObjectParameter("strGrade", typeof(string));
    
            var strClassParameter = strClass != null ?
                new ObjectParameter("strClass", strClass) :
                new ObjectParameter("strClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_PATRON_UNIV", intPatronIDParameter, intFacultyIDParameter, intCollegeIDParameter, strGradeParameter, strClassParameter);
        }
    
        public virtual int SP_PAT_CREATE_PATRONGROUP(string strName, Nullable<int> intInLibraryQuota, Nullable<int> intLoanQuota, Nullable<int> intHoldQuota, Nullable<int> intHoldTurnTimeOut, Nullable<int> intPriority, Nullable<int> intILLQuota, Nullable<int> intAccessLevel, string strStoreIDs, ObjectParameter intOut)
        {
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var intInLibraryQuotaParameter = intInLibraryQuota.HasValue ?
                new ObjectParameter("intInLibraryQuota", intInLibraryQuota) :
                new ObjectParameter("intInLibraryQuota", typeof(int));
    
            var intLoanQuotaParameter = intLoanQuota.HasValue ?
                new ObjectParameter("intLoanQuota", intLoanQuota) :
                new ObjectParameter("intLoanQuota", typeof(int));
    
            var intHoldQuotaParameter = intHoldQuota.HasValue ?
                new ObjectParameter("intHoldQuota", intHoldQuota) :
                new ObjectParameter("intHoldQuota", typeof(int));
    
            var intHoldTurnTimeOutParameter = intHoldTurnTimeOut.HasValue ?
                new ObjectParameter("intHoldTurnTimeOut", intHoldTurnTimeOut) :
                new ObjectParameter("intHoldTurnTimeOut", typeof(int));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(int));
    
            var intILLQuotaParameter = intILLQuota.HasValue ?
                new ObjectParameter("intILLQuota", intILLQuota) :
                new ObjectParameter("intILLQuota", typeof(int));
    
            var intAccessLevelParameter = intAccessLevel.HasValue ?
                new ObjectParameter("intAccessLevel", intAccessLevel) :
                new ObjectParameter("intAccessLevel", typeof(int));
    
            var strStoreIDsParameter = strStoreIDs != null ?
                new ObjectParameter("strStoreIDs", strStoreIDs) :
                new ObjectParameter("strStoreIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_PATRONGROUP", strNameParameter, intInLibraryQuotaParameter, intLoanQuotaParameter, intHoldQuotaParameter, intHoldTurnTimeOutParameter, intPriorityParameter, intILLQuotaParameter, intAccessLevelParameter, strStoreIDsParameter, intOut);
        }
    
        public virtual int SP_PAT_CREATE_PROVINCE(string strProvince, ObjectParameter intOut)
        {
            var strProvinceParameter = strProvince != null ?
                new ObjectParameter("strProvince", strProvince) :
                new ObjectParameter("strProvince", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_CREATE_PROVINCE", strProvinceParameter, intOut);
        }
    
        public virtual int SP_PAT_DELETE_EDUCATION(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_DELETE_EDUCATION", intIDParameter);
        }
    
        public virtual int SP_PAT_DELETE_PATRON(Nullable<int> intPatronID, ObjectParameter intRetval)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_DELETE_PATRON", intPatronIDParameter, intRetval);
        }
    
        public virtual int SP_PAT_DELETE_PATRONGROUP(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_DELETE_PATRONGROUP", intIDParameter);
        }
    
        public virtual ObjectResult<SP_PAT_GET_COLLEGE_Result> SP_PAT_GET_COLLEGE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_COLLEGE_Result>("SP_PAT_GET_COLLEGE");
        }
    
        public virtual ObjectResult<SP_PAT_GET_EDUCATION_Result> SP_PAT_GET_EDUCATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_EDUCATION_Result>("SP_PAT_GET_EDUCATION");
        }
    
        public virtual ObjectResult<SP_PAT_GET_ETHNIC_Result> SP_PAT_GET_ETHNIC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_ETHNIC_Result>("SP_PAT_GET_ETHNIC");
        }
    
        public virtual int SP_PAT_GET_FACULTY(Nullable<int> intCollegeID, Nullable<int> intFacultyID)
        {
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            var intFacultyIDParameter = intFacultyID.HasValue ?
                new ObjectParameter("intFacultyID", intFacultyID) :
                new ObjectParameter("intFacultyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_GET_FACULTY", intCollegeIDParameter, intFacultyIDParameter);
        }
    
        public virtual ObjectResult<SP_PAT_GET_LOCATION_Result> SP_PAT_GET_LOCATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_LOCATION_Result>("SP_PAT_GET_LOCATION");
        }
    
        public virtual ObjectResult<SP_PAT_GET_LOCATION_OF_GROUP_Result> SP_PAT_GET_LOCATION_OF_GROUP(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_LOCATION_OF_GROUP_Result>("SP_PAT_GET_LOCATION_OF_GROUP", intIDParameter);
        }
    
        public virtual ObjectResult<SP_PAT_GET_NOTPRINTED_CARD_Result> SP_PAT_GET_NOTPRINTED_CARD(string strID)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_NOTPRINTED_CARD_Result>("SP_PAT_GET_NOTPRINTED_CARD", strIDParameter);
        }
    
        public virtual ObjectResult<SP_PAT_GET_OCCUPATION_Result> SP_PAT_GET_OCCUPATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_OCCUPATION_Result>("SP_PAT_GET_OCCUPATION");
        }
    
        public virtual ObjectResult<SP_PAT_GET_OTHERADDRESS_Result> SP_PAT_GET_OTHERADDRESS(Nullable<int> intPatronID)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_OTHERADDRESS_Result>("SP_PAT_GET_OTHERADDRESS", intPatronIDParameter);
        }
    
        public virtual int SP_PAT_GET_PATRON(string strPatronIDs, string strFields, string strOrder)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            var strFieldsParameter = strFields != null ?
                new ObjectParameter("strFields", strFields) :
                new ObjectParameter("strFields", typeof(string));
    
            var strOrderParameter = strOrder != null ?
                new ObjectParameter("strOrder", strOrder) :
                new ObjectParameter("strOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_GET_PATRON", strPatronIDsParameter, strFieldsParameter, strOrderParameter);
        }
    
        public virtual ObjectResult<SP_PAT_GET_PATRONGROUP_Result> SP_PAT_GET_PATRONGROUP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_PATRONGROUP_Result>("SP_PAT_GET_PATRONGROUP");
        }
    
        public virtual int SP_PAT_GET_PRINTED_CARD(string strIDs, Nullable<int> selectTop)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            var selectTopParameter = selectTop.HasValue ?
                new ObjectParameter("selectTop", selectTop) :
                new ObjectParameter("selectTop", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_GET_PRINTED_CARD", strIDsParameter, selectTopParameter);
        }
    
        public virtual ObjectResult<SP_PAT_GET_PROVINCE_Result> SP_PAT_GET_PROVINCE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PAT_GET_PROVINCE_Result>("SP_PAT_GET_PROVINCE");
        }
    
        public virtual int SP_PAT_MERGER_COLLEGE(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_MERGER_COLLEGE", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_PAT_MERGER_EDUCATION(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_MERGER_EDUCATION", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_PAT_MERGER_ETHNIC(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_MERGER_ETHNIC", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_PAT_MERGER_FACULTY(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_MERGER_FACULTY", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_PAT_MERGER_OCCUPATION(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_MERGER_OCCUPATION", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_PAT_MERGER_PROVINCE(Nullable<int> intID, string strIDs)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_MERGER_PROVINCE", intIDParameter, strIDsParameter);
        }
    
        public virtual int SP_PAT_PRINTED_CARD_INSERT(string strPatronIDs, Nullable<int> intTemplateID, Nullable<int> intIssueLibraryID)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var intIssueLibraryIDParameter = intIssueLibraryID.HasValue ?
                new ObjectParameter("intIssueLibraryID", intIssueLibraryID) :
                new ObjectParameter("intIssueLibraryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_PRINTED_CARD_INSERT", strPatronIDsParameter, intTemplateIDParameter, intIssueLibraryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_PAT_SEARCH_PATRON_HCARD(string strCode)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_PAT_SEARCH_PATRON_HCARD", strCodeParameter);
        }
    
        public virtual int SP_PAT_UPDATE_COLLEGE(Nullable<int> intID, string strCollege, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strCollegeParameter = strCollege != null ?
                new ObjectParameter("strCollege", strCollege) :
                new ObjectParameter("strCollege", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_COLLEGE", intIDParameter, strCollegeParameter, intOut);
        }
    
        public virtual int SP_PAT_UPDATE_EDUCATION(Nullable<int> intID, string strEducationLevel, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strEducationLevelParameter = strEducationLevel != null ?
                new ObjectParameter("strEducationLevel", strEducationLevel) :
                new ObjectParameter("strEducationLevel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_EDUCATION", intIDParameter, strEducationLevelParameter, intOut);
        }
    
        public virtual int SP_PAT_UPDATE_ETHNIC(Nullable<int> intID, string strEthnic, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strEthnicParameter = strEthnic != null ?
                new ObjectParameter("strEthnic", strEthnic) :
                new ObjectParameter("strEthnic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_ETHNIC", intIDParameter, strEthnicParameter, intOut);
        }
    
        public virtual int SP_PAT_UPDATE_FACULTY(Nullable<int> intID, Nullable<int> intCollegeID, string strFaculty, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            var strFacultyParameter = strFaculty != null ?
                new ObjectParameter("strFaculty", strFaculty) :
                new ObjectParameter("strFaculty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_FACULTY", intIDParameter, intCollegeIDParameter, strFacultyParameter, intOut);
        }
    
        public virtual int SP_PAT_UPDATE_OCCUPATION(Nullable<int> intID, string strOccupation, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strOccupationParameter = strOccupation != null ?
                new ObjectParameter("strOccupation", strOccupation) :
                new ObjectParameter("strOccupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_OCCUPATION", intIDParameter, strOccupationParameter, intOut);
        }
    
        public virtual int SP_PAT_UPDATE_OTHERADDRESS(Nullable<int> intID, Nullable<int> intPatronID, string strAddress, Nullable<int> intProvinceID, string strCity, Nullable<int> intCountryID, string strZip, Nullable<int> intisActive)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var intProvinceIDParameter = intProvinceID.HasValue ?
                new ObjectParameter("intProvinceID", intProvinceID) :
                new ObjectParameter("intProvinceID", typeof(int));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intCountryIDParameter = intCountryID.HasValue ?
                new ObjectParameter("intCountryID", intCountryID) :
                new ObjectParameter("intCountryID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var intisActiveParameter = intisActive.HasValue ?
                new ObjectParameter("intisActive", intisActive) :
                new ObjectParameter("intisActive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_OTHERADDRESS", intIDParameter, intPatronIDParameter, strAddressParameter, intProvinceIDParameter, strCityParameter, intCountryIDParameter, strZipParameter, intisActiveParameter);
        }
    
        public virtual int SP_PAT_UPDATE_PATRON(Nullable<int> intPatronID, string strCode, string strValidDate, string strExpiredDate, string strLastIssuedDate, string strLastName, string strFirstName, string strMiddleName, Nullable<bool> blnSex, string strDOB, Nullable<int> intEthnicID, Nullable<int> intEducationID, Nullable<int> intOccupationID, string strWorkPlace, string strTelephone, string strMobile, string strEmail, string strPortrait, Nullable<int> intPatronGroupID, string strNote, string strIDCard, ObjectParameter intRetval)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strExpiredDateParameter = strExpiredDate != null ?
                new ObjectParameter("strExpiredDate", strExpiredDate) :
                new ObjectParameter("strExpiredDate", typeof(string));
    
            var strLastIssuedDateParameter = strLastIssuedDate != null ?
                new ObjectParameter("strLastIssuedDate", strLastIssuedDate) :
                new ObjectParameter("strLastIssuedDate", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strMiddleNameParameter = strMiddleName != null ?
                new ObjectParameter("strMiddleName", strMiddleName) :
                new ObjectParameter("strMiddleName", typeof(string));
    
            var blnSexParameter = blnSex.HasValue ?
                new ObjectParameter("blnSex", blnSex) :
                new ObjectParameter("blnSex", typeof(bool));
    
            var strDOBParameter = strDOB != null ?
                new ObjectParameter("strDOB", strDOB) :
                new ObjectParameter("strDOB", typeof(string));
    
            var intEthnicIDParameter = intEthnicID.HasValue ?
                new ObjectParameter("intEthnicID", intEthnicID) :
                new ObjectParameter("intEthnicID", typeof(int));
    
            var intEducationIDParameter = intEducationID.HasValue ?
                new ObjectParameter("intEducationID", intEducationID) :
                new ObjectParameter("intEducationID", typeof(int));
    
            var intOccupationIDParameter = intOccupationID.HasValue ?
                new ObjectParameter("intOccupationID", intOccupationID) :
                new ObjectParameter("intOccupationID", typeof(int));
    
            var strWorkPlaceParameter = strWorkPlace != null ?
                new ObjectParameter("strWorkPlace", strWorkPlace) :
                new ObjectParameter("strWorkPlace", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strMobileParameter = strMobile != null ?
                new ObjectParameter("strMobile", strMobile) :
                new ObjectParameter("strMobile", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strPortraitParameter = strPortrait != null ?
                new ObjectParameter("strPortrait", strPortrait) :
                new ObjectParameter("strPortrait", typeof(string));
    
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strIDCardParameter = strIDCard != null ?
                new ObjectParameter("strIDCard", strIDCard) :
                new ObjectParameter("strIDCard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_PATRON", intPatronIDParameter, strCodeParameter, strValidDateParameter, strExpiredDateParameter, strLastIssuedDateParameter, strLastNameParameter, strFirstNameParameter, strMiddleNameParameter, blnSexParameter, strDOBParameter, intEthnicIDParameter, intEducationIDParameter, intOccupationIDParameter, strWorkPlaceParameter, strTelephoneParameter, strMobileParameter, strEmailParameter, strPortraitParameter, intPatronGroupIDParameter, strNoteParameter, strIDCardParameter, intRetval);
        }
    
        public virtual int SP_PAT_UPDATE_PATRON_UNIV(Nullable<int> intPatronID, Nullable<int> intFacultyID, Nullable<int> intCollegeID, string strGrade, string strClass)
        {
            var intPatronIDParameter = intPatronID.HasValue ?
                new ObjectParameter("intPatronID", intPatronID) :
                new ObjectParameter("intPatronID", typeof(int));
    
            var intFacultyIDParameter = intFacultyID.HasValue ?
                new ObjectParameter("intFacultyID", intFacultyID) :
                new ObjectParameter("intFacultyID", typeof(int));
    
            var intCollegeIDParameter = intCollegeID.HasValue ?
                new ObjectParameter("intCollegeID", intCollegeID) :
                new ObjectParameter("intCollegeID", typeof(int));
    
            var strGradeParameter = strGrade != null ?
                new ObjectParameter("strGrade", strGrade) :
                new ObjectParameter("strGrade", typeof(string));
    
            var strClassParameter = strClass != null ?
                new ObjectParameter("strClass", strClass) :
                new ObjectParameter("strClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_PATRON_UNIV", intPatronIDParameter, intFacultyIDParameter, intCollegeIDParameter, strGradeParameter, strClassParameter);
        }
    
        public virtual int SP_PAT_UPDATE_PATRONGROUP(Nullable<int> intID, string strName, Nullable<int> intInLibraryQuota, Nullable<int> intLoanQuota, Nullable<int> intHoldQuota, Nullable<int> intHoldTurnTimeOut, Nullable<int> intPriority, Nullable<int> intILLQuota, Nullable<int> intAccessLevel, string strStoreIDs, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var intInLibraryQuotaParameter = intInLibraryQuota.HasValue ?
                new ObjectParameter("intInLibraryQuota", intInLibraryQuota) :
                new ObjectParameter("intInLibraryQuota", typeof(int));
    
            var intLoanQuotaParameter = intLoanQuota.HasValue ?
                new ObjectParameter("intLoanQuota", intLoanQuota) :
                new ObjectParameter("intLoanQuota", typeof(int));
    
            var intHoldQuotaParameter = intHoldQuota.HasValue ?
                new ObjectParameter("intHoldQuota", intHoldQuota) :
                new ObjectParameter("intHoldQuota", typeof(int));
    
            var intHoldTurnTimeOutParameter = intHoldTurnTimeOut.HasValue ?
                new ObjectParameter("intHoldTurnTimeOut", intHoldTurnTimeOut) :
                new ObjectParameter("intHoldTurnTimeOut", typeof(int));
    
            var intPriorityParameter = intPriority.HasValue ?
                new ObjectParameter("intPriority", intPriority) :
                new ObjectParameter("intPriority", typeof(int));
    
            var intILLQuotaParameter = intILLQuota.HasValue ?
                new ObjectParameter("intILLQuota", intILLQuota) :
                new ObjectParameter("intILLQuota", typeof(int));
    
            var intAccessLevelParameter = intAccessLevel.HasValue ?
                new ObjectParameter("intAccessLevel", intAccessLevel) :
                new ObjectParameter("intAccessLevel", typeof(int));
    
            var strStoreIDsParameter = strStoreIDs != null ?
                new ObjectParameter("strStoreIDs", strStoreIDs) :
                new ObjectParameter("strStoreIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_PATRONGROUP", intIDParameter, strNameParameter, intInLibraryQuotaParameter, intLoanQuotaParameter, intHoldQuotaParameter, intHoldTurnTimeOutParameter, intPriorityParameter, intILLQuotaParameter, intAccessLevelParameter, strStoreIDsParameter, intOut);
        }
    
        public virtual int SP_PAT_UPDATE_PROVINCE(Nullable<int> intID, string strProvince, ObjectParameter intOut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strProvinceParameter = strProvince != null ?
                new ObjectParameter("strProvince", strProvince) :
                new ObjectParameter("strProvince", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PAT_UPDATE_PROVINCE", intIDParameter, strProvinceParameter, intOut);
        }
    
        public virtual int SP_PATRON_BATCH_DELETE(string strPatronIDs)
        {
            var strPatronIDsParameter = strPatronIDs != null ?
                new ObjectParameter("strPatronIDs", strPatronIDs) :
                new ObjectParameter("strPatronIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PATRON_BATCH_DELETE", strPatronIDsParameter);
        }
    
        public virtual int SP_PATRON_BATCH_EXTEND(string strSQL)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PATRON_BATCH_EXTEND", strSQLParameter);
        }
    
        public virtual int SP_PATRON_BATCH_UPDATE(string strSQL, string strCode, Nullable<int> intNumOfPatron, ObjectParameter intRetval)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var intNumOfPatronParameter = intNumOfPatron.HasValue ?
                new ObjectParameter("intNumOfPatron", intNumOfPatron) :
                new ObjectParameter("intNumOfPatron", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PATRON_BATCH_UPDATE", strSQLParameter, strCodeParameter, intNumOfPatronParameter, intRetval);
        }
    
        public virtual ObjectResult<SP_PATRON_GROUP_STATISTIC_Result> SP_PATRON_GROUP_STATISTIC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PATRON_GROUP_STATISTIC_Result>("SP_PATRON_GROUP_STATISTIC");
        }
    
        public virtual int SP_PATRON_IEXPORT(Nullable<int> intFromID, Nullable<int> intToID, ObjectParameter strSQL)
        {
            var intFromIDParameter = intFromID.HasValue ?
                new ObjectParameter("intFromID", intFromID) :
                new ObjectParameter("intFromID", typeof(int));
    
            var intToIDParameter = intToID.HasValue ?
                new ObjectParameter("intToID", intToID) :
                new ObjectParameter("intToID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PATRON_IEXPORT", intFromIDParameter, intToIDParameter, strSQL);
        }
    
        public virtual int SP_PATRON_INSERT(string strPatronCode, string strValidDate, string strExpiredDate, string strFirstName, string strLastName, string strMiddleName, Nullable<int> intPatronGroupID, string strWorkplace, string strTelephone, string strEmail)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strValidDateParameter = strValidDate != null ?
                new ObjectParameter("strValidDate", strValidDate) :
                new ObjectParameter("strValidDate", typeof(string));
    
            var strExpiredDateParameter = strExpiredDate != null ?
                new ObjectParameter("strExpiredDate", strExpiredDate) :
                new ObjectParameter("strExpiredDate", typeof(string));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var strMiddleNameParameter = strMiddleName != null ?
                new ObjectParameter("strMiddleName", strMiddleName) :
                new ObjectParameter("strMiddleName", typeof(string));
    
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            var strWorkplaceParameter = strWorkplace != null ?
                new ObjectParameter("strWorkplace", strWorkplace) :
                new ObjectParameter("strWorkplace", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PATRON_INSERT", strPatronCodeParameter, strValidDateParameter, strExpiredDateParameter, strFirstNameParameter, strLastNameParameter, strMiddleNameParameter, intPatronGroupIDParameter, strWorkplaceParameter, strTelephoneParameter, strEmailParameter);
        }
    
        public virtual ObjectResult<SP_PATRON_SELECT_ALLDIC_Result> SP_PATRON_SELECT_ALLDIC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PATRON_SELECT_ALLDIC_Result>("SP_PATRON_SELECT_ALLDIC");
        }
    
        public virtual int SP_PATRON_STATIC_MONTHS(string strStatYear)
        {
            var strStatYearParameter = strStatYear != null ?
                new ObjectParameter("strStatYear", strStatYear) :
                new ObjectParameter("strStatYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PATRON_STATIC_MONTHS", strStatYearParameter);
        }
    
        public virtual int SP_PRINT_FICHE_SEL(Nullable<int> intItemType, string strCopyNumFrom, string strCopyNumTo, Nullable<int> intMultiFiche, Nullable<int> intItemIDFrom, Nullable<int> intItemIDTo, Nullable<int> intLibID, Nullable<int> intLocID, Nullable<int> intNewItemOnly, ObjectParameter strOUT)
        {
            var intItemTypeParameter = intItemType.HasValue ?
                new ObjectParameter("intItemType", intItemType) :
                new ObjectParameter("intItemType", typeof(int));
    
            var strCopyNumFromParameter = strCopyNumFrom != null ?
                new ObjectParameter("strCopyNumFrom", strCopyNumFrom) :
                new ObjectParameter("strCopyNumFrom", typeof(string));
    
            var strCopyNumToParameter = strCopyNumTo != null ?
                new ObjectParameter("strCopyNumTo", strCopyNumTo) :
                new ObjectParameter("strCopyNumTo", typeof(string));
    
            var intMultiFicheParameter = intMultiFiche.HasValue ?
                new ObjectParameter("intMultiFiche", intMultiFiche) :
                new ObjectParameter("intMultiFiche", typeof(int));
    
            var intItemIDFromParameter = intItemIDFrom.HasValue ?
                new ObjectParameter("intItemIDFrom", intItemIDFrom) :
                new ObjectParameter("intItemIDFrom", typeof(int));
    
            var intItemIDToParameter = intItemIDTo.HasValue ?
                new ObjectParameter("intItemIDTo", intItemIDTo) :
                new ObjectParameter("intItemIDTo", typeof(int));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var intNewItemOnlyParameter = intNewItemOnly.HasValue ?
                new ObjectParameter("intNewItemOnly", intNewItemOnly) :
                new ObjectParameter("intNewItemOnly", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRINT_FICHE_SEL", intItemTypeParameter, strCopyNumFromParameter, strCopyNumToParameter, intMultiFicheParameter, intItemIDFromParameter, intItemIDToParameter, intLibIDParameter, intLocIDParameter, intNewItemOnlyParameter, strOUT);
        }
    
        public virtual int SP_PROCESS_HOLDING(string strCopyIDs, Nullable<int> intLibID, Nullable<int> intLocID, string strShelf, Nullable<int> intMode, Nullable<int> intNew)
        {
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            var intLibIDParameter = intLibID.HasValue ?
                new ObjectParameter("intLibID", intLibID) :
                new ObjectParameter("intLibID", typeof(int));
    
            var intLocIDParameter = intLocID.HasValue ?
                new ObjectParameter("intLocID", intLocID) :
                new ObjectParameter("intLocID", typeof(int));
    
            var strShelfParameter = strShelf != null ?
                new ObjectParameter("strShelf", strShelf) :
                new ObjectParameter("strShelf", typeof(string));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var intNewParameter = intNew.HasValue ?
                new ObjectParameter("intNew", intNew) :
                new ObjectParameter("intNew", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PROCESS_HOLDING", strCopyIDsParameter, intLibIDParameter, intLocIDParameter, strShelfParameter, intModeParameter, intNewParameter);
        }
    
        public virtual int SP_QUERY_HOLDING(Nullable<int> intLoanTypeID, Nullable<int> intUserID, string strQueryIn)
        {
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strQueryInParameter = strQueryIn != null ?
                new ObjectParameter("strQueryIn", strQueryIn) :
                new ObjectParameter("strQueryIn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_QUERY_HOLDING", intLoanTypeIDParameter, intUserIDParameter, strQueryInParameter);
        }
    
        public virtual int SP_READ_SOURCE_DIC_BYVAL(string strValue, string strFieldName, string strTableName)
        {
            var strValueParameter = strValue != null ?
                new ObjectParameter("strValue", strValue) :
                new ObjectParameter("strValue", typeof(string));
    
            var strFieldNameParameter = strFieldName != null ?
                new ObjectParameter("strFieldName", strFieldName) :
                new ObjectParameter("strFieldName", typeof(string));
    
            var strTableNameParameter = strTableName != null ?
                new ObjectParameter("strTableName", strTableName) :
                new ObjectParameter("strTableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_READ_SOURCE_DIC_BYVAL", strValueParameter, strFieldNameParameter, strTableNameParameter);
        }
    
        public virtual int SP_READ_SOURCE_DICTIONAY(string strLabelField, ObjectParameter strFieldName, ObjectParameter strTableName)
        {
            var strLabelFieldParameter = strLabelField != null ?
                new ObjectParameter("strLabelField", strLabelField) :
                new ObjectParameter("strLabelField", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_READ_SOURCE_DICTIONAY", strLabelFieldParameter, strFieldName, strTableName);
        }
    
        public virtual int SP_RECALLCOPIES(Nullable<int> lngTransactionID)
        {
            var lngTransactionIDParameter = lngTransactionID.HasValue ?
                new ObjectParameter("lngTransactionID", lngTransactionID) :
                new ObjectParameter("lngTransactionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECALLCOPIES", lngTransactionIDParameter);
        }
    
        public virtual int SP_RECEIVE_COPIES(Nullable<int> lngIssueID, Nullable<int> intLocationID, string strReceivedDate, string strNote, Nullable<int> intReceivedCopies, ObjectParameter intOutValue)
        {
            var lngIssueIDParameter = lngIssueID.HasValue ?
                new ObjectParameter("lngIssueID", lngIssueID) :
                new ObjectParameter("lngIssueID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strReceivedDateParameter = strReceivedDate != null ?
                new ObjectParameter("strReceivedDate", strReceivedDate) :
                new ObjectParameter("strReceivedDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var intReceivedCopiesParameter = intReceivedCopies.HasValue ?
                new ObjectParameter("intReceivedCopies", intReceivedCopies) :
                new ObjectParameter("intReceivedCopies", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RECEIVE_COPIES", lngIssueIDParameter, intLocationIDParameter, strReceivedDateParameter, strNoteParameter, intReceivedCopiesParameter, intOutValue);
        }
    
        public virtual int SP_REGISTER_ISSUE(Nullable<int> lngItemID, Nullable<int> intStartIssueNo, Nullable<int> intStartOvIssueNo, string strStartDate, string strEndDate, ObjectParameter intOutValue)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intStartIssueNoParameter = intStartIssueNo.HasValue ?
                new ObjectParameter("intStartIssueNo", intStartIssueNo) :
                new ObjectParameter("intStartIssueNo", typeof(int));
    
            var intStartOvIssueNoParameter = intStartOvIssueNo.HasValue ?
                new ObjectParameter("intStartOvIssueNo", intStartOvIssueNo) :
                new ObjectParameter("intStartOvIssueNo", typeof(int));
    
            var strStartDateParameter = strStartDate != null ?
                new ObjectParameter("strStartDate", strStartDate) :
                new ObjectParameter("strStartDate", typeof(string));
    
            var strEndDateParameter = strEndDate != null ?
                new ObjectParameter("strEndDate", strEndDate) :
                new ObjectParameter("strEndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTER_ISSUE", lngItemIDParameter, intStartIssueNoParameter, intStartOvIssueNoParameter, strStartDateParameter, strEndDateParameter, intOutValue);
        }
    
        public virtual int SP_REMOVE_ISSUE(Nullable<int> lngIssueID, ObjectParameter intOutValue)
        {
            var lngIssueIDParameter = lngIssueID.HasValue ?
                new ObjectParameter("lngIssueID", lngIssueID) :
                new ObjectParameter("lngIssueID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REMOVE_ISSUE", lngIssueIDParameter, intOutValue);
        }
    
        public virtual int SP_REMOVE_ROUTING(Nullable<int> lngItemID, Nullable<int> intLocationID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REMOVE_ROUTING", lngItemIDParameter, intLocationIDParameter);
        }
    
        public virtual int SP_REMOVE_ROUTING_RECORD(Nullable<int> intRecordID)
        {
            var intRecordIDParameter = intRecordID.HasValue ?
                new ObjectParameter("intRecordID", intRecordID) :
                new ObjectParameter("intRecordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REMOVE_ROUTING_RECORD", intRecordIDParameter);
        }
    
        public virtual int SP_RENAME_DICTIONARY(Nullable<int> intID, string strNewName, Nullable<int> intNewForPatron, Nullable<int> intNewForStaff, Nullable<int> intNewFieldSize, ObjectParameter intRET)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var strNewNameParameter = strNewName != null ?
                new ObjectParameter("strNewName", strNewName) :
                new ObjectParameter("strNewName", typeof(string));
    
            var intNewForPatronParameter = intNewForPatron.HasValue ?
                new ObjectParameter("intNewForPatron", intNewForPatron) :
                new ObjectParameter("intNewForPatron", typeof(int));
    
            var intNewForStaffParameter = intNewForStaff.HasValue ?
                new ObjectParameter("intNewForStaff", intNewForStaff) :
                new ObjectParameter("intNewForStaff", typeof(int));
    
            var intNewFieldSizeParameter = intNewFieldSize.HasValue ?
                new ObjectParameter("intNewFieldSize", intNewFieldSize) :
                new ObjectParameter("intNewFieldSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RENAME_DICTIONARY", intIDParameter, strNewNameParameter, intNewForPatronParameter, intNewForStaffParameter, intNewFieldSizeParameter, intRET);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_RENEW_ITEM(Nullable<int> intLoanID, Nullable<short> intAddTime, Nullable<short> intTimeUnit, string strFixedDueDate)
        {
            var intLoanIDParameter = intLoanID.HasValue ?
                new ObjectParameter("intLoanID", intLoanID) :
                new ObjectParameter("intLoanID", typeof(int));
    
            var intAddTimeParameter = intAddTime.HasValue ?
                new ObjectParameter("intAddTime", intAddTime) :
                new ObjectParameter("intAddTime", typeof(short));
    
            var intTimeUnitParameter = intTimeUnit.HasValue ?
                new ObjectParameter("intTimeUnit", intTimeUnit) :
                new ObjectParameter("intTimeUnit", typeof(short));
    
            var strFixedDueDateParameter = strFixedDueDate != null ?
                new ObjectParameter("strFixedDueDate", strFixedDueDate) :
                new ObjectParameter("strFixedDueDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RENEW_ITEM", intLoanIDParameter, intAddTimeParameter, intTimeUnitParameter, strFixedDueDateParameter);
        }
    
        public virtual int SP_RENEW_PATRONCARD(string strPatronCode, string strNewDate)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            var strNewDateParameter = strNewDate != null ?
                new ObjectParameter("strNewDate", strNewDate) :
                new ObjectParameter("strNewDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RENEW_PATRONCARD", strPatronCodeParameter, strNewDateParameter);
        }
    
        public virtual int SP_REPORT_DETAIL_ITEMS(string strCatagory, string strGenclassification, string strLocation, string strFreq, string strLanguage, string strCountry)
        {
            var strCatagoryParameter = strCatagory != null ?
                new ObjectParameter("strCatagory", strCatagory) :
                new ObjectParameter("strCatagory", typeof(string));
    
            var strGenclassificationParameter = strGenclassification != null ?
                new ObjectParameter("strGenclassification", strGenclassification) :
                new ObjectParameter("strGenclassification", typeof(string));
    
            var strLocationParameter = strLocation != null ?
                new ObjectParameter("strLocation", strLocation) :
                new ObjectParameter("strLocation", typeof(string));
    
            var strFreqParameter = strFreq != null ?
                new ObjectParameter("strFreq", strFreq) :
                new ObjectParameter("strFreq", typeof(string));
    
            var strLanguageParameter = strLanguage != null ?
                new ObjectParameter("strLanguage", strLanguage) :
                new ObjectParameter("strLanguage", typeof(string));
    
            var strCountryParameter = strCountry != null ?
                new ObjectParameter("strCountry", strCountry) :
                new ObjectParameter("strCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REPORT_DETAIL_ITEMS", strCatagoryParameter, strGenclassificationParameter, strLocationParameter, strFreqParameter, strLanguageParameter, strCountryParameter);
        }
    
        public virtual int SP_RESERVATION_CHANGETURN(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RESERVATION_CHANGETURN", intIDParameter);
        }
    
        public virtual int SP_RESERVATION_CUTTURN(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RESERVATION_CUTTURN", intIDParameter);
        }
    
        public virtual int SP_RESERVE_REQUEST_DELETE(string strCRR_ID)
        {
            var strCRR_IDParameter = strCRR_ID != null ?
                new ObjectParameter("strCRR_ID", strCRR_ID) :
                new ObjectParameter("strCRR_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RESERVE_REQUEST_DELETE", strCRR_IDParameter);
        }
    
        public virtual int SP_RESTORE_HOLDING(string strCopyIDs, Nullable<int> intNewLibID, Nullable<int> intNewLocID, string strNewShelf, Nullable<int> intUnlock, Nullable<int> intMode, string strCopyNumbers, ObjectParameter strCopyNumExist)
        {
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            var intNewLibIDParameter = intNewLibID.HasValue ?
                new ObjectParameter("intNewLibID", intNewLibID) :
                new ObjectParameter("intNewLibID", typeof(int));
    
            var intNewLocIDParameter = intNewLocID.HasValue ?
                new ObjectParameter("intNewLocID", intNewLocID) :
                new ObjectParameter("intNewLocID", typeof(int));
    
            var strNewShelfParameter = strNewShelf != null ?
                new ObjectParameter("strNewShelf", strNewShelf) :
                new ObjectParameter("strNewShelf", typeof(string));
    
            var intUnlockParameter = intUnlock.HasValue ?
                new ObjectParameter("intUnlock", intUnlock) :
                new ObjectParameter("intUnlock", typeof(int));
    
            var intModeParameter = intMode.HasValue ?
                new ObjectParameter("intMode", intMode) :
                new ObjectParameter("intMode", typeof(int));
    
            var strCopyNumbersParameter = strCopyNumbers != null ?
                new ObjectParameter("strCopyNumbers", strCopyNumbers) :
                new ObjectParameter("strCopyNumbers", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RESTORE_HOLDING", strCopyIDsParameter, intNewLibIDParameter, intNewLocIDParameter, strNewShelfParameter, intUnlockParameter, intModeParameter, strCopyNumbersParameter, strCopyNumExist);
        }
    
        public virtual int SP_SER_CHECK_BIND_PERIOD(Nullable<int> lngItemID, Nullable<int> intLocationID, ObjectParameter intOut)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_CHECK_BIND_PERIOD", lngItemIDParameter, intLocationIDParameter, intOut);
        }
    
        public virtual int SP_SER_CHECKGROUPNAME(string strUser, string strViewName, ObjectParameter intOutPut)
        {
            var strUserParameter = strUser != null ?
                new ObjectParameter("strUser", strUser) :
                new ObjectParameter("strUser", typeof(string));
    
            var strViewNameParameter = strViewName != null ?
                new ObjectParameter("strViewName", strViewName) :
                new ObjectParameter("strViewName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_CHECKGROUPNAME", strUserParameter, strViewNameParameter, intOutPut);
        }
    
        public virtual int SP_SER_GET_CLAIMED_ITEM_LIST(Nullable<int> intVendorID, string strFromDate, string strToDate)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_CLAIMED_ITEM_LIST", intVendorIDParameter, strFromDateParameter, strToDateParameter);
        }
    
        public virtual int SP_SER_GET_CONTRACTS(Nullable<int> intPOType, string strPoName, string strReceiptNo, Nullable<int> intVendorID, Nullable<int> intBudgetID, string strValidDateTo, string strValidDateFrom)
        {
            var intPOTypeParameter = intPOType.HasValue ?
                new ObjectParameter("intPOType", intPOType) :
                new ObjectParameter("intPOType", typeof(int));
    
            var strPoNameParameter = strPoName != null ?
                new ObjectParameter("strPoName", strPoName) :
                new ObjectParameter("strPoName", typeof(string));
    
            var strReceiptNoParameter = strReceiptNo != null ?
                new ObjectParameter("strReceiptNo", strReceiptNo) :
                new ObjectParameter("strReceiptNo", typeof(string));
    
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            var intBudgetIDParameter = intBudgetID.HasValue ?
                new ObjectParameter("intBudgetID", intBudgetID) :
                new ObjectParameter("intBudgetID", typeof(int));
    
            var strValidDateToParameter = strValidDateTo != null ?
                new ObjectParameter("strValidDateTo", strValidDateTo) :
                new ObjectParameter("strValidDateTo", typeof(string));
    
            var strValidDateFromParameter = strValidDateFrom != null ?
                new ObjectParameter("strValidDateFrom", strValidDateFrom) :
                new ObjectParameter("strValidDateFrom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_CONTRACTS", intPOTypeParameter, strPoNameParameter, strReceiptNoParameter, intVendorIDParameter, intBudgetIDParameter, strValidDateToParameter, strValidDateFromParameter);
        }
    
        public virtual int SP_SER_GET_HAVING_ISSUES(Nullable<int> intItemID, Nullable<int> intYear, Nullable<int> intLocationID, ObjectParameter intResetReg, ObjectParameter strMonths, ObjectParameter strHavingYearIssue, ObjectParameter strFirstIssueInYear)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_HAVING_ISSUES", intItemIDParameter, intYearParameter, intLocationIDParameter, intResetReg, strMonths, strHavingYearIssue, strFirstIssueInYear);
        }
    
        public virtual int SP_SER_GET_ISSUES_FOR_CLAIM(string chrSelectMode, string chrClaimCycleMode, string strIssueYear, string strItemIDs)
        {
            var chrSelectModeParameter = chrSelectMode != null ?
                new ObjectParameter("chrSelectMode", chrSelectMode) :
                new ObjectParameter("chrSelectMode", typeof(string));
    
            var chrClaimCycleModeParameter = chrClaimCycleMode != null ?
                new ObjectParameter("chrClaimCycleMode", chrClaimCycleMode) :
                new ObjectParameter("chrClaimCycleMode", typeof(string));
    
            var strIssueYearParameter = strIssueYear != null ?
                new ObjectParameter("strIssueYear", strIssueYear) :
                new ObjectParameter("strIssueYear", typeof(string));
    
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_ISSUES_FOR_CLAIM", chrSelectModeParameter, chrClaimCycleModeParameter, strIssueYearParameter, strItemIDsParameter);
        }
    
        public virtual int SP_SER_GET_ISSUES_FRO_CLAIM(string chrSelectMode, string chrClaimCycleMode, string strIssueYear, string strItemIDs)
        {
            var chrSelectModeParameter = chrSelectMode != null ?
                new ObjectParameter("chrSelectMode", chrSelectMode) :
                new ObjectParameter("chrSelectMode", typeof(string));
    
            var chrClaimCycleModeParameter = chrClaimCycleMode != null ?
                new ObjectParameter("chrClaimCycleMode", chrClaimCycleMode) :
                new ObjectParameter("chrClaimCycleMode", typeof(string));
    
            var strIssueYearParameter = strIssueYear != null ?
                new ObjectParameter("strIssueYear", strIssueYear) :
                new ObjectParameter("strIssueYear", typeof(string));
    
            var strItemIDsParameter = strItemIDs != null ?
                new ObjectParameter("strItemIDs", strItemIDs) :
                new ObjectParameter("strItemIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_ISSUES_FRO_CLAIM", chrSelectModeParameter, chrClaimCycleModeParameter, strIssueYearParameter, strItemIDsParameter);
        }
    
        public virtual int SP_SER_GET_ISSUES_MONEY(Nullable<int> intItemID, Nullable<int> intYear, Nullable<int> intLocationID, ObjectParameter flprice1, ObjectParameter flprice2, ObjectParameter flprice3, ObjectParameter flprice4)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_ISSUES_MONEY", intItemIDParameter, intYearParameter, intLocationIDParameter, flprice1, flprice2, flprice3, flprice4);
        }
    
        public virtual int SP_SER_GET_ISSUES_STATIC(Nullable<int> intItemID, string strFromDate, string strToDate, ObjectParameter intResetReg, ObjectParameter strMonths, ObjectParameter strHavingYearIssue)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_ISSUES_STATIC", intItemIDParameter, strFromDateParameter, strToDateParameter, intResetReg, strMonths, strHavingYearIssue);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SP_SER_GET_LAST_RECEIVED_DATE(Nullable<int> lngItemID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SP_SER_GET_LAST_RECEIVED_DATE", lngItemIDParameter);
        }
    
        public virtual ObjectResult<SP_SER_GET_PERIODICAL_INFOR_Result> SP_SER_GET_PERIODICAL_INFOR(Nullable<int> lngItemID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SER_GET_PERIODICAL_INFOR_Result>("SP_SER_GET_PERIODICAL_INFOR", lngItemIDParameter);
        }
    
        public virtual ObjectResult<SP_SER_GET_RECEIVE_ISSUES_Result> SP_SER_GET_RECEIVE_ISSUES(Nullable<int> intItemID, Nullable<int> intYear, Nullable<int> intLocationID, ObjectParameter intFreqMode, ObjectParameter strDOWs, ObjectParameter strBasedDate, ObjectParameter strCeasedDate)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SER_GET_RECEIVE_ISSUES_Result>("SP_SER_GET_RECEIVE_ISSUES", intItemIDParameter, intYearParameter, intLocationIDParameter, intFreqMode, strDOWs, strBasedDate, strCeasedDate);
        }
    
        public virtual ObjectResult<SP_SER_GET_REGULARITY_Result> SP_SER_GET_REGULARITY(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SER_GET_REGULARITY_Result>("SP_SER_GET_REGULARITY", intItemIDParameter);
        }
    
        public virtual int SP_SER_GET_REPORTINF(string strFlage, string strFromDate, string strToDate, Nullable<int> intItemID)
        {
            var strFlageParameter = strFlage != null ?
                new ObjectParameter("strFlage", strFlage) :
                new ObjectParameter("strFlage", typeof(string));
    
            var strFromDateParameter = strFromDate != null ?
                new ObjectParameter("strFromDate", strFromDate) :
                new ObjectParameter("strFromDate", typeof(string));
    
            var strToDateParameter = strToDate != null ?
                new ObjectParameter("strToDate", strToDate) :
                new ObjectParameter("strToDate", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_GET_REPORTINF", strFlageParameter, strFromDateParameter, strToDateParameter, intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_SER_GET_REQUEST_LIST_Result> SP_SER_GET_REQUEST_LIST(Nullable<int> intType)
        {
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SER_GET_REQUEST_LIST_Result>("SP_SER_GET_REQUEST_LIST", intTypeParameter);
        }
    
        public virtual ObjectResult<string> SP_SER_GET_SUMMARRYHOLDING(Nullable<int> intItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_SER_GET_SUMMARRYHOLDING", intItemIDParameter);
        }
    
        public virtual int SP_SER_ITEM_UPDATE(Nullable<int> intItemID, Nullable<int> intAcqSourceID, Nullable<int> intBindingMode, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3, Nullable<int> intDeliveryTime, Nullable<bool> boolCeased, string chrFreqCode, string strNote, string strSummaryHolding, Nullable<int> intPOID, Nullable<int> intFreqMode, Nullable<System.DateTime> dtCeasedDate, Nullable<System.DateTime> dtBasedDate, Nullable<int> intOnSubscription, Nullable<int> intBindingRule, string strMonths, string strChangeNote, string strDOWs, string strWeeks, Nullable<int> intCategoryID, Nullable<byte> intResetRegularity)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intAcqSourceIDParameter = intAcqSourceID.HasValue ?
                new ObjectParameter("intAcqSourceID", intAcqSourceID) :
                new ObjectParameter("intAcqSourceID", typeof(int));
    
            var intBindingModeParameter = intBindingMode.HasValue ?
                new ObjectParameter("intBindingMode", intBindingMode) :
                new ObjectParameter("intBindingMode", typeof(int));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            var intDeliveryTimeParameter = intDeliveryTime.HasValue ?
                new ObjectParameter("intDeliveryTime", intDeliveryTime) :
                new ObjectParameter("intDeliveryTime", typeof(int));
    
            var boolCeasedParameter = boolCeased.HasValue ?
                new ObjectParameter("boolCeased", boolCeased) :
                new ObjectParameter("boolCeased", typeof(bool));
    
            var chrFreqCodeParameter = chrFreqCode != null ?
                new ObjectParameter("chrFreqCode", chrFreqCode) :
                new ObjectParameter("chrFreqCode", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strSummaryHoldingParameter = strSummaryHolding != null ?
                new ObjectParameter("strSummaryHolding", strSummaryHolding) :
                new ObjectParameter("strSummaryHolding", typeof(string));
    
            var intPOIDParameter = intPOID.HasValue ?
                new ObjectParameter("intPOID", intPOID) :
                new ObjectParameter("intPOID", typeof(int));
    
            var intFreqModeParameter = intFreqMode.HasValue ?
                new ObjectParameter("intFreqMode", intFreqMode) :
                new ObjectParameter("intFreqMode", typeof(int));
    
            var dtCeasedDateParameter = dtCeasedDate.HasValue ?
                new ObjectParameter("dtCeasedDate", dtCeasedDate) :
                new ObjectParameter("dtCeasedDate", typeof(System.DateTime));
    
            var dtBasedDateParameter = dtBasedDate.HasValue ?
                new ObjectParameter("dtBasedDate", dtBasedDate) :
                new ObjectParameter("dtBasedDate", typeof(System.DateTime));
    
            var intOnSubscriptionParameter = intOnSubscription.HasValue ?
                new ObjectParameter("intOnSubscription", intOnSubscription) :
                new ObjectParameter("intOnSubscription", typeof(int));
    
            var intBindingRuleParameter = intBindingRule.HasValue ?
                new ObjectParameter("intBindingRule", intBindingRule) :
                new ObjectParameter("intBindingRule", typeof(int));
    
            var strMonthsParameter = strMonths != null ?
                new ObjectParameter("strMonths", strMonths) :
                new ObjectParameter("strMonths", typeof(string));
    
            var strChangeNoteParameter = strChangeNote != null ?
                new ObjectParameter("strChangeNote", strChangeNote) :
                new ObjectParameter("strChangeNote", typeof(string));
    
            var strDOWsParameter = strDOWs != null ?
                new ObjectParameter("strDOWs", strDOWs) :
                new ObjectParameter("strDOWs", typeof(string));
    
            var strWeeksParameter = strWeeks != null ?
                new ObjectParameter("strWeeks", strWeeks) :
                new ObjectParameter("strWeeks", typeof(string));
    
            var intCategoryIDParameter = intCategoryID.HasValue ?
                new ObjectParameter("intCategoryID", intCategoryID) :
                new ObjectParameter("intCategoryID", typeof(int));
    
            var intResetRegularityParameter = intResetRegularity.HasValue ?
                new ObjectParameter("intResetRegularity", intResetRegularity) :
                new ObjectParameter("intResetRegularity", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_ITEM_UPDATE", intItemIDParameter, intAcqSourceIDParameter, intBindingModeParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter, intDeliveryTimeParameter, boolCeasedParameter, chrFreqCodeParameter, strNoteParameter, strSummaryHoldingParameter, intPOIDParameter, intFreqModeParameter, dtCeasedDateParameter, dtBasedDateParameter, intOnSubscriptionParameter, intBindingRuleParameter, strMonthsParameter, strChangeNoteParameter, strDOWsParameter, strWeeksParameter, intCategoryIDParameter, intResetRegularityParameter);
        }
    
        public virtual int SP_SER_ITEM_UPDATE_CLAIMCYCLE(Nullable<int> intItemID, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_ITEM_UPDATE_CLAIMCYCLE", intItemIDParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter);
        }
    
        public virtual ObjectResult<SP_SER_REGULARITY_SEL_Result> SP_SER_REGULARITY_SEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SER_REGULARITY_SEL_Result>("SP_SER_REGULARITY_SEL");
        }
    
        public virtual int SP_SER_SEARCH_ITEM(string strSQL, string strUser, string strViewName, string strSelectStatement, Nullable<int> intID, Nullable<byte> intUpdate, ObjectParameter strOutPut)
        {
            var strSQLParameter = strSQL != null ?
                new ObjectParameter("strSQL", strSQL) :
                new ObjectParameter("strSQL", typeof(string));
    
            var strUserParameter = strUser != null ?
                new ObjectParameter("strUser", strUser) :
                new ObjectParameter("strUser", typeof(string));
    
            var strViewNameParameter = strViewName != null ?
                new ObjectParameter("strViewName", strViewName) :
                new ObjectParameter("strViewName", typeof(string));
    
            var strSelectStatementParameter = strSelectStatement != null ?
                new ObjectParameter("strSelectStatement", strSelectStatement) :
                new ObjectParameter("strSelectStatement", typeof(string));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intUpdateParameter = intUpdate.HasValue ?
                new ObjectParameter("intUpdate", intUpdate) :
                new ObjectParameter("intUpdate", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_SEARCH_ITEM", strSQLParameter, strUserParameter, strViewNameParameter, strSelectStatementParameter, intIDParameter, intUpdateParameter, strOutPut);
        }
    
        public virtual int SP_SER_SET_REGULARITY(Nullable<int> intItemID, string strDays, string strMonths, string strWeeks, Nullable<byte> intFreqMode, string strFreqCode, Nullable<byte> intResetRegularity)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strDaysParameter = strDays != null ?
                new ObjectParameter("strDays", strDays) :
                new ObjectParameter("strDays", typeof(string));
    
            var strMonthsParameter = strMonths != null ?
                new ObjectParameter("strMonths", strMonths) :
                new ObjectParameter("strMonths", typeof(string));
    
            var strWeeksParameter = strWeeks != null ?
                new ObjectParameter("strWeeks", strWeeks) :
                new ObjectParameter("strWeeks", typeof(string));
    
            var intFreqModeParameter = intFreqMode.HasValue ?
                new ObjectParameter("intFreqMode", intFreqMode) :
                new ObjectParameter("intFreqMode", typeof(byte));
    
            var strFreqCodeParameter = strFreqCode != null ?
                new ObjectParameter("strFreqCode", strFreqCode) :
                new ObjectParameter("strFreqCode", typeof(string));
    
            var intResetRegularityParameter = intResetRegularity.HasValue ?
                new ObjectParameter("intResetRegularity", intResetRegularity) :
                new ObjectParameter("intResetRegularity", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_SET_REGULARITY", intItemIDParameter, strDaysParameter, strMonthsParameter, strWeeksParameter, intFreqModeParameter, strFreqCodeParameter, intResetRegularityParameter);
        }
    
        public virtual int SP_SER_SUMMARYHOLDING_UPDATE(Nullable<int> intItemID, string strHolding)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var strHoldingParameter = strHolding != null ?
                new ObjectParameter("strHolding", strHolding) :
                new ObjectParameter("strHolding", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_SUMMARYHOLDING_UPDATE", intItemIDParameter, strHoldingParameter);
        }
    
        public virtual int SP_SER_UPDATE_ISSUE_CLAIMDATE(string strItemID, Nullable<int> intClaimMode)
        {
            var strItemIDParameter = strItemID != null ?
                new ObjectParameter("strItemID", strItemID) :
                new ObjectParameter("strItemID", typeof(string));
    
            var intClaimModeParameter = intClaimMode.HasValue ?
                new ObjectParameter("intClaimMode", intClaimMode) :
                new ObjectParameter("intClaimMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SER_UPDATE_ISSUE_CLAIMDATE", strItemIDParameter, intClaimModeParameter);
        }
    
        public virtual int SP_SET_BINDING_RULE(Nullable<int> lngItemID, Nullable<int> intBindingRule, Nullable<int> intBindingMode)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intBindingRuleParameter = intBindingRule.HasValue ?
                new ObjectParameter("intBindingRule", intBindingRule) :
                new ObjectParameter("intBindingRule", typeof(int));
    
            var intBindingModeParameter = intBindingMode.HasValue ?
                new ObjectParameter("intBindingMode", intBindingMode) :
                new ObjectParameter("intBindingMode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_BINDING_RULE", lngItemIDParameter, intBindingRuleParameter, intBindingModeParameter);
        }
    
        public virtual int SP_SET_CLAIMCYCLE(Nullable<int> intItemID, Nullable<int> intDeliveryTime, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intDeliveryTimeParameter = intDeliveryTime.HasValue ?
                new ObjectParameter("intDeliveryTime", intDeliveryTime) :
                new ObjectParameter("intDeliveryTime", typeof(int));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SET_CLAIMCYCLE", intItemIDParameter, intDeliveryTimeParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter);
        }
    
        public virtual ObjectResult<SP_STAT_CATEGORY_Result> SP_STAT_CATEGORY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_CATEGORY_Result>("SP_STAT_CATEGORY");
        }
    
        public virtual ObjectResult<SP_STAT_CLASSIFICATION_Result> SP_STAT_CLASSIFICATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_CLASSIFICATION_Result>("SP_STAT_CLASSIFICATION");
        }
    
        public virtual ObjectResult<SP_STAT_GENCLASSIFICATION_Result> SP_STAT_GENCLASSIFICATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_GENCLASSIFICATION_Result>("SP_STAT_GENCLASSIFICATION");
        }
    
        public virtual int SP_STAT_HOLDINGLOANTYPE(Nullable<int> intUserID, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> optItemID, Nullable<int> intHistory)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            var intHistoryParameter = intHistory.HasValue ?
                new ObjectParameter("intHistory", intHistory) :
                new ObjectParameter("intHistory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_HOLDINGLOANTYPE", intUserIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, optItemIDParameter, intHistoryParameter);
        }
    
        public virtual int SP_STAT_HOLDINGLOANTYPEED(Nullable<int> intUserID, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> optItemID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_HOLDINGLOANTYPEED", intUserIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, optItemIDParameter);
        }
    
        public virtual int SP_STAT_HOLDINGPALCE(Nullable<int> optLib, string strLibIDs, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> intUserID, Nullable<int> optItemID, Nullable<int> intHistory)
        {
            var optLibParameter = optLib.HasValue ?
                new ObjectParameter("OptLib", optLib) :
                new ObjectParameter("OptLib", typeof(int));
    
            var strLibIDsParameter = strLibIDs != null ?
                new ObjectParameter("strLibIDs", strLibIDs) :
                new ObjectParameter("strLibIDs", typeof(string));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            var intHistoryParameter = intHistory.HasValue ?
                new ObjectParameter("intHistory", intHistory) :
                new ObjectParameter("intHistory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_HOLDINGPALCE", optLibParameter, strLibIDsParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, intUserIDParameter, optItemIDParameter, intHistoryParameter);
        }
    
        public virtual int SP_STAT_HOLDINGPALCEED(Nullable<int> optLib, string strLibIDs, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> intUserID, Nullable<int> optItemID)
        {
            var optLibParameter = optLib.HasValue ?
                new ObjectParameter("OptLib", optLib) :
                new ObjectParameter("OptLib", typeof(int));
    
            var strLibIDsParameter = strLibIDs != null ?
                new ObjectParameter("strLibIDs", strLibIDs) :
                new ObjectParameter("strLibIDs", typeof(string));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_HOLDINGPALCEED", optLibParameter, strLibIDsParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, intUserIDParameter, optItemIDParameter);
        }
    
        public virtual int SP_STAT_ITEMMAX(Nullable<int> intUserID, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> intTopNum, Nullable<int> intMinLoan)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var intTopNumParameter = intTopNum.HasValue ?
                new ObjectParameter("intTopNum", intTopNum) :
                new ObjectParameter("intTopNum", typeof(int));
    
            var intMinLoanParameter = intMinLoan.HasValue ?
                new ObjectParameter("intMinLoan", intMinLoan) :
                new ObjectParameter("intMinLoan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_ITEMMAX", intUserIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, intTopNumParameter, intMinLoanParameter);
        }
    
        public virtual ObjectResult<SP_STAT_LOANDAY_Result> SP_STAT_LOANDAY(Nullable<int> intStatYear, Nullable<int> intStatMon, Nullable<int> intUserID, Nullable<int> optItemID, Nullable<int> intHistory)
        {
            var intStatYearParameter = intStatYear.HasValue ?
                new ObjectParameter("intStatYear", intStatYear) :
                new ObjectParameter("intStatYear", typeof(int));
    
            var intStatMonParameter = intStatMon.HasValue ?
                new ObjectParameter("intStatMon", intStatMon) :
                new ObjectParameter("intStatMon", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            var intHistoryParameter = intHistory.HasValue ?
                new ObjectParameter("intHistory", intHistory) :
                new ObjectParameter("intHistory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_LOANDAY_Result>("SP_STAT_LOANDAY", intStatYearParameter, intStatMonParameter, intUserIDParameter, optItemIDParameter, intHistoryParameter);
        }
    
        public virtual ObjectResult<SP_STAT_LOANDAYED_Result> SP_STAT_LOANDAYED(string strStatYear, string strStatMon, Nullable<int> intUserID, Nullable<int> optItemID)
        {
            var strStatYearParameter = strStatYear != null ?
                new ObjectParameter("strStatYear", strStatYear) :
                new ObjectParameter("strStatYear", typeof(string));
    
            var strStatMonParameter = strStatMon != null ?
                new ObjectParameter("strStatMon", strStatMon) :
                new ObjectParameter("strStatMon", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_LOANDAYED_Result>("SP_STAT_LOANDAYED", strStatYearParameter, strStatMonParameter, intUserIDParameter, optItemIDParameter);
        }
    
        public virtual ObjectResult<SP_STAT_LOANMON_Result> SP_STAT_LOANMON(Nullable<int> intStatYear, Nullable<int> intUserID, Nullable<int> optItemID, Nullable<int> intHistory)
        {
            var intStatYearParameter = intStatYear.HasValue ?
                new ObjectParameter("intStatYear", intStatYear) :
                new ObjectParameter("intStatYear", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            var intHistoryParameter = intHistory.HasValue ?
                new ObjectParameter("intHistory", intHistory) :
                new ObjectParameter("intHistory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_LOANMON_Result>("SP_STAT_LOANMON", intStatYearParameter, intUserIDParameter, optItemIDParameter, intHistoryParameter);
        }
    
        public virtual ObjectResult<SP_STAT_LOANMONED_Result> SP_STAT_LOANMONED(string strStatYear, Nullable<int> intUserID, Nullable<int> optItemID)
        {
            var strStatYearParameter = strStatYear != null ?
                new ObjectParameter("strStatYear", strStatYear) :
                new ObjectParameter("strStatYear", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_LOANMONED_Result>("SP_STAT_LOANMONED", strStatYearParameter, intUserIDParameter, optItemIDParameter);
        }
    
        public virtual ObjectResult<SP_STAT_LOANYEARS_Result> SP_STAT_LOANYEARS(Nullable<int> intUserID, Nullable<int> optItemID, Nullable<int> intHistory)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            var intHistoryParameter = intHistory.HasValue ?
                new ObjectParameter("intHistory", intHistory) :
                new ObjectParameter("intHistory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_LOANYEARS_Result>("SP_STAT_LOANYEARS", intUserIDParameter, optItemIDParameter, intHistoryParameter);
        }
    
        public virtual ObjectResult<SP_STAT_LOANYEARSED_Result> SP_STAT_LOANYEARSED(Nullable<int> intUserID, Nullable<int> optItemID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_LOANYEARSED_Result>("SP_STAT_LOANYEARSED", intUserIDParameter, optItemIDParameter);
        }
    
        public virtual ObjectResult<SP_STAT_LOCATION_SER_Result> SP_STAT_LOCATION_SER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_LOCATION_SER_Result>("SP_STAT_LOCATION_SER");
        }
    
        public virtual int SP_STAT_PATRONGROUP(Nullable<int> intUserID, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> optItemID, Nullable<int> intHistory)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            var intHistoryParameter = intHistory.HasValue ?
                new ObjectParameter("intHistory", intHistory) :
                new ObjectParameter("intHistory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_PATRONGROUP", intUserIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, optItemIDParameter, intHistoryParameter);
        }
    
        public virtual int SP_STAT_PATRONGROUPED(Nullable<int> intUserID, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> optItemID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_PATRONGROUPED", intUserIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, optItemIDParameter);
        }
    
        public virtual int SP_STAT_PATRONMAX(Nullable<int> intUserID, string strCheckOutDateFrom, string strCheckOutDateTo, Nullable<int> intTopNum, Nullable<int> intMinLoan, Nullable<int> optItemID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strCheckOutDateFromParameter = strCheckOutDateFrom != null ?
                new ObjectParameter("strCheckOutDateFrom", strCheckOutDateFrom) :
                new ObjectParameter("strCheckOutDateFrom", typeof(string));
    
            var strCheckOutDateToParameter = strCheckOutDateTo != null ?
                new ObjectParameter("strCheckOutDateTo", strCheckOutDateTo) :
                new ObjectParameter("strCheckOutDateTo", typeof(string));
    
            var intTopNumParameter = intTopNum.HasValue ?
                new ObjectParameter("intTopNum", intTopNum) :
                new ObjectParameter("intTopNum", typeof(int));
    
            var intMinLoanParameter = intMinLoan.HasValue ?
                new ObjectParameter("intMinLoan", intMinLoan) :
                new ObjectParameter("intMinLoan", typeof(int));
    
            var optItemIDParameter = optItemID.HasValue ?
                new ObjectParameter("OptItemID", optItemID) :
                new ObjectParameter("OptItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_PATRONMAX", intUserIDParameter, strCheckOutDateFromParameter, strCheckOutDateToParameter, intTopNumParameter, intMinLoanParameter, optItemIDParameter);
        }
    
        public virtual int SP_STAT_SER_TOP20(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_SER_TOP20", intIDParameter);
        }
    
        public virtual int SP_STAT_SERIAL_CLASS_DDC(string strInput)
        {
            var strInputParameter = strInput != null ?
                new ObjectParameter("strInput", strInput) :
                new ObjectParameter("strInput", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_SERIAL_CLASS_DDC", strInputParameter);
        }
    
        public virtual ObjectResult<SP_STAT_SERIAL_COUNTRY_Result> SP_STAT_SERIAL_COUNTRY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_SERIAL_COUNTRY_Result>("SP_STAT_SERIAL_COUNTRY");
        }
    
        public virtual ObjectResult<SP_STAT_SERIAL_FREQ_Result> SP_STAT_SERIAL_FREQ()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_SERIAL_FREQ_Result>("SP_STAT_SERIAL_FREQ");
        }
    
        public virtual ObjectResult<SP_STAT_SERIAL_LANGUAGE_Result> SP_STAT_SERIAL_LANGUAGE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_STAT_SERIAL_LANGUAGE_Result>("SP_STAT_SERIAL_LANGUAGE");
        }
    
        public virtual int SP_STAT_TOP20(Nullable<int> intHistory, Nullable<int> intID, Nullable<int> intUserID)
        {
            var intHistoryParameter = intHistory.HasValue ?
                new ObjectParameter("intHistory", intHistory) :
                new ObjectParameter("intHistory", typeof(int));
    
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STAT_TOP20", intHistoryParameter, intIDParameter, intUserIDParameter);
        }
    
        public virtual int SP_STATEMENT_SEL(string strSQLStatement)
        {
            var strSQLStatementParameter = strSQLStatement != null ?
                new ObjectParameter("strSQLStatement", strSQLStatement) :
                new ObjectParameter("strSQLStatement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_STATEMENT_SEL", strSQLStatementParameter);
        }
    
        public virtual int SP_SYS_ACCESSKEY_SELECT(string strFormID, string strLanguageID, ObjectParameter sQL)
        {
            var strFormIDParameter = strFormID != null ?
                new ObjectParameter("strFormID", strFormID) :
                new ObjectParameter("strFormID", typeof(string));
    
            var strLanguageIDParameter = strLanguageID != null ?
                new ObjectParameter("strLanguageID", strLanguageID) :
                new ObjectParameter("strLanguageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_ACCESSKEY_SELECT", strFormIDParameter, strLanguageIDParameter, sQL);
        }
    
        public virtual int SP_SYS_CREATE_TEMPLATE(string strTitle, string strCreator, string strModifier, string strContent, Nullable<int> intTemplateType, ObjectParameter intOut)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_CREATE_TEMPLATE", strTitleParameter, strCreatorParameter, strModifierParameter, strContentParameter, intTemplateTypeParameter, intOut);
        }
    
        public virtual int SP_SYS_DOWNLOAD_FILE_DEL(string strCondition)
        {
            var strConditionParameter = strCondition != null ?
                new ObjectParameter("strCondition", strCondition) :
                new ObjectParameter("strCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_DOWNLOAD_FILE_DEL", strConditionParameter);
        }
    
        public virtual int SP_SYS_DOWNLOAD_FILE_INS(string strFileName, Nullable<System.DateTime> dtCreatedDate)
        {
            var strFileNameParameter = strFileName != null ?
                new ObjectParameter("strFileName", strFileName) :
                new ObjectParameter("strFileName", typeof(string));
    
            var dtCreatedDateParameter = dtCreatedDate.HasValue ?
                new ObjectParameter("dtCreatedDate", dtCreatedDate) :
                new ObjectParameter("dtCreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_DOWNLOAD_FILE_INS", strFileNameParameter, dtCreatedDateParameter);
        }
    
        public virtual int SP_SYS_DOWNLOAD_FILE_SEL(string strCondition)
        {
            var strConditionParameter = strCondition != null ?
                new ObjectParameter("strCondition", strCondition) :
                new ObjectParameter("strCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_DOWNLOAD_FILE_SEL", strConditionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SP_SYS_EVENT_GROUP_SEL(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SP_SYS_EVENT_GROUP_SEL", intIDParameter);
        }
    
        public virtual ObjectResult<SP_SYS_GET_TEMPLATE_Result> SP_SYS_GET_TEMPLATE(Nullable<int> intTemplateID, Nullable<int> intTemplateType)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_GET_TEMPLATE_Result>("SP_SYS_GET_TEMPLATE", intTemplateIDParameter, intTemplateTypeParameter);
        }
    
        public virtual ObjectResult<SP_SYS_GETUSER_Result> SP_SYS_GETUSER(Nullable<int> intIDUser)
        {
            var intIDUserParameter = intIDUser.HasValue ?
                new ObjectParameter("intIDUser", intIDUser) :
                new ObjectParameter("intIDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_GETUSER_Result>("SP_SYS_GETUSER", intIDUserParameter);
        }
    
        public virtual int SP_SYS_LABEL_SELECT(string strWh, string strLanguageID, ObjectParameter sQL)
        {
            var strWhParameter = strWh != null ?
                new ObjectParameter("strWh", strWh) :
                new ObjectParameter("strWh", typeof(string));
    
            var strLanguageIDParameter = strLanguageID != null ?
                new ObjectParameter("strLanguageID", strLanguageID) :
                new ObjectParameter("strLanguageID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_LABEL_SELECT", strWhParameter, strLanguageIDParameter, sQL);
        }
    
        public virtual ObjectResult<SP_SYS_LDAP_USER_LOGIN_Result> SP_SYS_LDAP_USER_LOGIN(string strUserName, string strLDAPAdsPath)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strLDAPAdsPathParameter = strLDAPAdsPath != null ?
                new ObjectParameter("strLDAPAdsPath", strLDAPAdsPath) :
                new ObjectParameter("strLDAPAdsPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_LDAP_USER_LOGIN_Result>("SP_SYS_LDAP_USER_LOGIN", strUserNameParameter, strLDAPAdsPathParameter);
        }
    
        public virtual int SP_SYS_LOG_INS(Nullable<int> intEventGroupID, string strEvent, string strFileName, string strUser, string strWorkStation)
        {
            var intEventGroupIDParameter = intEventGroupID.HasValue ?
                new ObjectParameter("intEventGroupID", intEventGroupID) :
                new ObjectParameter("intEventGroupID", typeof(int));
    
            var strEventParameter = strEvent != null ?
                new ObjectParameter("strEvent", strEvent) :
                new ObjectParameter("strEvent", typeof(string));
    
            var strFileNameParameter = strFileName != null ?
                new ObjectParameter("strFileName", strFileName) :
                new ObjectParameter("strFileName", typeof(string));
    
            var strUserParameter = strUser != null ?
                new ObjectParameter("strUser", strUser) :
                new ObjectParameter("strUser", typeof(string));
    
            var strWorkStationParameter = strWorkStation != null ?
                new ObjectParameter("strWorkStation", strWorkStation) :
                new ObjectParameter("strWorkStation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_LOG_INS", intEventGroupIDParameter, strEventParameter, strFileNameParameter, strUserParameter, strWorkStationParameter);
        }
    
        public virtual ObjectResult<SP_SYS_PARAMETER_SEL_EMAIL_Result> SP_SYS_PARAMETER_SEL_EMAIL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_PARAMETER_SEL_EMAIL_Result>("SP_SYS_PARAMETER_SEL_EMAIL");
        }
    
        public virtual int SP_SYS_PARAMETER_SELECT(string strWh)
        {
            var strWhParameter = strWh != null ?
                new ObjectParameter("strWh", strWh) :
                new ObjectParameter("strWh", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_PARAMETER_SELECT", strWhParameter);
        }
    
        public virtual int SP_SYS_TEMP_CODE_DEL(string strWhere)
        {
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMP_CODE_DEL", strWhereParameter);
        }
    
        public virtual ObjectResult<SP_SYS_TEMPFILE_SEL_Result> SP_SYS_TEMPFILE_SEL(Nullable<int> intModuleID)
        {
            var intModuleIDParameter = intModuleID.HasValue ?
                new ObjectParameter("intModuleID", intModuleID) :
                new ObjectParameter("intModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_TEMPFILE_SEL_Result>("SP_SYS_TEMPFILE_SEL", intModuleIDParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_DEL(string strID)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_DEL", strIDParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_DELETE(Nullable<int> intTemplate)
        {
            var intTemplateParameter = intTemplate.HasValue ?
                new ObjectParameter("intTemplate", intTemplate) :
                new ObjectParameter("intTemplate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_DELETE", intTemplateParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_INS(string strTitle, string strCreator, string strContent, Nullable<int> intType)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_INS", strTitleParameter, strCreatorParameter, strContentParameter, intTypeParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_INSERT(string strTitle, string strCreator, string strModifier, string strContent, Nullable<int> intTemplateType)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_INSERT", strTitleParameter, strCreatorParameter, strModifierParameter, strContentParameter, intTemplateTypeParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_SEL(string strID, Nullable<int> intType)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_SEL", strIDParameter, intTypeParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_SELECT(Nullable<int> intTemplateID, Nullable<int> intTemplateType)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_SELECT", intTemplateIDParameter, intTemplateTypeParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_UPD(string strID, string strTitle, string strModifier, string strContent, Nullable<int> intType)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_UPD", strIDParameter, strTitleParameter, strModifierParameter, strContentParameter, intTypeParameter);
        }
    
        public virtual int SP_SYS_TEMPLATE_UPDATE(Nullable<int> intTemplateID, string strTitle, string strModifier, string strContent, Nullable<int> intTemplateType)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_TEMPLATE_UPDATE", intTemplateIDParameter, strTitleParameter, strModifierParameter, strContentParameter, intTemplateTypeParameter);
        }
    
        public virtual int SP_SYS_UPDATE_TEMPLATE(Nullable<int> intTemplateID, string strTitle, string strModifier, string strContent, Nullable<int> intTemplateType, ObjectParameter intOut)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_UPDATE_TEMPLATE", intTemplateIDParameter, strTitleParameter, strModifierParameter, strContentParameter, intTemplateTypeParameter, intOut);
        }
    
        public virtual int SP_SYS_USER_CSS_SELECT(Nullable<int> lngUserID, Nullable<int> bytModuleID)
        {
            var lngUserIDParameter = lngUserID.HasValue ?
                new ObjectParameter("lngUserID", lngUserID) :
                new ObjectParameter("lngUserID", typeof(int));
    
            var bytModuleIDParameter = bytModuleID.HasValue ?
                new ObjectParameter("bytModuleID", bytModuleID) :
                new ObjectParameter("bytModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_USER_CSS_SELECT", lngUserIDParameter, bytModuleIDParameter);
        }
    
        public virtual ObjectResult<SP_SYS_USER_LOCATION_SEL_Result> SP_SYS_USER_LOCATION_SEL(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_USER_LOCATION_SEL_Result>("SP_SYS_USER_LOCATION_SEL", intUserIDParameter);
        }
    
        public virtual ObjectResult<SP_SYS_USER_LOGIN_Result> SP_SYS_USER_LOGIN(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_USER_LOGIN_Result>("SP_SYS_USER_LOGIN", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<SP_SYS_USER_SELECT_Result> SP_SYS_USER_SELECT(string strUS, string strPW)
        {
            var strUSParameter = strUS != null ?
                new ObjectParameter("strUS", strUS) :
                new ObjectParameter("strUS", typeof(string));
    
            var strPWParameter = strPW != null ?
                new ObjectParameter("strPW", strPW) :
                new ObjectParameter("strPW", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_USER_SELECT_Result>("SP_SYS_USER_SELECT", strUSParameter, strPWParameter);
        }
    
        public virtual ObjectResult<SP_SYS_USER_SER_LOCATION_SEL_Result> SP_SYS_USER_SER_LOCATION_SEL(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SYS_USER_SER_LOCATION_SEL_Result>("SP_SYS_USER_SER_LOCATION_SEL", intUserIDParameter);
        }
    
        public virtual int SP_SYS_VIEW_DEL(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SYS_VIEW_DEL", intIDParameter);
        }
    
        public virtual int SP_UNBIND(Nullable<int> lngCopyNumberID, Nullable<int> lngItemID)
        {
            var lngCopyNumberIDParameter = lngCopyNumberID.HasValue ?
                new ObjectParameter("lngCopyNumberID", lngCopyNumberID) :
                new ObjectParameter("lngCopyNumberID", typeof(int));
    
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UNBIND", lngCopyNumberIDParameter, lngItemIDParameter);
        }
    
        public virtual int SP_UNLOCK_PATRON_CARD(string strPatronCode)
        {
            var strPatronCodeParameter = strPatronCode != null ?
                new ObjectParameter("strPatronCode", strPatronCode) :
                new ObjectParameter("strPatronCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UNLOCK_PATRON_CARD", strPatronCodeParameter);
        }
    
        public virtual int SP_UNRECEIVE_COPIES(Nullable<int> lngIssueID, string strCopyIDs, Nullable<int> intCount)
        {
            var lngIssueIDParameter = lngIssueID.HasValue ?
                new ObjectParameter("lngIssueID", lngIssueID) :
                new ObjectParameter("lngIssueID", typeof(int));
    
            var strCopyIDsParameter = strCopyIDs != null ?
                new ObjectParameter("strCopyIDs", strCopyIDs) :
                new ObjectParameter("strCopyIDs", typeof(string));
    
            var intCountParameter = intCount.HasValue ?
                new ObjectParameter("intCount", intCount) :
                new ObjectParameter("intCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UNRECEIVE_COPIES", lngIssueIDParameter, strCopyIDsParameter, intCountParameter);
        }
    
        public virtual int SP_UPD_LOANTYPE_OFHOLDING(string strHoldingIDs, Nullable<int> intLoanTypeID)
        {
            var strHoldingIDsParameter = strHoldingIDs != null ?
                new ObjectParameter("strHoldingIDs", strHoldingIDs) :
                new ObjectParameter("strHoldingIDs", typeof(string));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPD_LOANTYPE_OFHOLDING", strHoldingIDsParameter, intLoanTypeIDParameter);
        }
    
        public virtual int SP_UPDATE_ACQ_ITEM(Nullable<int> intItemID, Nullable<int> intACQItemID)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intACQItemIDParameter = intACQItemID.HasValue ?
                new ObjectParameter("intACQItemID", intACQItemID) :
                new ObjectParameter("intACQItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ACQ_ITEM", intItemIDParameter, intACQItemIDParameter);
        }
    
        public virtual int SP_UPDATE_ALERT_EDELIV_REQUEST(Nullable<int> lngRequestID)
        {
            var lngRequestIDParameter = lngRequestID.HasValue ?
                new ObjectParameter("lngRequestID", lngRequestID) :
                new ObjectParameter("lngRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ALERT_EDELIV_REQUEST", lngRequestIDParameter);
        }
    
        public virtual int SP_UPDATE_ARTICLE(Nullable<int> intID, Nullable<int> intIssueID, string strName, string strAuthor, string strPage, string strNote, string strSubject, string strFileAttack)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var intIssueIDParameter = intIssueID.HasValue ?
                new ObjectParameter("intIssueID", intIssueID) :
                new ObjectParameter("intIssueID", typeof(int));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strAuthorParameter = strAuthor != null ?
                new ObjectParameter("strAuthor", strAuthor) :
                new ObjectParameter("strAuthor", typeof(string));
    
            var strPageParameter = strPage != null ?
                new ObjectParameter("strPage", strPage) :
                new ObjectParameter("strPage", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strSubjectParameter = strSubject != null ?
                new ObjectParameter("strSubject", strSubject) :
                new ObjectParameter("strSubject", typeof(string));
    
            var strFileAttackParameter = strFileAttack != null ?
                new ObjectParameter("strFileAttack", strFileAttack) :
                new ObjectParameter("strFileAttack", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ARTICLE", intIDParameter, intIssueIDParameter, strNameParameter, strAuthorParameter, strPageParameter, strNoteParameter, strSubjectParameter, strFileAttackParameter);
        }
    
        public virtual int SP_UPDATE_CLAIMCYCLES(Nullable<int> intItemID, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3, Nullable<int> intDeliveryTime)
        {
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            var intDeliveryTimeParameter = intDeliveryTime.HasValue ?
                new ObjectParameter("intDeliveryTime", intDeliveryTime) :
                new ObjectParameter("intDeliveryTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_CLAIMCYCLES", intItemIDParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter, intDeliveryTimeParameter);
        }
    
        public virtual int SP_UPDATE_CURRENT_LOAN(Nullable<int> lngTransactionID, string strNote, string strDueDate)
        {
            var lngTransactionIDParameter = lngTransactionID.HasValue ?
                new ObjectParameter("lngTransactionID", lngTransactionID) :
                new ObjectParameter("lngTransactionID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strDueDateParameter = strDueDate != null ?
                new ObjectParameter("strDueDate", strDueDate) :
                new ObjectParameter("strDueDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_CURRENT_LOAN", lngTransactionIDParameter, strNoteParameter, strDueDateParameter);
        }
    
        public virtual int SP_UPDATE_EDELIV_ACCTRAN(Nullable<int> intID, Nullable<decimal> mnyAmount, string strCurrency, Nullable<double> fltRate, string strCreatedDate, string strReason, ObjectParameter intOutPut)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var mnyAmountParameter = mnyAmount.HasValue ?
                new ObjectParameter("mnyAmount", mnyAmount) :
                new ObjectParameter("mnyAmount", typeof(decimal));
    
            var strCurrencyParameter = strCurrency != null ?
                new ObjectParameter("strCurrency", strCurrency) :
                new ObjectParameter("strCurrency", typeof(string));
    
            var fltRateParameter = fltRate.HasValue ?
                new ObjectParameter("fltRate", fltRate) :
                new ObjectParameter("fltRate", typeof(double));
    
            var strCreatedDateParameter = strCreatedDate != null ?
                new ObjectParameter("strCreatedDate", strCreatedDate) :
                new ObjectParameter("strCreatedDate", typeof(string));
    
            var strReasonParameter = strReason != null ?
                new ObjectParameter("strReason", strReason) :
                new ObjectParameter("strReason", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_EDELIV_ACCTRAN", intIDParameter, mnyAmountParameter, strCurrencyParameter, fltRateParameter, strCreatedDateParameter, strReasonParameter, intOutPut);
        }
    
        public virtual int SP_UPDATE_EDELIV_CUSTOMER(Nullable<int> intUserID, string strUserName, string strName, string strDelivName, string strDelivXAddr, string strDelivStreet, string strDelivBox, string strDelivCity, string strDelivRegion, Nullable<byte> intDelivCountry, string strDelivCode, string strTelephone, string strEmailAddress, string strNote, string strPassword, string strFax, string strContactPerson, Nullable<byte> intApproved, Nullable<int> intSecretLevel, ObjectParameter intOutPut)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strNameParameter = strName != null ?
                new ObjectParameter("strName", strName) :
                new ObjectParameter("strName", typeof(string));
    
            var strDelivNameParameter = strDelivName != null ?
                new ObjectParameter("strDelivName", strDelivName) :
                new ObjectParameter("strDelivName", typeof(string));
    
            var strDelivXAddrParameter = strDelivXAddr != null ?
                new ObjectParameter("strDelivXAddr", strDelivXAddr) :
                new ObjectParameter("strDelivXAddr", typeof(string));
    
            var strDelivStreetParameter = strDelivStreet != null ?
                new ObjectParameter("strDelivStreet", strDelivStreet) :
                new ObjectParameter("strDelivStreet", typeof(string));
    
            var strDelivBoxParameter = strDelivBox != null ?
                new ObjectParameter("strDelivBox", strDelivBox) :
                new ObjectParameter("strDelivBox", typeof(string));
    
            var strDelivCityParameter = strDelivCity != null ?
                new ObjectParameter("strDelivCity", strDelivCity) :
                new ObjectParameter("strDelivCity", typeof(string));
    
            var strDelivRegionParameter = strDelivRegion != null ?
                new ObjectParameter("strDelivRegion", strDelivRegion) :
                new ObjectParameter("strDelivRegion", typeof(string));
    
            var intDelivCountryParameter = intDelivCountry.HasValue ?
                new ObjectParameter("intDelivCountry", intDelivCountry) :
                new ObjectParameter("intDelivCountry", typeof(byte));
    
            var strDelivCodeParameter = strDelivCode != null ?
                new ObjectParameter("strDelivCode", strDelivCode) :
                new ObjectParameter("strDelivCode", typeof(string));
    
            var strTelephoneParameter = strTelephone != null ?
                new ObjectParameter("strTelephone", strTelephone) :
                new ObjectParameter("strTelephone", typeof(string));
    
            var strEmailAddressParameter = strEmailAddress != null ?
                new ObjectParameter("strEmailAddress", strEmailAddress) :
                new ObjectParameter("strEmailAddress", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var strFaxParameter = strFax != null ?
                new ObjectParameter("strFax", strFax) :
                new ObjectParameter("strFax", typeof(string));
    
            var strContactPersonParameter = strContactPerson != null ?
                new ObjectParameter("strContactPerson", strContactPerson) :
                new ObjectParameter("strContactPerson", typeof(string));
    
            var intApprovedParameter = intApproved.HasValue ?
                new ObjectParameter("intApproved", intApproved) :
                new ObjectParameter("intApproved", typeof(byte));
    
            var intSecretLevelParameter = intSecretLevel.HasValue ?
                new ObjectParameter("intSecretLevel", intSecretLevel) :
                new ObjectParameter("intSecretLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_EDELIV_CUSTOMER", intUserIDParameter, strUserNameParameter, strNameParameter, strDelivNameParameter, strDelivXAddrParameter, strDelivStreetParameter, strDelivBoxParameter, strDelivCityParameter, strDelivRegionParameter, intDelivCountryParameter, strDelivCodeParameter, strTelephoneParameter, strEmailAddressParameter, strNoteParameter, strPasswordParameter, strFaxParameter, strContactPersonParameter, intApprovedParameter, intSecretLevelParameter, intOutPut);
        }
    
        public virtual int SP_UPDATE_EDELIV_REQUESTMODE(Nullable<int> intModeID, string strNote, ObjectParameter intOutput)
        {
            var intModeIDParameter = intModeID.HasValue ?
                new ObjectParameter("intModeID", intModeID) :
                new ObjectParameter("intModeID", typeof(int));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_EDELIV_REQUESTMODE", intModeIDParameter, strNoteParameter, intOutput);
        }
    
        public virtual int SP_UPDATE_HOLDING_CP(Nullable<int> lngItemID, Nullable<int> intTotalCopies, Nullable<int> intFreeCopies, Nullable<int> intLoanTypeID)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var intTotalCopiesParameter = intTotalCopies.HasValue ?
                new ObjectParameter("intTotalCopies", intTotalCopies) :
                new ObjectParameter("intTotalCopies", typeof(int));
    
            var intFreeCopiesParameter = intFreeCopies.HasValue ?
                new ObjectParameter("intFreeCopies", intFreeCopies) :
                new ObjectParameter("intFreeCopies", typeof(int));
    
            var intLoanTypeIDParameter = intLoanTypeID.HasValue ?
                new ObjectParameter("intLoanTypeID", intLoanTypeID) :
                new ObjectParameter("intLoanTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_HOLDING_CP", lngItemIDParameter, intTotalCopiesParameter, intFreeCopiesParameter, intLoanTypeIDParameter);
        }
    
        public virtual int SP_UPDATE_ISSUE(Nullable<int> lngItemID, Nullable<int> lngIssueID, Nullable<int> intClaimCycle1, Nullable<int> intClaimCycle2, Nullable<int> intClaimCycle3, Nullable<int> intDeliveryTime, Nullable<int> intSpecialIssue, string strPhysDetail, Nullable<decimal> dblPrice, string strNote, string strIssuedDate, string strIssueNo, string strOvIssueNo, string strVolumeByPublisher, string strSpecialTitle, string strSummary, Nullable<int> intFirstIssueInYear, Nullable<int> intResetRegularity, Nullable<int> intSubscribedCopies, ObjectParameter intOutValue)
        {
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            var lngIssueIDParameter = lngIssueID.HasValue ?
                new ObjectParameter("lngIssueID", lngIssueID) :
                new ObjectParameter("lngIssueID", typeof(int));
    
            var intClaimCycle1Parameter = intClaimCycle1.HasValue ?
                new ObjectParameter("intClaimCycle1", intClaimCycle1) :
                new ObjectParameter("intClaimCycle1", typeof(int));
    
            var intClaimCycle2Parameter = intClaimCycle2.HasValue ?
                new ObjectParameter("intClaimCycle2", intClaimCycle2) :
                new ObjectParameter("intClaimCycle2", typeof(int));
    
            var intClaimCycle3Parameter = intClaimCycle3.HasValue ?
                new ObjectParameter("intClaimCycle3", intClaimCycle3) :
                new ObjectParameter("intClaimCycle3", typeof(int));
    
            var intDeliveryTimeParameter = intDeliveryTime.HasValue ?
                new ObjectParameter("intDeliveryTime", intDeliveryTime) :
                new ObjectParameter("intDeliveryTime", typeof(int));
    
            var intSpecialIssueParameter = intSpecialIssue.HasValue ?
                new ObjectParameter("intSpecialIssue", intSpecialIssue) :
                new ObjectParameter("intSpecialIssue", typeof(int));
    
            var strPhysDetailParameter = strPhysDetail != null ?
                new ObjectParameter("strPhysDetail", strPhysDetail) :
                new ObjectParameter("strPhysDetail", typeof(string));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            var strIssuedDateParameter = strIssuedDate != null ?
                new ObjectParameter("strIssuedDate", strIssuedDate) :
                new ObjectParameter("strIssuedDate", typeof(string));
    
            var strIssueNoParameter = strIssueNo != null ?
                new ObjectParameter("strIssueNo", strIssueNo) :
                new ObjectParameter("strIssueNo", typeof(string));
    
            var strOvIssueNoParameter = strOvIssueNo != null ?
                new ObjectParameter("strOvIssueNo", strOvIssueNo) :
                new ObjectParameter("strOvIssueNo", typeof(string));
    
            var strVolumeByPublisherParameter = strVolumeByPublisher != null ?
                new ObjectParameter("strVolumeByPublisher", strVolumeByPublisher) :
                new ObjectParameter("strVolumeByPublisher", typeof(string));
    
            var strSpecialTitleParameter = strSpecialTitle != null ?
                new ObjectParameter("strSpecialTitle", strSpecialTitle) :
                new ObjectParameter("strSpecialTitle", typeof(string));
    
            var strSummaryParameter = strSummary != null ?
                new ObjectParameter("strSummary", strSummary) :
                new ObjectParameter("strSummary", typeof(string));
    
            var intFirstIssueInYearParameter = intFirstIssueInYear.HasValue ?
                new ObjectParameter("intFirstIssueInYear", intFirstIssueInYear) :
                new ObjectParameter("intFirstIssueInYear", typeof(int));
    
            var intResetRegularityParameter = intResetRegularity.HasValue ?
                new ObjectParameter("intResetRegularity", intResetRegularity) :
                new ObjectParameter("intResetRegularity", typeof(int));
    
            var intSubscribedCopiesParameter = intSubscribedCopies.HasValue ?
                new ObjectParameter("intSubscribedCopies", intSubscribedCopies) :
                new ObjectParameter("intSubscribedCopies", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ISSUE", lngItemIDParameter, lngIssueIDParameter, intClaimCycle1Parameter, intClaimCycle2Parameter, intClaimCycle3Parameter, intDeliveryTimeParameter, intSpecialIssueParameter, strPhysDetailParameter, dblPriceParameter, strNoteParameter, strIssuedDateParameter, strIssueNoParameter, strOvIssueNoParameter, strVolumeByPublisherParameter, strSpecialTitleParameter, strSummaryParameter, intFirstIssueInYearParameter, intResetRegularityParameter, intSubscribedCopiesParameter, intOutValue);
        }
    
        public virtual int SP_UPDATE_RECEIVED_DATE(Nullable<int> lngCopyID, string strReceivedDate, string strNote)
        {
            var lngCopyIDParameter = lngCopyID.HasValue ?
                new ObjectParameter("lngCopyID", lngCopyID) :
                new ObjectParameter("lngCopyID", typeof(int));
    
            var strReceivedDateParameter = strReceivedDate != null ?
                new ObjectParameter("strReceivedDate", strReceivedDate) :
                new ObjectParameter("strReceivedDate", typeof(string));
    
            var strNoteParameter = strNote != null ?
                new ObjectParameter("strNote", strNote) :
                new ObjectParameter("strNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_RECEIVED_DATE", lngCopyIDParameter, strReceivedDateParameter, strNoteParameter);
        }
    
        public virtual int SP_UPDATE_ROUTING_RECORD(Nullable<int> intRecordID, string strAppliedDate, Nullable<int> intCopies)
        {
            var intRecordIDParameter = intRecordID.HasValue ?
                new ObjectParameter("intRecordID", intRecordID) :
                new ObjectParameter("intRecordID", typeof(int));
    
            var strAppliedDateParameter = strAppliedDate != null ?
                new ObjectParameter("strAppliedDate", strAppliedDate) :
                new ObjectParameter("strAppliedDate", typeof(string));
    
            var intCopiesParameter = intCopies.HasValue ?
                new ObjectParameter("intCopies", intCopies) :
                new ObjectParameter("intCopies", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ROUTING_RECORD", intRecordIDParameter, strAppliedDateParameter, intCopiesParameter);
        }
    
        public virtual int SP_UPDATE_SCHEDULE(Nullable<int> intLocationID, string strOffDay)
        {
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strOffDayParameter = strOffDay != null ?
                new ObjectParameter("strOffDay", strOffDay) :
                new ObjectParameter("strOffDay", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SCHEDULE", intLocationIDParameter, strOffDayParameter);
        }
    
        public virtual int SP_UPDATE_SERIAL(string transactionIDs, Nullable<int> intType, string strSerial)
        {
            var transactionIDsParameter = transactionIDs != null ?
                new ObjectParameter("TransactionIDs", transactionIDs) :
                new ObjectParameter("TransactionIDs", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            var strSerialParameter = strSerial != null ?
                new ObjectParameter("strSerial", strSerial) :
                new ObjectParameter("strSerial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SERIAL", transactionIDsParameter, intTypeParameter, strSerialParameter);
        }
    
        public virtual int SP_UPDATE_SERIAL_COUNT(string strWorkDate, Nullable<int> intType, ObjectParameter intSerial)
        {
            var strWorkDateParameter = strWorkDate != null ?
                new ObjectParameter("strWorkDate", strWorkDate) :
                new ObjectParameter("strWorkDate", typeof(string));
    
            var intTypeParameter = intType.HasValue ?
                new ObjectParameter("intType", intType) :
                new ObjectParameter("intType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SERIAL_COUNT", strWorkDateParameter, intTypeParameter, intSerial);
        }
    
        public virtual int SP_UPDATE_SYS_TEMPLATE(Nullable<int> intTemplateID, string strTitle, string strModifier, string strContent, Nullable<int> intTemplateType)
        {
            var intTemplateIDParameter = intTemplateID.HasValue ?
                new ObjectParameter("intTemplateID", intTemplateID) :
                new ObjectParameter("intTemplateID", typeof(int));
    
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strModifierParameter = strModifier != null ?
                new ObjectParameter("strModifier", strModifier) :
                new ObjectParameter("strModifier", typeof(string));
    
            var strContentParameter = strContent != null ?
                new ObjectParameter("strContent", strContent) :
                new ObjectParameter("strContent", typeof(string));
    
            var intTemplateTypeParameter = intTemplateType.HasValue ?
                new ObjectParameter("intTemplateType", intTemplateType) :
                new ObjectParameter("intTemplateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SYS_TEMPLATE", intTemplateIDParameter, strTitleParameter, strModifierParameter, strContentParameter, intTemplateTypeParameter);
        }
    
        public virtual int SP_UPDATE_WORKINGTIME(Nullable<int> intWeekDay, Nullable<int> intLocationID, string strOpen1, string strClose1, string strOpen2, string strClose2)
        {
            var intWeekDayParameter = intWeekDay.HasValue ?
                new ObjectParameter("intWeekDay", intWeekDay) :
                new ObjectParameter("intWeekDay", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            var strOpen1Parameter = strOpen1 != null ?
                new ObjectParameter("strOpen1", strOpen1) :
                new ObjectParameter("strOpen1", typeof(string));
    
            var strClose1Parameter = strClose1 != null ?
                new ObjectParameter("strClose1", strClose1) :
                new ObjectParameter("strClose1", typeof(string));
    
            var strOpen2Parameter = strOpen2 != null ?
                new ObjectParameter("strOpen2", strOpen2) :
                new ObjectParameter("strOpen2", typeof(string));
    
            var strClose2Parameter = strClose2 != null ?
                new ObjectParameter("strClose2", strClose2) :
                new ObjectParameter("strClose2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_WORKINGTIME", intWeekDayParameter, intLocationIDParameter, strOpen1Parameter, strClose1Parameter, strOpen2Parameter, strClose2Parameter);
        }
    
        public virtual int SP_UPDATELOANTYPE(Nullable<int> intID, Nullable<decimal> monFee, Nullable<byte> intFixedFee, Nullable<byte> intLoanPeriod, string strLoanType, Nullable<decimal> monOverdueFine, Nullable<byte> intRenewalPeriod, Nullable<byte> intRenewals, Nullable<byte> intTimeUnit)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            var monFeeParameter = monFee.HasValue ?
                new ObjectParameter("monFee", monFee) :
                new ObjectParameter("monFee", typeof(decimal));
    
            var intFixedFeeParameter = intFixedFee.HasValue ?
                new ObjectParameter("intFixedFee", intFixedFee) :
                new ObjectParameter("intFixedFee", typeof(byte));
    
            var intLoanPeriodParameter = intLoanPeriod.HasValue ?
                new ObjectParameter("intLoanPeriod", intLoanPeriod) :
                new ObjectParameter("intLoanPeriod", typeof(byte));
    
            var strLoanTypeParameter = strLoanType != null ?
                new ObjectParameter("strLoanType", strLoanType) :
                new ObjectParameter("strLoanType", typeof(string));
    
            var monOverdueFineParameter = monOverdueFine.HasValue ?
                new ObjectParameter("monOverdueFine", monOverdueFine) :
                new ObjectParameter("monOverdueFine", typeof(decimal));
    
            var intRenewalPeriodParameter = intRenewalPeriod.HasValue ?
                new ObjectParameter("intRenewalPeriod", intRenewalPeriod) :
                new ObjectParameter("intRenewalPeriod", typeof(byte));
    
            var intRenewalsParameter = intRenewals.HasValue ?
                new ObjectParameter("intRenewals", intRenewals) :
                new ObjectParameter("intRenewals", typeof(byte));
    
            var intTimeUnitParameter = intTimeUnit.HasValue ?
                new ObjectParameter("intTimeUnit", intTimeUnit) :
                new ObjectParameter("intTimeUnit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATELOANTYPE", intIDParameter, monFeeParameter, intFixedFeeParameter, intLoanPeriodParameter, strLoanTypeParameter, monOverdueFineParameter, intRenewalPeriodParameter, intRenewalsParameter, intTimeUnitParameter);
        }
    
        public virtual int SP_UPDATEPATRONHOLD(string strCopyNumber, Nullable<int> lngTransactionID, string strTimeOutDate, Nullable<int> lngItemID)
        {
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var lngTransactionIDParameter = lngTransactionID.HasValue ?
                new ObjectParameter("lngTransactionID", lngTransactionID) :
                new ObjectParameter("lngTransactionID", typeof(int));
    
            var strTimeOutDateParameter = strTimeOutDate != null ?
                new ObjectParameter("strTimeOutDate", strTimeOutDate) :
                new ObjectParameter("strTimeOutDate", typeof(string));
    
            var lngItemIDParameter = lngItemID.HasValue ?
                new ObjectParameter("lngItemID", lngItemID) :
                new ObjectParameter("lngItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATEPATRONHOLD", strCopyNumberParameter, lngTransactionIDParameter, strTimeOutDateParameter, lngItemIDParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SP_UPPDATE_ITEM_REVIEWER(string strReviewer, string strIDs)
        {
            var strReviewerParameter = strReviewer != null ?
                new ObjectParameter("strReviewer", strReviewer) :
                new ObjectParameter("strReviewer", typeof(string));
    
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPPDATE_ITEM_REVIEWER", strReviewerParameter, strIDsParameter);
        }
    
        public virtual int SP_WAP_CANCEL_RESEVED(string strCopyNumber, string strCode)
        {
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WAP_CANCEL_RESEVED", strCopyNumberParameter, strCodeParameter);
        }
    
        public virtual ObjectResult<SP_WAP_GET_ILLREQUEST_Result> SP_WAP_GET_ILLREQUEST(string strCode)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WAP_GET_ILLREQUEST_Result>("SP_WAP_GET_ILLREQUEST", strCodeParameter);
        }
    
        public virtual int SP_WAP_GET_ITEM_INFO(string strIDs)
        {
            var strIDsParameter = strIDs != null ?
                new ObjectParameter("strIDs", strIDs) :
                new ObjectParameter("strIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_WAP_GET_ITEM_INFO", strIDsParameter);
        }
    
        public virtual ObjectResult<SP_WAP_GET_ONHOLDED_Result> SP_WAP_GET_ONHOLDED(string strCardNo)
        {
            var strCardNoParameter = strCardNo != null ?
                new ObjectParameter("strCardNo", strCardNo) :
                new ObjectParameter("strCardNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WAP_GET_ONHOLDED_Result>("SP_WAP_GET_ONHOLDED", strCardNoParameter);
        }
    
        public virtual ObjectResult<SP_WAP_GET_ONHOLDING_Result> SP_WAP_GET_ONHOLDING(string strCopyNumber, Nullable<int> intItemID)
        {
            var strCopyNumberParameter = strCopyNumber != null ?
                new ObjectParameter("strCopyNumber", strCopyNumber) :
                new ObjectParameter("strCopyNumber", typeof(string));
    
            var intItemIDParameter = intItemID.HasValue ?
                new ObjectParameter("intItemID", intItemID) :
                new ObjectParameter("intItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WAP_GET_ONHOLDING_Result>("SP_WAP_GET_ONHOLDING", strCopyNumberParameter, intItemIDParameter);
        }
    
        public virtual ObjectResult<SP_WAP_GET_RESERVATION_Result> SP_WAP_GET_RESERVATION(string strCode)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WAP_GET_RESERVATION_Result>("SP_WAP_GET_RESERVATION", strCodeParameter);
        }
    
        public virtual ObjectResult<SP_WAP_GETDETAIL_OFITEM_Result> SP_WAP_GETDETAIL_OFITEM(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WAP_GETDETAIL_OFITEM_Result>("SP_WAP_GETDETAIL_OFITEM", intIDParameter);
        }
    
        public virtual ObjectResult<SP_WAP_HOLDING_ITEMDETAIL_Result> SP_WAP_HOLDING_ITEMDETAIL(Nullable<int> intID)
        {
            var intIDParameter = intID.HasValue ?
                new ObjectParameter("intID", intID) :
                new ObjectParameter("intID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WAP_HOLDING_ITEMDETAIL_Result>("SP_WAP_HOLDING_ITEMDETAIL", intIDParameter);
        }
    
        public virtual ObjectResult<SQ_ACQ_GET_VENDOR_SENDPO_Result> SQ_ACQ_GET_VENDOR_SENDPO(Nullable<int> intVendorID)
        {
            var intVendorIDParameter = intVendorID.HasValue ?
                new ObjectParameter("intVendorID", intVendorID) :
                new ObjectParameter("intVendorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SQ_ACQ_GET_VENDOR_SENDPO_Result>("SQ_ACQ_GET_VENDOR_SENDPO", intVendorIDParameter);
        }
    
        public virtual int SQ_CIR_PATRON_GROUP_LOC_DELETE(Nullable<int> intPatronGroupID)
        {
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SQ_CIR_PATRON_GROUP_LOC_DELETE", intPatronGroupIDParameter);
        }
    
        public virtual int SQ_CIR_PATRON_GROUP_LOC_INSERT(Nullable<int> intPatronGroupID, Nullable<int> intLocationID)
        {
            var intPatronGroupIDParameter = intPatronGroupID.HasValue ?
                new ObjectParameter("intPatronGroupID", intPatronGroupID) :
                new ObjectParameter("intPatronGroupID", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SQ_CIR_PATRON_GROUP_LOC_INSERT", intPatronGroupIDParameter, intLocationIDParameter);
        }
    
        public virtual int SQ_CIR_PATRON_GROUP_LOC_UPDATE(Nullable<int> strIDSource, Nullable<int> intLocationID)
        {
            var strIDSourceParameter = strIDSource.HasValue ?
                new ObjectParameter("strIDSource", strIDSource) :
                new ObjectParameter("strIDSource", typeof(int));
    
            var intLocationIDParameter = intLocationID.HasValue ?
                new ObjectParameter("intLocationID", intLocationID) :
                new ObjectParameter("intLocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SQ_CIR_PATRON_GROUP_LOC_UPDATE", strIDSourceParameter, intLocationIDParameter);
        }
    
        public virtual ObjectResult<FPT_SP_CATA_CHECK_EXIST_TITLE_Result> FPT_SP_CATA_CHECK_EXIST_TITLE(string strTitle, string strItemType)
        {
            var strTitleParameter = strTitle != null ?
                new ObjectParameter("strTitle", strTitle) :
                new ObjectParameter("strTitle", typeof(string));
    
            var strItemTypeParameter = strItemType != null ?
                new ObjectParameter("strItemType", strItemType) :
                new ObjectParameter("strItemType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_SP_CATA_CHECK_EXIST_TITLE_Result>("FPT_SP_CATA_CHECK_EXIST_TITLE", strTitleParameter, strItemTypeParameter);
        }
    
        public virtual ObjectResult<FPT_SP_CATA_GET_MARC_FORM_Result> FPT_SP_CATA_GET_MARC_FORM(Nullable<int> intFormID, Nullable<int> intIsAuthority)
        {
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_SP_CATA_GET_MARC_FORM_Result>("FPT_SP_CATA_GET_MARC_FORM", intFormIDParameter, intIsAuthorityParameter);
        }
    
        public virtual ObjectResult<FPT_SP_CATA_GETFIELDS_OF_FORM_Result> FPT_SP_CATA_GETFIELDS_OF_FORM(Nullable<int> intFormID, string strCreator, Nullable<int> intIsAuthority)
        {
            var intFormIDParameter = intFormID.HasValue ?
                new ObjectParameter("intFormID", intFormID) :
                new ObjectParameter("intFormID", typeof(int));
    
            var strCreatorParameter = strCreator != null ?
                new ObjectParameter("strCreator", strCreator) :
                new ObjectParameter("strCreator", typeof(string));
    
            var intIsAuthorityParameter = intIsAuthority.HasValue ?
                new ObjectParameter("intIsAuthority", intIsAuthority) :
                new ObjectParameter("intIsAuthority", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FPT_SP_CATA_GETFIELDS_OF_FORM_Result>("FPT_SP_CATA_GETFIELDS_OF_FORM", intFormIDParameter, strCreatorParameter, intIsAuthorityParameter);
        }

        public List<GET_CATALOGUE_FIELDS_Result> FPT_GET_CATALOGUE_FIELDS(int intIsAuthority, int intFormID, string strFieldCodes, string strAddedFieldCodes, int intGroupBy)
        {

            List<GET_CATALOGUE_FIELDS_Result> list = this.Database.SqlQuery<GET_CATALOGUE_FIELDS_Result>("SP_CATA_GET_CATALOGUE_FIELDS {0}, {1}, {2},{3},{4}",
                new object[] { intIsAuthority, intFormID, strFieldCodes, strAddedFieldCodes, 1 }).ToList();
            return list;
        }

        public List<SP_ILL_SEARCH_PATRON_Result> FPT_SP_ILL_SEARCH_PATRON(string strPatronName, string strPatronCode)
        {

            List<SP_ILL_SEARCH_PATRON_Result> list = this.Database.SqlQuery<SP_ILL_SEARCH_PATRON_Result>("SP_ILL_SEARCH_PATRON {0}, {1}",
                new object[] { strPatronName, strPatronCode}).ToList();
            return list;
        }



    }
}
